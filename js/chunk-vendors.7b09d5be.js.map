{"version":3,"sources":["webpack:///./node_modules/nprogress/nprogress.js","webpack:///./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js","webpack:///(webpack)/buildin/module.js","webpack:///./node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js","webpack:///./node_modules/vue-router/dist/vue-router.esm.js","webpack:///./node_modules/register-service-worker/index.js","webpack:///./node_modules/@babel/runtime/node_modules/regenerator-runtime/runtime.js","webpack:///./node_modules/@vue/shared/dist/shared.esm-bundler.js","webpack:///./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js","webpack:///./node_modules/@babel/runtime/regenerator/index.js"],"names":["root","factory","this","NProgress","Settings","settings","minimum","easing","positionUsing","speed","trickle","trickleRate","trickleSpeed","showSpinner","barSelector","spinnerSelector","parent","template","clamp","n","min","max","toBarPerc","barPositionCSS","ease","barCSS","transform","transition","configure","options","key","value","undefined","hasOwnProperty","status","set","started","isStarted","progress","render","bar","querySelector","offsetWidth","queue","next","getPositioningCSS","css","opacity","setTimeout","remove","start","work","done","force","inc","Math","random","amount","initial","current","promise","$promise","state","always","fromStart","isRendered","document","getElementById","addClass","documentElement","createElement","id","innerHTML","spinner","perc","removeElement","body","appendChild","removeClass","bodyStyle","style","vendorPrefix","pending","fn","shift","push","length","cssPrefixes","cssProps","camelCase","string","replace","match","letter","toUpperCase","getVendorProp","name","vendorName","i","capName","charAt","slice","getStyleProp","applyCss","element","prop","properties","args","arguments","hasClass","list","classList","indexOf","oldList","newList","className","substring","parentNode","removeChild","stack","warn","msg","instance","component","appWarnHandler","appContext","config","warnHandler","trace","getComponentTrace","callWithErrorHandling","join","proxy","map","vnode","formatComponentName","type","warnArgs","formatTrace","console","currentVNode","normalizedStack","last","recurseCount","parentInstance","logs","forEach","entry","formatTraceEntry","postfix","isRoot","open","close","props","formatProps","res","keys","Object","formatProp","raw","JSON","stringify","err","handleError","callWithAsyncErrorHandling","catch","values","contextVNode","cur","exposedInstance","errorInfo","errorCapturedHooks","ec","appErrorHandler","errorHandler","logError","postFlushCbs","p","Promise","resolve","isFlushing","isFlushPending","flushIndex","pendingPostFlushCbs","pendingPostFlushIndex","nextTick","then","queueJob","job","includes","queueFlush","invalidateJob","queuePostFlushCb","cb","flushJobs","flushPostFlushCbs","seen","Set","getId","Infinity","sort","a","b","Map","currentRenderingInstance","setCurrentRenderingInstance","renderComponentRoot","Component","withProxy","slots","attrs","emit","renderCache","data","setupState","ctx","result","fallthroughAttrs","shapeFlag","proxyToUse","normalizeVNode","call","getFallthroughAttrs","inheritAttrs","cloneVNode","scopeId","needScopeId","treeOwnerId","__scopeId","slotScopeId","extras","dirs","createVNode","Comment","shouldUpdateComponent","prevVNode","nextVNode","optimized","prevProps","children","prevChildren","nextProps","nextChildren","patchFlag","hasPropsChanged","dynamicProps","$stable","nextKeys","updateHOCHostEl","el","subTree","isSuspense","__isSuspense","queueEffectWithSuspense","suspense","isResolved","effects","withCtx","owner","apply","currentScopeId","scopeIdStack","pushScopeId","popScopeId","pop","withScopeId","isTeleport","__isTeleport","COMPONENTS","resolveComponent","resolveAsset","NULL_DYNAMIC_COMPONENT","Symbol","resolveDynamicComponent","warnMissing","currentInstance","camelized","capitalized","registry","self","selfName","displayName","Fragment","Text","Static","blockStack","currentBlock","openBlock","disableTracking","shouldTrack","createBlock","dynamicChildren","isVNode","__v_isVNode","isSameVNodeType","n1","n2","InternalObjectKey","normalizeKey","normalizeRef","ref","_createVNode","isBlockNode","__vccOpts","class","klass","__v_skip","anchor","target","targetAnchor","staticCount","normalizeChildren","extraProps","mergeProps","cloned","createTextVNode","text","flag","createCommentVNode","asBlock","child","String","cloneIfMounted","default","slotFlag","_","_ctx","handlersRE","ret","toMerge","test","existing","incoming","concat","event","handlerName","handler","startsWith","emitted","normalizeEmitsOptions","comp","__emits","emits","normalized","hasExtends","extends","mixins","m","isEmitListener","toLowerCase","initProps","rawProps","isStateful","isSSR","setFullProps","updateProps","rawPrevProps","rawCurrentProps","normalizePropsOptions","kebabKey","resolvePropValue","propsToUpdate","camelizedKey","needCastKeys","camelKey","opt","hasDefault","defaultValue","Function","__props","extendProps","normalizedKey","validatePropName","booleanIndex","getTypeIndex","Boolean","stringIndex","normalizedEntry","getType","ctor","toString","isSameType","expectedTypes","len","injectHook","hook","prepend","hooks","wrappedHook","__weh","isUnmounted","setCurrentInstance","unshift","createHook","lifecycle","isInSSRComponentSetup","onBeforeMount","onMounted","onBeforeUpdate","onUpdated","onBeforeUnmount","onUnmounted","onRenderTriggered","onRenderTracked","onErrorCaptured","useTransitionState","isMounted","isLeaving","isUnmounting","leavingVNodes","BaseTransitionImpl","mode","appear","persisted","onBeforeEnter","onEnter","onAfterEnter","onEnterCancelled","onBeforeLeave","onLeave","onAfterLeave","onLeaveCancelled","onBeforeAppear","onAppear","onAfterAppear","onAppearCancelled","getCurrentInstance","prevTransitionKey","getTransitionRawChildren","emptyPlaceholder","innerChild","getKeepAliveChild","enterHooks","resolveTransitionHooks","oldChild","oldInnerChild","transitionKeyChanged","getTransitionKey","leavingHooks","setTransitionHooks","afterLeave","update","delayLeave","earlyRemove","delayedLeave","leavingVNodesCache","getLeavingNodesForType","_leaveCb","BaseTransition","get","create","callHook","leavingVNode","afterHook","cancelHook","called","_enterCb","cancelled","isKeepAlive","keepComment","keyedFragmentCount","__isKeepAlive","RegExp","getName","matches","pattern","some","split","onActivated","registerKeepAliveHook","onDeactivated","__wdc","isDeactivated","injectToKeepAliveRoot","keepAliveRoot","resetShapeFlag","isInternalKey","normalizeSlotValue","normalizeSlot","rawSlot","normalizeObjectSlots","rawSlots","normalizeVNodeSlots","initSlots","updateSlots","needDeletionCheck","deletionComparisonTarget","withDirectives","directives","internalInstance","bindings","dir","arg","modifiers","mounted","updated","oldValue","invokeDirectiveHook","oldBindings","binding","DevtoolsHooks","devtools","createDevtoolsHook","COMPONENT_ADDED","COMPONENT_UPDATED","COMPONENT_REMOVED","__app","uid","createAppContext","isNativeTag","performance","globalProperties","optionMergeStrategies","isCustomElement","components","provides","createAppAPI","hydrate","rootComponent","rootProps","context","installedPlugins","app","_component","_props","_container","_context","version","v","plugin","has","install","add","mixin","directive","rootContainer","isHydrate","hasMismatch","isSVGContainer","container","namespaceURI","tagName","isComment","node","nodeType","createHydrationFunctions","rendererInternals","mt","mountComponent","patch","o","patchProp","nextSibling","insert","createComment","hydrateNode","firstChild","error","parentComponent","parentSuspense","isFragmentStart","onMismatch","handleMismatch","domType","nextNode","needToAdoptContent","outerHTML","hydrateFragment","hydrateElement","hydrateComponent","loadAsync","__asyncLoader","locateClosingAsyncAnchor","hydrateChildren","setRef","onClick","vnodeHooks","onVnodeBeforeMount","invokeVNodeHook","onVnodeMounted","textContent","l","isFragment","end","prodEffectOptions","scheduler","queuePostRenderEffect","rawRef","oldRawRef","oldRef","refs","createRenderer","baseCreateRenderer","createHydrationRenderer","createHydrationFns","hostInsert","hostRemove","hostPatchProp","forcePatchProp","hostForcePatchProp","hostCreateElement","createText","hostCreateText","hostCreateComment","setText","hostSetText","setElementText","hostSetElementText","hostParentNode","hostNextSibling","setScopeId","hostSetScopeId","cloneNode","hostCloneNode","insertStaticContent","hostInsertStaticContent","isSVG","getNextHostNode","unmount","processText","processCommentNode","mountStaticNode","processFragment","processElement","processComponent","process","internals","mountElement","patchElement","vnodeHook","is","mountChildren","unmountChildren","beforeEnter","needCallTransitionHooks","enter","oldProps","newProps","onVnodeBeforeUpdate","patchProps","prev","areChildrenSVG","patchBlockChildren","patchChildren","onVnodeUpdated","oldChildren","newChildren","fallbackContainer","oldVNode","newVNode","fragmentStartAnchor","fragmentEndAnchor","activate","updateComponent","initialVNode","createComponentInstance","renderer","setupComponent","asyncDep","registerDep","setupRenderEffect","placeholder","asyncResolved","updateComponentPreRender","bu","u","originNext","nextTree","prevTree","bm","c1","prevShapeFlag","c2","patchKeyedChildren","patchUnkeyedChildren","oldLength","newLength","commonLength","nextChild","parentAnchor","l2","e1","e2","nextPos","s1","s2","keyToNewIndexMap","j","patched","toBePatched","moved","maxNewIndexSoFar","newIndexToOldIndexMap","Array","prevChild","newIndex","increasingNewIndexSequence","getSequence","nextIndex","move","moveType","needTransition","leave","performLeave","doRemove","deactivate","shouldInvokeDirs","onVnodeBeforeUnmount","unmountComponent","onVnodeUnmounted","removeFragment","performRemove","bum","um","da","deps","_vnode","r","mc","pc","pbc","createApp","arr","c","arrI","watchEffect","effect","doWatch","INITIAL_WATCHER_VALUE","watch","source","immediate","deep","flush","onTrack","onTrigger","getter","cleanup","s","traverse","onInvalidate","baseGetter","runner","onStop","active","newValue","lazy","recordInstanceBoundEffect","instanceWatch","publicThis","bind","provide","parentProvides","inject","applyOptions","deferredData","deferredWatch","asMixin","extendsOptions","dataOptions","computed","computedOptions","methods","watchOptions","provideOptions","injectOptions","beforeMount","beforeUpdate","activated","deactivated","beforeUnmount","unmounted","renderTracked","renderTriggered","errorCaptured","globalMixins","callSyncHook","applyMixins","from","methodHandler","resolveData","dataFn","defineProperty","enumerable","configurable","createWatcher","callHookFromMixins","baseHook","selfHook","resolveMergedOptions","__merged","mergeOptions","to","strats","publicPropertiesMap","$","$el","$data","$props","$attrs","$slots","$refs","$parent","$root","$emit","$options","$forceUpdate","$nextTick","$watch","PublicInstanceProxyHandlers","accessCache","normalizedProps","publicGetter","cssModule","__cssModules","RuntimeCompiledPublicInstanceProxyHandlers","unscopables","emptyAppContext","setupContext","bc","rtg","rtc","compile","setupResult","setupStatefulComponent","Proxy","setup","createSetupContext","resolvedResult","handleSetupResult","finishComponentSetup","_rc","classifyRE","classify","str","__file","getterOrOptions","defineComponent","h","propsOrChildren","renderList","renderItem","iterator","renderSlot","fallback","slot","module","exports","webpackPolyfill","deprecate","paths","svgNS","doc","tempContainer","tempSVGContainer","nodeOps","insertBefore","tag","createElementNS","createTextNode","nodeValue","selector","setAttribute","content","temp","first","patchClass","transitionClasses","_vtc","patchStyle","cssText","setStyle","removeAttribute","importantRE","val","setProperty","prefixed","autoPrefix","prefixes","prefixCache","rawName","cached","xlinkNS","patchAttr","removeAttributeNS","setAttributeNS","isBoolean","patchDOMProp","_value","e","_getNow","Date","now","createEvent","timeStamp","cachedNow","reset","getNow","addEventListener","removeEventListener","patchEvent","prevValue","nextValue","invoker","parseName","createInvoker","optionsModifierRE","initialValue","attached","patchStopImmediatePropagation","originalStop","stopImmediatePropagation","_stopped","nativeOnRE","shouldSetAsProp","_trueValue","_falseValue","TRANSITION","ANIMATION","Transition","resolveTransitionProps","DOMTransitionPropsValidators","duration","Number","enterFromClass","enterActiveClass","enterToClass","appearFromClass","appearActiveClass","appearToClass","leaveFromClass","leaveActiveClass","leaveToClass","TransitionPropsValidators","baseProps","durations","normalizeDuration","enterDuration","leaveDuration","finishEnter","isAppear","removeTransitionClass","finishLeave","makeEnterHook","nextFrame","addTransitionClass","whenTransitionEnds","NumberOf","cls","delete","size","requestAnimationFrame","expectedType","timeout","propCount","getTransitionInfo","endEvent","ended","onEnd","styles","window","getComputedStyle","getStyleProperties","transitionDelays","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationDurations","animationTimeout","hasTransform","delays","d","toMs","toRaw","observed","positionMap","WeakMap","newPositionMap","TransitionGroupImpl","moveClass","hasCSSTransform","callPendingCbs","recordPosition","movedChildren","filter","applyTranslation","forceReflow","webkitTransform","transitionDuration","_moveCb","propertyName","cssTransitionProps","getBoundingClientRect","oldPos","newPos","dx","left","dy","top","offsetHeight","clone","display","getModelAssigner","onCompositionStart","composing","onCompositionEnd","trigger","initEvent","dispatchEvent","vModelText","trim","number","_assign","castToNumber","domValue","activeElement","systemModifiers","modifierGuards","stop","stopPropagation","prevent","preventDefault","currentTarget","ctrl","ctrlKey","shiftKey","alt","altKey","meta","metaKey","button","middle","right","exact","withModifiers","guard","keyNames","esc","space","up","down","withKeys","eventKey","k","rendererOptions","ensureRenderer","mount","containerOrSelector","normalizeContainer","hasSymbol","toStringTag","PolySymbol","matchedRouteKey","viewDepthKey","routerKey","routeLocationKey","isBrowser","isESModule","obj","__esModule","assign","applyToParams","params","newParams","isArray","noop","TRAILING_SLASH_RE","removeTrailingSlash","path","parseURL","parseQuery","location","currentLocation","query","searchString","hash","searchPos","hashPos","fullPath","stringifyURL","stringifyQuery","stripBase","pathname","base","isSameRouteLocation","aLastIndex","matched","bLastIndex","isSameRouteRecord","isSameRouteLocationParams","aliasOf","isSameRouteLocationParamsValue","isEquivalentArray","every","NavigationType","NavigationDirection","normalizeBase","baseEl","getAttribute","BEFORE_HASH_RE","createHref","getElementPosition","offset","docRect","elRect","behavior","computeScrollPosition","pageXOffset","pageYOffset","scrollToPosition","position","scrollToOptions","positionEl","isIdSelector","foundEl","scrollTo","getScrollKey","delta","history","scrollPositions","saveScrollPosition","scrollPosition","getSavedScrollPosition","scroll","createBaseLocation","protocol","host","createCurrentLocation","search","pathFromHash","useHistoryListeners","historyState","listeners","teardowns","pauseState","popStateHandler","fromState","listener","direction","forward","back","unknown","pauseListeners","listen","callback","teardown","index","splice","beforeUnloadListener","replaceState","destroy","buildState","replaced","computeScroll","useHistoryStateNavigation","changeLocation","url","currentState","createWebHistory","historyNavigation","historyListeners","go","triggerListeners","routerHistory","createWebHashHistory","HASH_RE","AMPERSAND_RE","SLASH_RE","EQUAL_RE","IM_RE","ENC_BRACKET_OPEN_RE","ENC_BRACKET_CLOSE_RE","ENC_CARET_RE","ENC_BACKTICK_RE","ENC_CURLY_OPEN_RE","ENC_PIPE_RE","ENC_CURLY_CLOSE_RE","commonEncode","encodeURI","encodeHash","encodeQueryProperty","encodePath","encodeParam","decode","decodeURIComponent","hasLeadingIM","searchParams","rawValue","currentValue","normalizeQuery","normalizedQuery","isRouteLocation","route","isRouteName","START_LOCATION_NORMALIZED","redirectedFrom","NavigationFailureSymbol","NavigationFailureType","ErrorTypeMessages","stringifyRoute","createRouterError","Error","isNavigationFailure","propertiesToLog","BASE_PARAM_PATTERN","BASE_PATH_PARSER_OPTIONS","sensitive","strict","REGEX_CHARS_RE","tokensToParser","segments","extraOptions","score","segment","segmentScores","tokenIndex","token","subSegmentScore","repeatable","optional","regexp","re","message","subPattern","parse","avoidDuplicatedSlash","param","compareScoreArray","diff","comparePathParserScore","aScore","bScore","ROOT_TOKEN","VALID_PARAM_RE","tokenizePath","crash","buffer","previousState","tokens","finalizeSegment","char","customRe","consumeBuffer","addCharToBuffer","createRouteRecordMatcher","record","parser","existingKeys","matcher","alias","createRouterMatcher","routes","globalOptions","matchers","matcherMap","getRecordMatcher","addRoute","originalRecord","isRootAdd","mainNormalizedRecord","normalizeRouteRecord","normalizedRecords","aliases","originalMatcher","normalizedRecord","parentPath","connectingSlash","checkMissingParamsInAbsolutePath","checkSameParams","isAliasRecord","removeRoute","insertMatcher","matcherRef","getRoutes","paramsFromLocation","find","parentMatcher","mergeMetaFields","redirect","normalizeRecordProps","instances","leaveGuards","updateGuards","enterCallbacks","propsObject","reduce","defaults","partialOptions","isSameParam","useCallbacks","handlers","guardToPromiseFn","enterCallbackArray","reject","valid","canOnlyBeCalledOnce","extractComponentsGuards","guardType","guards","rawComponent","isRouteComponent","componentPromise","resolved","resolvedComponent","useLink","router","currentRoute","activeRecordIndex","routeMatched","currentMatched","findIndex","parentRecordPath","getOriginalPath","isActive","includesParams","isExactActive","navigate","guardEvent","href","RouterLinkImpl","required","activeClass","exactActiveClass","custom","link","elClass","getLinkClass","linkActiveClass","linkExactActiveClass","RouterLink","defaultPrevented","outer","inner","innerValue","outerValue","propClass","globalClass","defaultClass","RouterViewImpl","warnDeprecatedUsage","depth","matchedRouteRef","viewRef","matchedRoute","ViewComponent","routePropsOption","routeProps","currentName","RouterView","parentName","createRouter","parseQuery$1","stringifyQuery$1","scrollBehavior","beforeGuards","beforeResolveGuards","afterGuards","pendingLocation","scrollRestoration","normalizeParams","paramValue","encodeParams","decodeParams","parentOrRoute","recordMatcher","routeMatcher","hasRoute","rawLocation","locationNormalized","matcherLocation","locationAsObject","checkCanceledNavigation","pushWithRedirect","targetLocation","lastMatched","newTargetLocation","toLocation","failure","handleScroll","triggerError","finalizeNavigation","triggerAfterEach","checkCanceledNavigationAndReject","reverse","leavingRecords","updatingRecords","extractChangingRecords","canceledNavigationCheck","runGuardQueue","isPush","isFirstNavigation","markAsReady","removeHistoryListener","setupListeners","_from","info","ready","readyHandlers","errorHandlers","isReady","removeError","removeAfterEach","_to","installedApps","beforeEach","beforeResolve","afterEach","onError","$router","reactiveRoute","unmountApp","enteringRecords","useRouter","useRoute","waitWindowLoad","isLocalhost","hostname","register","swUrl","registrationOptions","navigator","checkValidServiceWorker","serviceWorker","registration","registerValidSW","onLine","waiting","onupdatefound","installingWorker","installing","onstatechange","controller","fetch","response","unregister","headers","runtime","Op","prototype","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","Context","_invoke","makeInvokeMethod","tryCatch","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","defineIteratorMethods","method","AsyncIterator","PromiseImpl","invoke","__await","unwrapped","previousPromise","enqueue","callInvokeWithMethodAndArg","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","nextLoc","pushTryEntry","locs","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","iterable","iteratorMethod","isNaN","constructor","isGeneratorFunction","genFun","mark","setPrototypeOf","__proto__","awrap","async","iter","object","skipTempReset","rootEntry","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","makeMap","expectsLowerCase","GLOBALS_WHITE_LISTED","isGloballyWhitelisted","specialBooleanAttrs","isSpecialBooleanAttr","normalizeStyle","item","isString","parseStringStyle","isObject","listDelimiterRE","propertyDelimiterRE","tmp","normalizeClass","HTML_TAGS","SVG_TAGS","isHTMLTag","isSVGTag","looseCompareArrays","equal","looseEqual","aValidType","isDate","bValidType","getTime","aKeysCount","bKeysCount","aHasKey","bHasKey","looseIndexOf","toDisplayString","replacer","_key","entries","isPlainObject","EMPTY_OBJ","EMPTY_ARR","NOOP","NO","onRE","isOn","extend","isFunction","isSymbol","isPromise","objectToString","toTypeString","toRawType","isReservedProp","cacheStringFunction","cache","hit","camelizeRE","camelize","hyphenateRE","hyphenate","capitalize","hasChanged","invokeArrayFns","fns","def","toNumber","parseFloat","targetMap","effectStack","activeEffect","ITERATE_KEY","MAP_KEY_ITERATE_KEY","isEffect","_isEffect","createReactiveEffect","enableTracking","resetTracking","trackStack","pauseTracking","track","depsMap","dep","oldTarget","effectsToAdd","isAddOrDelete","run","builtInSymbols","getOwnPropertyNames","createGetter","shallowGet","readonlyGet","shallowReadonlyGet","arrayInstrumentations","isReadonly","shallow","receiver","targetIsArray","Reflect","isRef","readonly","reactive","createSetter","shallowSet","hadKey","deleteProperty","ownKeys","mutableHandlers","readonlyHandlers","shallowReactiveHandlers","toReactive","toReadonly","toShallow","get$1","rawKey","has$1","proto","set$1","deleteEntry","del","clear","hadItems","createForEach","thisArg","wrappedCallback","createIterableMethod","isMap","isPair","isKeyOnly","innerIterator","createReadonlyMethod","mutableInstrumentations","shallowInstrumentations","readonlyInstrumentations","iteratorMethods","createInstrumentationGetter","instrumentations","mutableCollectionHandlers","shallowCollectionHandlers","readonlyCollectionHandlers","collectionTypes","WeakSet","isObservableType","canObserve","isFrozen","createReactiveObject","shallowReactive","baseHandlers","collectionHandlers","isReactive","isProxy","convert","__v_isRef","createRef","shallowRef","newVal","unref","setter","dirty","require"],"mappings":"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","file":"js/chunk-vendors.7b09d5be.js","sourcesContent":["/* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress\n * @license MIT */\n\n;(function(root, factory) {\n\n  if (typeof define === 'function' && define.amd) {\n    define(factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.NProgress = factory();\n  }\n\n})(this, function() {\n  var NProgress = {};\n\n  NProgress.version = '0.2.0';\n\n  var Settings = NProgress.settings = {\n    minimum: 0.08,\n    easing: 'ease',\n    positionUsing: '',\n    speed: 200,\n    trickle: true,\n    trickleRate: 0.02,\n    trickleSpeed: 800,\n    showSpinner: true,\n    barSelector: '[role=\"bar\"]',\n    spinnerSelector: '[role=\"spinner\"]',\n    parent: 'body',\n    template: '<div class=\"bar\" role=\"bar\"><div class=\"peg\"></div></div><div class=\"spinner\" role=\"spinner\"><div class=\"spinner-icon\"></div></div>'\n  };\n\n  /**\n   * Updates configuration.\n   *\n   *     NProgress.configure({\n   *       minimum: 0.1\n   *     });\n   */\n  NProgress.configure = function(options) {\n    var key, value;\n    for (key in options) {\n      value = options[key];\n      if (value !== undefined && options.hasOwnProperty(key)) Settings[key] = value;\n    }\n\n    return this;\n  };\n\n  /**\n   * Last number.\n   */\n\n  NProgress.status = null;\n\n  /**\n   * Sets the progress bar status, where `n` is a number from `0.0` to `1.0`.\n   *\n   *     NProgress.set(0.4);\n   *     NProgress.set(1.0);\n   */\n\n  NProgress.set = function(n) {\n    var started = NProgress.isStarted();\n\n    n = clamp(n, Settings.minimum, 1);\n    NProgress.status = (n === 1 ? null : n);\n\n    var progress = NProgress.render(!started),\n        bar      = progress.querySelector(Settings.barSelector),\n        speed    = Settings.speed,\n        ease     = Settings.easing;\n\n    progress.offsetWidth; /* Repaint */\n\n    queue(function(next) {\n      // Set positionUsing if it hasn't already been set\n      if (Settings.positionUsing === '') Settings.positionUsing = NProgress.getPositioningCSS();\n\n      // Add transition\n      css(bar, barPositionCSS(n, speed, ease));\n\n      if (n === 1) {\n        // Fade out\n        css(progress, { \n          transition: 'none', \n          opacity: 1 \n        });\n        progress.offsetWidth; /* Repaint */\n\n        setTimeout(function() {\n          css(progress, { \n            transition: 'all ' + speed + 'ms linear', \n            opacity: 0 \n          });\n          setTimeout(function() {\n            NProgress.remove();\n            next();\n          }, speed);\n        }, speed);\n      } else {\n        setTimeout(next, speed);\n      }\n    });\n\n    return this;\n  };\n\n  NProgress.isStarted = function() {\n    return typeof NProgress.status === 'number';\n  };\n\n  /**\n   * Shows the progress bar.\n   * This is the same as setting the status to 0%, except that it doesn't go backwards.\n   *\n   *     NProgress.start();\n   *\n   */\n  NProgress.start = function() {\n    if (!NProgress.status) NProgress.set(0);\n\n    var work = function() {\n      setTimeout(function() {\n        if (!NProgress.status) return;\n        NProgress.trickle();\n        work();\n      }, Settings.trickleSpeed);\n    };\n\n    if (Settings.trickle) work();\n\n    return this;\n  };\n\n  /**\n   * Hides the progress bar.\n   * This is the *sort of* the same as setting the status to 100%, with the\n   * difference being `done()` makes some placebo effect of some realistic motion.\n   *\n   *     NProgress.done();\n   *\n   * If `true` is passed, it will show the progress bar even if its hidden.\n   *\n   *     NProgress.done(true);\n   */\n\n  NProgress.done = function(force) {\n    if (!force && !NProgress.status) return this;\n\n    return NProgress.inc(0.3 + 0.5 * Math.random()).set(1);\n  };\n\n  /**\n   * Increments by a random amount.\n   */\n\n  NProgress.inc = function(amount) {\n    var n = NProgress.status;\n\n    if (!n) {\n      return NProgress.start();\n    } else {\n      if (typeof amount !== 'number') {\n        amount = (1 - n) * clamp(Math.random() * n, 0.1, 0.95);\n      }\n\n      n = clamp(n + amount, 0, 0.994);\n      return NProgress.set(n);\n    }\n  };\n\n  NProgress.trickle = function() {\n    return NProgress.inc(Math.random() * Settings.trickleRate);\n  };\n\n  /**\n   * Waits for all supplied jQuery promises and\n   * increases the progress as the promises resolve.\n   *\n   * @param $promise jQUery Promise\n   */\n  (function() {\n    var initial = 0, current = 0;\n\n    NProgress.promise = function($promise) {\n      if (!$promise || $promise.state() === \"resolved\") {\n        return this;\n      }\n\n      if (current === 0) {\n        NProgress.start();\n      }\n\n      initial++;\n      current++;\n\n      $promise.always(function() {\n        current--;\n        if (current === 0) {\n            initial = 0;\n            NProgress.done();\n        } else {\n            NProgress.set((initial - current) / initial);\n        }\n      });\n\n      return this;\n    };\n\n  })();\n\n  /**\n   * (Internal) renders the progress bar markup based on the `template`\n   * setting.\n   */\n\n  NProgress.render = function(fromStart) {\n    if (NProgress.isRendered()) return document.getElementById('nprogress');\n\n    addClass(document.documentElement, 'nprogress-busy');\n    \n    var progress = document.createElement('div');\n    progress.id = 'nprogress';\n    progress.innerHTML = Settings.template;\n\n    var bar      = progress.querySelector(Settings.barSelector),\n        perc     = fromStart ? '-100' : toBarPerc(NProgress.status || 0),\n        parent   = document.querySelector(Settings.parent),\n        spinner;\n    \n    css(bar, {\n      transition: 'all 0 linear',\n      transform: 'translate3d(' + perc + '%,0,0)'\n    });\n\n    if (!Settings.showSpinner) {\n      spinner = progress.querySelector(Settings.spinnerSelector);\n      spinner && removeElement(spinner);\n    }\n\n    if (parent != document.body) {\n      addClass(parent, 'nprogress-custom-parent');\n    }\n\n    parent.appendChild(progress);\n    return progress;\n  };\n\n  /**\n   * Removes the element. Opposite of render().\n   */\n\n  NProgress.remove = function() {\n    removeClass(document.documentElement, 'nprogress-busy');\n    removeClass(document.querySelector(Settings.parent), 'nprogress-custom-parent');\n    var progress = document.getElementById('nprogress');\n    progress && removeElement(progress);\n  };\n\n  /**\n   * Checks if the progress bar is rendered.\n   */\n\n  NProgress.isRendered = function() {\n    return !!document.getElementById('nprogress');\n  };\n\n  /**\n   * Determine which positioning CSS rule to use.\n   */\n\n  NProgress.getPositioningCSS = function() {\n    // Sniff on document.body.style\n    var bodyStyle = document.body.style;\n\n    // Sniff prefixes\n    var vendorPrefix = ('WebkitTransform' in bodyStyle) ? 'Webkit' :\n                       ('MozTransform' in bodyStyle) ? 'Moz' :\n                       ('msTransform' in bodyStyle) ? 'ms' :\n                       ('OTransform' in bodyStyle) ? 'O' : '';\n\n    if (vendorPrefix + 'Perspective' in bodyStyle) {\n      // Modern browsers with 3D support, e.g. Webkit, IE10\n      return 'translate3d';\n    } else if (vendorPrefix + 'Transform' in bodyStyle) {\n      // Browsers without 3D support, e.g. IE9\n      return 'translate';\n    } else {\n      // Browsers without translate() support, e.g. IE7-8\n      return 'margin';\n    }\n  };\n\n  /**\n   * Helpers\n   */\n\n  function clamp(n, min, max) {\n    if (n < min) return min;\n    if (n > max) return max;\n    return n;\n  }\n\n  /**\n   * (Internal) converts a percentage (`0..1`) to a bar translateX\n   * percentage (`-100%..0%`).\n   */\n\n  function toBarPerc(n) {\n    return (-1 + n) * 100;\n  }\n\n\n  /**\n   * (Internal) returns the correct CSS for changing the bar's\n   * position given an n percentage, and speed and ease from Settings\n   */\n\n  function barPositionCSS(n, speed, ease) {\n    var barCSS;\n\n    if (Settings.positionUsing === 'translate3d') {\n      barCSS = { transform: 'translate3d('+toBarPerc(n)+'%,0,0)' };\n    } else if (Settings.positionUsing === 'translate') {\n      barCSS = { transform: 'translate('+toBarPerc(n)+'%,0)' };\n    } else {\n      barCSS = { 'margin-left': toBarPerc(n)+'%' };\n    }\n\n    barCSS.transition = 'all '+speed+'ms '+ease;\n\n    return barCSS;\n  }\n\n  /**\n   * (Internal) Queues a function to be executed.\n   */\n\n  var queue = (function() {\n    var pending = [];\n    \n    function next() {\n      var fn = pending.shift();\n      if (fn) {\n        fn(next);\n      }\n    }\n\n    return function(fn) {\n      pending.push(fn);\n      if (pending.length == 1) next();\n    };\n  })();\n\n  /**\n   * (Internal) Applies css properties to an element, similar to the jQuery \n   * css method.\n   *\n   * While this helper does assist with vendor prefixed property names, it \n   * does not perform any manipulation of values prior to setting styles.\n   */\n\n  var css = (function() {\n    var cssPrefixes = [ 'Webkit', 'O', 'Moz', 'ms' ],\n        cssProps    = {};\n\n    function camelCase(string) {\n      return string.replace(/^-ms-/, 'ms-').replace(/-([\\da-z])/gi, function(match, letter) {\n        return letter.toUpperCase();\n      });\n    }\n\n    function getVendorProp(name) {\n      var style = document.body.style;\n      if (name in style) return name;\n\n      var i = cssPrefixes.length,\n          capName = name.charAt(0).toUpperCase() + name.slice(1),\n          vendorName;\n      while (i--) {\n        vendorName = cssPrefixes[i] + capName;\n        if (vendorName in style) return vendorName;\n      }\n\n      return name;\n    }\n\n    function getStyleProp(name) {\n      name = camelCase(name);\n      return cssProps[name] || (cssProps[name] = getVendorProp(name));\n    }\n\n    function applyCss(element, prop, value) {\n      prop = getStyleProp(prop);\n      element.style[prop] = value;\n    }\n\n    return function(element, properties) {\n      var args = arguments,\n          prop, \n          value;\n\n      if (args.length == 2) {\n        for (prop in properties) {\n          value = properties[prop];\n          if (value !== undefined && properties.hasOwnProperty(prop)) applyCss(element, prop, value);\n        }\n      } else {\n        applyCss(element, args[1], args[2]);\n      }\n    }\n  })();\n\n  /**\n   * (Internal) Determines if an element or space separated list of class names contains a class name.\n   */\n\n  function hasClass(element, name) {\n    var list = typeof element == 'string' ? element : classList(element);\n    return list.indexOf(' ' + name + ' ') >= 0;\n  }\n\n  /**\n   * (Internal) Adds a class to an element.\n   */\n\n  function addClass(element, name) {\n    var oldList = classList(element),\n        newList = oldList + name;\n\n    if (hasClass(oldList, name)) return; \n\n    // Trim the opening space.\n    element.className = newList.substring(1);\n  }\n\n  /**\n   * (Internal) Removes a class from an element.\n   */\n\n  function removeClass(element, name) {\n    var oldList = classList(element),\n        newList;\n\n    if (!hasClass(element, name)) return;\n\n    // Replace the class name.\n    newList = oldList.replace(' ' + name + ' ', ' ');\n\n    // Trim the opening and closing spaces.\n    element.className = newList.substring(1, newList.length - 1);\n  }\n\n  /**\n   * (Internal) Gets a space separated list of the class names on the element. \n   * The list is wrapped with a single space on each end to facilitate finding \n   * matches within the list.\n   */\n\n  function classList(element) {\n    return (' ' + (element.className || '') + ' ').replace(/\\s+/gi, ' ');\n  }\n\n  /**\n   * (Internal) Removes an element from the DOM.\n   */\n\n  function removeElement(element) {\n    element && element.parentNode && element.parentNode.removeChild(element);\n  }\n\n  return NProgress;\n});\n\n","import { pauseTracking, resetTracking, isRef, toRaw, isProxy, shallowReactive, trigger, effect, stop, isReactive, reactive, shallowReadonly, track, computed as computed$1, ref } from '@vue/reactivity';\nexport { customRef, isProxy, isReactive, isReadonly, isRef, markRaw, reactive, readonly, ref, shallowReactive, shallowReadonly, shallowRef, toRaw, toRef, toRefs, triggerRef, unref } from '@vue/reactivity';\nimport { isString, isFunction, isPromise, isArray, extend, isOn, camelize, capitalize, EMPTY_ARR, normalizeClass, isObject, normalizeStyle, EMPTY_OBJ, hyphenate, hasOwn, def, isReservedProp, toRawType, makeMap, remove, invokeArrayFns, NO, NOOP, hasChanged, isGloballyWhitelisted } from '@vue/shared';\nexport { camelize, capitalize, toDisplayString } from '@vue/shared';\n\nconst stack = [];\r\nfunction pushWarningContext(vnode) {\r\n    stack.push(vnode);\r\n}\r\nfunction popWarningContext() {\r\n    stack.pop();\r\n}\r\nfunction warn(msg, ...args) {\r\n    // avoid props formatting or warn handler tracking deps that might be mutated\r\n    // during patch, leading to infinite recursion.\r\n    pauseTracking();\r\n    const instance = stack.length ? stack[stack.length - 1].component : null;\r\n    const appWarnHandler = instance && instance.appContext.config.warnHandler;\r\n    const trace = getComponentTrace();\r\n    if (appWarnHandler) {\r\n        callWithErrorHandling(appWarnHandler, instance, 11 /* APP_WARN_HANDLER */, [\r\n            msg + args.join(''),\r\n            instance && instance.proxy,\r\n            trace\r\n                .map(({ vnode }) => `at <${formatComponentName(instance, vnode.type)}>`)\r\n                .join('\\n'),\r\n            trace\r\n        ]);\r\n    }\r\n    else {\r\n        const warnArgs = [`[Vue warn]: ${msg}`, ...args];\r\n        /* istanbul ignore if */\r\n        if (trace.length &&\r\n            // avoid spamming console during tests\r\n            !false) {\r\n            warnArgs.push(`\\n`, ...formatTrace(trace));\r\n        }\r\n        console.warn(...warnArgs);\r\n    }\r\n    resetTracking();\r\n}\r\nfunction getComponentTrace() {\r\n    let currentVNode = stack[stack.length - 1];\r\n    if (!currentVNode) {\r\n        return [];\r\n    }\r\n    // we can't just use the stack because it will be incomplete during updates\r\n    // that did not start from the root. Re-construct the parent chain using\r\n    // instance parent pointers.\r\n    const normalizedStack = [];\r\n    while (currentVNode) {\r\n        const last = normalizedStack[0];\r\n        if (last && last.vnode === currentVNode) {\r\n            last.recurseCount++;\r\n        }\r\n        else {\r\n            normalizedStack.push({\r\n                vnode: currentVNode,\r\n                recurseCount: 0\r\n            });\r\n        }\r\n        const parentInstance = currentVNode.component && currentVNode.component.parent;\r\n        currentVNode = parentInstance && parentInstance.vnode;\r\n    }\r\n    return normalizedStack;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatTrace(trace) {\r\n    const logs = [];\r\n    trace.forEach((entry, i) => {\r\n        logs.push(...(i === 0 ? [] : [`\\n`]), ...formatTraceEntry(entry));\r\n    });\r\n    return logs;\r\n}\r\nfunction formatTraceEntry({ vnode, recurseCount }) {\r\n    const postfix = recurseCount > 0 ? `... (${recurseCount} recursive calls)` : ``;\r\n    const isRoot = vnode.component ? vnode.component.parent == null : false;\r\n    const open = ` at <${formatComponentName(vnode.component, vnode.type, isRoot)}`;\r\n    const close = `>` + postfix;\r\n    return vnode.props\r\n        ? [open, ...formatProps(vnode.props), close]\r\n        : [open + close];\r\n}\r\n/* istanbul ignore next */\r\nfunction formatProps(props) {\r\n    const res = [];\r\n    const keys = Object.keys(props);\r\n    keys.slice(0, 3).forEach(key => {\r\n        res.push(...formatProp(key, props[key]));\r\n    });\r\n    if (keys.length > 3) {\r\n        res.push(` ...`);\r\n    }\r\n    return res;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatProp(key, value, raw) {\r\n    if (isString(value)) {\r\n        value = JSON.stringify(value);\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if (typeof value === 'number' ||\r\n        typeof value === 'boolean' ||\r\n        value == null) {\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if (isRef(value)) {\r\n        value = formatProp(key, toRaw(value.value), true);\r\n        return raw ? value : [`${key}=Ref<`, value, `>`];\r\n    }\r\n    else if (isFunction(value)) {\r\n        return [`${key}=fn${value.name ? `<${value.name}>` : ``}`];\r\n    }\r\n    else {\r\n        value = toRaw(value);\r\n        return raw ? value : [`${key}=`, value];\r\n    }\r\n}\n\nconst ErrorTypeStrings = {\r\n    [\"bc\" /* BEFORE_CREATE */]: 'beforeCreate hook',\r\n    [\"c\" /* CREATED */]: 'created hook',\r\n    [\"bm\" /* BEFORE_MOUNT */]: 'beforeMount hook',\r\n    [\"m\" /* MOUNTED */]: 'mounted hook',\r\n    [\"bu\" /* BEFORE_UPDATE */]: 'beforeUpdate hook',\r\n    [\"u\" /* UPDATED */]: 'updated',\r\n    [\"bum\" /* BEFORE_UNMOUNT */]: 'beforeUnmount hook',\r\n    [\"um\" /* UNMOUNTED */]: 'unmounted hook',\r\n    [\"a\" /* ACTIVATED */]: 'activated hook',\r\n    [\"da\" /* DEACTIVATED */]: 'deactivated hook',\r\n    [\"ec\" /* ERROR_CAPTURED */]: 'errorCaptured hook',\r\n    [\"rtc\" /* RENDER_TRACKED */]: 'renderTracked hook',\r\n    [\"rtg\" /* RENDER_TRIGGERED */]: 'renderTriggered hook',\r\n    [0 /* SETUP_FUNCTION */]: 'setup function',\r\n    [1 /* RENDER_FUNCTION */]: 'render function',\r\n    [2 /* WATCH_GETTER */]: 'watcher getter',\r\n    [3 /* WATCH_CALLBACK */]: 'watcher callback',\r\n    [4 /* WATCH_CLEANUP */]: 'watcher cleanup function',\r\n    [5 /* NATIVE_EVENT_HANDLER */]: 'native event handler',\r\n    [6 /* COMPONENT_EVENT_HANDLER */]: 'component event handler',\r\n    [7 /* VNODE_HOOK */]: 'vnode hook',\r\n    [8 /* DIRECTIVE_HOOK */]: 'directive hook',\r\n    [9 /* TRANSITION_HOOK */]: 'transition hook',\r\n    [10 /* APP_ERROR_HANDLER */]: 'app errorHandler',\r\n    [11 /* APP_WARN_HANDLER */]: 'app warnHandler',\r\n    [12 /* FUNCTION_REF */]: 'ref function',\r\n    [13 /* ASYNC_COMPONENT_LOADER */]: 'async component loader',\r\n    [14 /* SCHEDULER */]: 'scheduler flush. This is likely a Vue internals bug. ' +\r\n        'Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/vue-next'\r\n};\r\nfunction callWithErrorHandling(fn, instance, type, args) {\r\n    let res;\r\n    try {\r\n        res = args ? fn(...args) : fn();\r\n    }\r\n    catch (err) {\r\n        handleError(err, instance, type);\r\n    }\r\n    return res;\r\n}\r\nfunction callWithAsyncErrorHandling(fn, instance, type, args) {\r\n    if (isFunction(fn)) {\r\n        const res = callWithErrorHandling(fn, instance, type, args);\r\n        if (res && isPromise(res)) {\r\n            res.catch(err => {\r\n                handleError(err, instance, type);\r\n            });\r\n        }\r\n        return res;\r\n    }\r\n    const values = [];\r\n    for (let i = 0; i < fn.length; i++) {\r\n        values.push(callWithAsyncErrorHandling(fn[i], instance, type, args));\r\n    }\r\n    return values;\r\n}\r\nfunction handleError(err, instance, type) {\r\n    const contextVNode = instance ? instance.vnode : null;\r\n    if (instance) {\r\n        let cur = instance.parent;\r\n        // the exposed instance is the render proxy to keep it consistent with 2.x\r\n        const exposedInstance = instance.proxy;\r\n        // in production the hook receives only the error code\r\n        const errorInfo = (process.env.NODE_ENV !== 'production') ? ErrorTypeStrings[type] : type;\r\n        while (cur) {\r\n            const errorCapturedHooks = cur.ec;\r\n            if (errorCapturedHooks) {\r\n                for (let i = 0; i < errorCapturedHooks.length; i++) {\r\n                    if (errorCapturedHooks[i](err, exposedInstance, errorInfo)) {\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            cur = cur.parent;\r\n        }\r\n        // app-level handling\r\n        const appErrorHandler = instance.appContext.config.errorHandler;\r\n        if (appErrorHandler) {\r\n            callWithErrorHandling(appErrorHandler, null, 10 /* APP_ERROR_HANDLER */, [err, exposedInstance, errorInfo]);\r\n            return;\r\n        }\r\n    }\r\n    logError(err, type, contextVNode);\r\n}\r\nfunction logError(err, type, contextVNode) {\r\n    // default behavior is crash in prod & test, recover in dev.\r\n    if ((process.env.NODE_ENV !== 'production') && ( !false)) {\r\n        const info = ErrorTypeStrings[type];\r\n        if (contextVNode) {\r\n            pushWarningContext(contextVNode);\r\n        }\r\n        warn(`Unhandled error${info ? ` during execution of ${info}` : ``}`);\r\n        console.error(err);\r\n        if (contextVNode) {\r\n            popWarningContext();\r\n        }\r\n    }\r\n    else {\r\n        throw err;\r\n    }\r\n}\n\nconst queue = [];\r\nconst postFlushCbs = [];\r\nconst p = Promise.resolve();\r\nlet isFlushing = false;\r\nlet isFlushPending = false;\r\nlet flushIndex = 0;\r\nlet pendingPostFlushCbs = null;\r\nlet pendingPostFlushIndex = 0;\r\nconst RECURSION_LIMIT = 100;\r\nfunction nextTick(fn) {\r\n    return fn ? p.then(fn) : p;\r\n}\r\nfunction queueJob(job) {\r\n    if (!queue.includes(job, flushIndex)) {\r\n        queue.push(job);\r\n        queueFlush();\r\n    }\r\n}\r\nfunction invalidateJob(job) {\r\n    const i = queue.indexOf(job);\r\n    if (i > -1) {\r\n        queue[i] = null;\r\n    }\r\n}\r\nfunction queuePostFlushCb(cb) {\r\n    if (!isArray(cb)) {\r\n        if (!pendingPostFlushCbs ||\r\n            !pendingPostFlushCbs.includes(cb, pendingPostFlushIndex)) {\r\n            postFlushCbs.push(cb);\r\n        }\r\n    }\r\n    else {\r\n        // if cb is an array, it is a component lifecycle hook which can only be\r\n        // triggered by a job, which is already deduped in the main queue, so\r\n        // we can skip dupicate check here to improve perf\r\n        postFlushCbs.push(...cb);\r\n    }\r\n    queueFlush();\r\n}\r\nfunction queueFlush() {\r\n    if (!isFlushing && !isFlushPending) {\r\n        isFlushPending = true;\r\n        nextTick(flushJobs);\r\n    }\r\n}\r\nfunction flushPostFlushCbs(seen) {\r\n    if (postFlushCbs.length) {\r\n        pendingPostFlushCbs = [...new Set(postFlushCbs)];\r\n        postFlushCbs.length = 0;\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            seen = seen || new Map();\r\n        }\r\n        for (pendingPostFlushIndex = 0; pendingPostFlushIndex < pendingPostFlushCbs.length; pendingPostFlushIndex++) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkRecursiveUpdates(seen, pendingPostFlushCbs[pendingPostFlushIndex]);\r\n            }\r\n            pendingPostFlushCbs[pendingPostFlushIndex]();\r\n        }\r\n        pendingPostFlushCbs = null;\r\n        pendingPostFlushIndex = 0;\r\n    }\r\n}\r\nconst getId = (job) => (job.id == null ? Infinity : job.id);\r\nfunction flushJobs(seen) {\r\n    isFlushPending = false;\r\n    isFlushing = true;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        seen = seen || new Map();\r\n    }\r\n    // Sort queue before flush.\r\n    // This ensures that:\r\n    // 1. Components are updated from parent to child. (because parent is always\r\n    //    created before the child so its render effect will have smaller\r\n    //    priority number)\r\n    // 2. If a component is unmounted during a parent component's update,\r\n    //    its update can be skipped.\r\n    // Jobs can never be null before flush starts, since they are only invalidated\r\n    // during execution of another flushed job.\r\n    queue.sort((a, b) => getId(a) - getId(b));\r\n    for (flushIndex = 0; flushIndex < queue.length; flushIndex++) {\r\n        const job = queue[flushIndex];\r\n        if (job) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkRecursiveUpdates(seen, job);\r\n            }\r\n            callWithErrorHandling(job, null, 14 /* SCHEDULER */);\r\n        }\r\n    }\r\n    flushIndex = 0;\r\n    queue.length = 0;\r\n    flushPostFlushCbs(seen);\r\n    isFlushing = false;\r\n    // some postFlushCb queued jobs!\r\n    // keep flushing until it drains.\r\n    if (queue.length || postFlushCbs.length) {\r\n        flushJobs(seen);\r\n    }\r\n}\r\nfunction checkRecursiveUpdates(seen, fn) {\r\n    if (!seen.has(fn)) {\r\n        seen.set(fn, 1);\r\n    }\r\n    else {\r\n        const count = seen.get(fn);\r\n        if (count > RECURSION_LIMIT) {\r\n            throw new Error('Maximum recursive updates exceeded. ' +\r\n                \"You may have code that is mutating state in your component's \" +\r\n                'render function or updated hook or watcher source function.');\r\n        }\r\n        else {\r\n            seen.set(fn, count + 1);\r\n        }\r\n    }\r\n}\n\nlet isHmrUpdating = false;\r\nconst hmrDirtyComponents = new Set();\r\n// Expose the HMR runtime on the global object\r\n// This makes it entirely tree-shakable without polluting the exports and makes\r\n// it easier to be used in toolings like vue-loader\r\n// Note: for a component to be eligible for HMR it also needs the __hmrId option\r\n// to be set so that its instances can be registered / removed.\r\nif ((process.env.NODE_ENV !== 'production')) {\r\n    const globalObject = typeof global !== 'undefined'\r\n        ? global\r\n        : typeof self !== 'undefined'\r\n            ? self\r\n            : typeof window !== 'undefined'\r\n                ? window\r\n                : {};\r\n    globalObject.__VUE_HMR_RUNTIME__ = {\r\n        createRecord: tryWrap(createRecord),\r\n        rerender: tryWrap(rerender),\r\n        reload: tryWrap(reload)\r\n    };\r\n}\r\nconst map = new Map();\r\nfunction registerHMR(instance) {\r\n    const id = instance.type.__hmrId;\r\n    let record = map.get(id);\r\n    if (!record) {\r\n        createRecord(id);\r\n        record = map.get(id);\r\n    }\r\n    record.add(instance);\r\n}\r\nfunction unregisterHMR(instance) {\r\n    map.get(instance.type.__hmrId).delete(instance);\r\n}\r\nfunction createRecord(id) {\r\n    if (map.has(id)) {\r\n        return false;\r\n    }\r\n    map.set(id, new Set());\r\n    return true;\r\n}\r\nfunction rerender(id, newRender) {\r\n    const record = map.get(id);\r\n    if (!record)\r\n        return;\r\n    // Array.from creates a snapshot which avoids the set being mutated during\r\n    // updates\r\n    Array.from(record).forEach(instance => {\r\n        if (newRender) {\r\n            instance.render = newRender;\r\n        }\r\n        instance.renderCache = [];\r\n        // this flag forces child components with slot content to update\r\n        isHmrUpdating = true;\r\n        instance.update();\r\n        isHmrUpdating = false;\r\n    });\r\n}\r\nfunction reload(id, newComp) {\r\n    const record = map.get(id);\r\n    if (!record)\r\n        return;\r\n    // Array.from creates a snapshot which avoids the set being mutated during\r\n    // updates\r\n    Array.from(record).forEach(instance => {\r\n        const comp = instance.type;\r\n        if (!hmrDirtyComponents.has(comp)) {\r\n            // 1. Update existing comp definition to match new one\r\n            extend(comp, newComp);\r\n            for (const key in comp) {\r\n                if (!(key in newComp)) {\r\n                    delete comp[key];\r\n                }\r\n            }\r\n            // 2. Mark component dirty. This forces the renderer to replace the component\r\n            // on patch.\r\n            hmrDirtyComponents.add(comp);\r\n            // 3. Make sure to unmark the component after the reload.\r\n            queuePostFlushCb(() => {\r\n                hmrDirtyComponents.delete(comp);\r\n            });\r\n        }\r\n        if (instance.parent) {\r\n            // 4. Force the parent instance to re-render. This will cause all updated\r\n            // components to be unmounted and re-mounted. Queue the update so that we\r\n            // don't end up forcing the same parent to re-render multiple times.\r\n            queueJob(instance.parent.update);\r\n        }\r\n        else if (instance.appContext.reload) {\r\n            // root instance mounted via createApp() has a reload method\r\n            instance.appContext.reload();\r\n        }\r\n        else if (typeof window !== 'undefined') {\r\n            // root instance inside tree created via raw render(). Force reload.\r\n            window.location.reload();\r\n        }\r\n        else {\r\n            console.warn('[HMR] Root or manually mounted instance modified. Full reload required.');\r\n        }\r\n    });\r\n}\r\nfunction tryWrap(fn) {\r\n    return (id, arg) => {\r\n        try {\r\n            return fn(id, arg);\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            console.warn(`[HMR] Something went wrong during Vue component hot-reload. ` +\r\n                `Full reload required.`);\r\n        }\r\n    };\r\n}\n\n// mark the current rendering instance for asset resolution (e.g.\r\n// resolveComponent, resolveDirective) during render\r\nlet currentRenderingInstance = null;\r\nfunction setCurrentRenderingInstance(instance) {\r\n    currentRenderingInstance = instance;\r\n}\r\n// dev only flag to track whether $attrs was used during render.\r\n// If $attrs was used during render then the warning for failed attrs\r\n// fallthrough can be suppressed.\r\nlet accessedAttrs = false;\r\nfunction markAttrsAccessed() {\r\n    accessedAttrs = true;\r\n}\r\nfunction renderComponentRoot(instance) {\r\n    const { type: Component, parent, vnode, proxy, withProxy, props, slots, attrs, emit, render, renderCache, data, setupState, ctx } = instance;\r\n    let result;\r\n    currentRenderingInstance = instance;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        accessedAttrs = false;\r\n    }\r\n    try {\r\n        let fallthroughAttrs;\r\n        if (vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */) {\r\n            // withProxy is a proxy with a different `has` trap only for\r\n            // runtime-compiled render functions using `with` block.\r\n            const proxyToUse = withProxy || proxy;\r\n            result = normalizeVNode(render.call(proxyToUse, proxyToUse, renderCache, props, setupState, data, ctx));\r\n            fallthroughAttrs = attrs;\r\n        }\r\n        else {\r\n            // functional\r\n            const render = Component;\r\n            // in dev, mark attrs accessed if optional props (attrs === props)\r\n            if ((process.env.NODE_ENV !== 'production') && attrs === props) {\r\n                markAttrsAccessed();\r\n            }\r\n            result = normalizeVNode(render.length > 1\r\n                ? render(props, (process.env.NODE_ENV !== 'production')\r\n                    ? {\r\n                        get attrs() {\r\n                            markAttrsAccessed();\r\n                            return attrs;\r\n                        },\r\n                        slots,\r\n                        emit\r\n                    }\r\n                    : { attrs, slots, emit })\r\n                : render(props, null /* we know it doesn't need it */));\r\n            fallthroughAttrs = Component.props ? attrs : getFallthroughAttrs(attrs);\r\n        }\r\n        // attr merging\r\n        // in dev mode, comments are preserved, and it's possible for a template\r\n        // to have comments along side the root element which makes it a fragment\r\n        let root = result;\r\n        let setRoot = undefined;\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            ;\r\n            [root, setRoot] = getChildRoot(result);\r\n        }\r\n        if (Component.inheritAttrs !== false &&\r\n            fallthroughAttrs &&\r\n            Object.keys(fallthroughAttrs).length) {\r\n            if (root.shapeFlag & 1 /* ELEMENT */ ||\r\n                root.shapeFlag & 6 /* COMPONENT */) {\r\n                root = cloneVNode(root, fallthroughAttrs);\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production') && !accessedAttrs && root.type !== Comment) {\r\n                const allAttrs = Object.keys(attrs);\r\n                const eventAttrs = [];\r\n                const extraAttrs = [];\r\n                for (let i = 0, l = allAttrs.length; i < l; i++) {\r\n                    const key = allAttrs[i];\r\n                    if (isOn(key)) {\r\n                        // ignore v-model handlers when they fail to fallthrough\r\n                        if (!key.startsWith('onUpdate:')) {\r\n                            // remove `on`, lowercase first letter to reflect event casing\r\n                            // accurately\r\n                            eventAttrs.push(key[2].toLowerCase() + key.slice(3));\r\n                        }\r\n                    }\r\n                    else {\r\n                        extraAttrs.push(key);\r\n                    }\r\n                }\r\n                if (extraAttrs.length) {\r\n                    warn(`Extraneous non-props attributes (` +\r\n                        `${extraAttrs.join(', ')}) ` +\r\n                        `were passed to component but could not be automatically inherited ` +\r\n                        `because component renders fragment or text root nodes.`);\r\n                }\r\n                if (eventAttrs.length) {\r\n                    warn(`Extraneous non-emits event listeners (` +\r\n                        `${eventAttrs.join(', ')}) ` +\r\n                        `were passed to component but could not be automatically inherited ` +\r\n                        `because component renders fragment or text root nodes. ` +\r\n                        `If the listener is intended to be a component custom event listener only, ` +\r\n                        `declare it using the \"emits\" option.`);\r\n                }\r\n            }\r\n        }\r\n        // inherit scopeId\r\n        const scopeId = vnode.scopeId;\r\n        // vite#536: if subtree root is created from parent slot if would already\r\n        // have the correct scopeId, in this case adding the scopeId will cause\r\n        // it to be removed if the original slot vnode is reused.\r\n        const needScopeId = scopeId && root.scopeId !== scopeId;\r\n        const treeOwnerId = parent && parent.type.__scopeId;\r\n        const slotScopeId = treeOwnerId && treeOwnerId !== scopeId ? treeOwnerId + '-s' : null;\r\n        if (needScopeId || slotScopeId) {\r\n            const extras = {};\r\n            if (needScopeId)\r\n                extras[scopeId] = '';\r\n            if (slotScopeId)\r\n                extras[slotScopeId] = '';\r\n            root = cloneVNode(root, extras);\r\n        }\r\n        // inherit directives\r\n        if (vnode.dirs) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isElementRoot(root)) {\r\n                warn(`Runtime directive used on component with non-element root node. ` +\r\n                    `The directives will not function as intended.`);\r\n            }\r\n            root.dirs = vnode.dirs;\r\n        }\r\n        // inherit transition data\r\n        if (vnode.transition) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isElementRoot(root)) {\r\n                warn(`Component inside <Transition> renders non-element root node ` +\r\n                    `that cannot be animated.`);\r\n            }\r\n            root.transition = vnode.transition;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && setRoot) {\r\n            setRoot(root);\r\n        }\r\n        else {\r\n            result = root;\r\n        }\r\n    }\r\n    catch (err) {\r\n        handleError(err, instance, 1 /* RENDER_FUNCTION */);\r\n        result = createVNode(Comment);\r\n    }\r\n    currentRenderingInstance = null;\r\n    return result;\r\n}\r\nconst getChildRoot = (vnode) => {\r\n    if (vnode.type !== Fragment) {\r\n        return [vnode, undefined];\r\n    }\r\n    const rawChildren = vnode.children;\r\n    const dynamicChildren = vnode.dynamicChildren;\r\n    const children = rawChildren.filter(child => {\r\n        return !(isVNode(child) && child.type === Comment);\r\n    });\r\n    if (children.length !== 1) {\r\n        return [vnode, undefined];\r\n    }\r\n    const childRoot = children[0];\r\n    const index = rawChildren.indexOf(childRoot);\r\n    const dynamicIndex = dynamicChildren\r\n        ? dynamicChildren.indexOf(childRoot)\r\n        : null;\r\n    const setRoot = (updatedRoot) => {\r\n        rawChildren[index] = updatedRoot;\r\n        if (dynamicIndex !== null)\r\n            dynamicChildren[dynamicIndex] = updatedRoot;\r\n    };\r\n    return [normalizeVNode(childRoot), setRoot];\r\n};\r\nconst getFallthroughAttrs = (attrs) => {\r\n    let res;\r\n    for (const key in attrs) {\r\n        if (key === 'class' || key === 'style' || isOn(key)) {\r\n            (res || (res = {}))[key] = attrs[key];\r\n        }\r\n    }\r\n    return res;\r\n};\r\nconst isElementRoot = (vnode) => {\r\n    return (vnode.shapeFlag & 6 /* COMPONENT */ ||\r\n        vnode.shapeFlag & 1 /* ELEMENT */ ||\r\n        vnode.type === Comment // potential v-if branch switch\r\n    );\r\n};\r\nfunction shouldUpdateComponent(prevVNode, nextVNode, optimized) {\r\n    const { props: prevProps, children: prevChildren } = prevVNode;\r\n    const { props: nextProps, children: nextChildren, patchFlag } = nextVNode;\r\n    // Parent component's render function was hot-updated. Since this may have\r\n    // caused the child component's slots content to have changed, we need to\r\n    // force the child to update as well.\r\n    if ((process.env.NODE_ENV !== 'production') && (prevChildren || nextChildren) && isHmrUpdating) {\r\n        return true;\r\n    }\r\n    // force child update for runtime directive or transition on component vnode.\r\n    if (nextVNode.dirs || nextVNode.transition) {\r\n        return true;\r\n    }\r\n    if (patchFlag > 0) {\r\n        if (patchFlag & 1024 /* DYNAMIC_SLOTS */) {\r\n            // slot content that references values that might have changed,\r\n            // e.g. in a v-for\r\n            return true;\r\n        }\r\n        if (patchFlag & 16 /* FULL_PROPS */) {\r\n            if (!prevProps) {\r\n                return !!nextProps;\r\n            }\r\n            // presence of this flag indicates props are always non-null\r\n            return hasPropsChanged(prevProps, nextProps);\r\n        }\r\n        else if (patchFlag & 8 /* PROPS */) {\r\n            const dynamicProps = nextVNode.dynamicProps;\r\n            for (let i = 0; i < dynamicProps.length; i++) {\r\n                const key = dynamicProps[i];\r\n                if (nextProps[key] !== prevProps[key]) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if (!optimized) {\r\n        // this path is only taken by manually written render functions\r\n        // so presence of any children leads to a forced update\r\n        if (prevChildren || nextChildren) {\r\n            if (!nextChildren || !nextChildren.$stable) {\r\n                return true;\r\n            }\r\n        }\r\n        if (prevProps === nextProps) {\r\n            return false;\r\n        }\r\n        if (!prevProps) {\r\n            return !!nextProps;\r\n        }\r\n        if (!nextProps) {\r\n            return true;\r\n        }\r\n        return hasPropsChanged(prevProps, nextProps);\r\n    }\r\n    return false;\r\n}\r\nfunction hasPropsChanged(prevProps, nextProps) {\r\n    const nextKeys = Object.keys(nextProps);\r\n    if (nextKeys.length !== Object.keys(prevProps).length) {\r\n        return true;\r\n    }\r\n    for (let i = 0; i < nextKeys.length; i++) {\r\n        const key = nextKeys[i];\r\n        if (nextProps[key] !== prevProps[key]) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction updateHOCHostEl({ vnode, parent }, el // HostNode\r\n) {\r\n    while (parent && parent.subTree === vnode) {\r\n        (vnode = parent.vnode).el = el;\r\n        parent = parent.parent;\r\n    }\r\n}\n\nconst isSuspense = (type) => type.__isSuspense;\r\n// Suspense exposes a component-like API, and is treated like a component\r\n// in the compiler, but internally it's a special built-in type that hooks\r\n// directly into the renderer.\r\nconst SuspenseImpl = {\r\n    // In order to make Suspense tree-shakable, we need to avoid importing it\r\n    // directly in the renderer. The renderer checks for the __isSuspense flag\r\n    // on a vnode's type and calls the `process` method, passing in renderer\r\n    // internals.\r\n    __isSuspense: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, \r\n    // platform-specific impl passed from renderer\r\n    rendererInternals) {\r\n        if (n1 == null) {\r\n            mountSuspense(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, rendererInternals);\r\n        }\r\n        else {\r\n            patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, optimized, rendererInternals);\r\n        }\r\n    },\r\n    hydrate: hydrateSuspense\r\n};\r\n// Force-casted public typing for h and TSX props inference\r\nconst Suspense = ( SuspenseImpl\r\n    );\r\nfunction mountSuspense(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, rendererInternals) {\r\n    const { p: patch, o: { createElement } } = rendererInternals;\r\n    const hiddenContainer = createElement('div');\r\n    const suspense = (n2.suspense = createSuspenseBoundary(n2, parentSuspense, parentComponent, container, hiddenContainer, anchor, isSVG, optimized, rendererInternals));\r\n    // start mounting the content subtree in an off-dom container\r\n    patch(null, suspense.subTree, hiddenContainer, null, parentComponent, suspense, isSVG, optimized);\r\n    // now check if we have encountered any async deps\r\n    if (suspense.deps > 0) {\r\n        // mount the fallback tree\r\n        patch(null, suspense.fallbackTree, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n        isSVG, optimized);\r\n        n2.el = suspense.fallbackTree.el;\r\n    }\r\n    else {\r\n        // Suspense has no async deps. Just resolve.\r\n        suspense.resolve();\r\n    }\r\n}\r\nfunction patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, optimized, { p: patch }) {\r\n    const suspense = (n2.suspense = n1.suspense);\r\n    suspense.vnode = n2;\r\n    const { content, fallback } = normalizeSuspenseChildren(n2);\r\n    const oldSubTree = suspense.subTree;\r\n    const oldFallbackTree = suspense.fallbackTree;\r\n    if (!suspense.isResolved) {\r\n        patch(oldSubTree, content, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, optimized);\r\n        if (suspense.deps > 0) {\r\n            // still pending. patch the fallback tree.\r\n            patch(oldFallbackTree, fallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n            isSVG, optimized);\r\n            n2.el = fallback.el;\r\n        }\r\n        // If deps somehow becomes 0 after the patch it means the patch caused an\r\n        // async dep component to unmount and removed its dep. It will cause the\r\n        // suspense to resolve and we don't need to do anything here.\r\n    }\r\n    else {\r\n        // just normal patch inner content as a fragment\r\n        patch(oldSubTree, content, container, anchor, parentComponent, suspense, isSVG, optimized);\r\n        n2.el = content.el;\r\n    }\r\n    suspense.subTree = content;\r\n    suspense.fallbackTree = fallback;\r\n}\r\nlet hasWarned = false;\r\nfunction createSuspenseBoundary(vnode, parent, parentComponent, container, hiddenContainer, anchor, isSVG, optimized, rendererInternals, isHydrating = false) {\r\n    /* istanbul ignore if */\r\n    if ((process.env.NODE_ENV !== 'production') && !false && !hasWarned) {\r\n        hasWarned = true;\r\n        // @ts-ignore `console.info` cannot be null error\r\n        console[console.info ? 'info' : 'log'](`<Suspense> is an experimental feature and its API will likely change.`);\r\n    }\r\n    const { p: patch, m: move, um: unmount, n: next, o: { parentNode } } = rendererInternals;\r\n    const getCurrentTree = () => suspense.isResolved || suspense.isHydrating\r\n        ? suspense.subTree\r\n        : suspense.fallbackTree;\r\n    const { content, fallback } = normalizeSuspenseChildren(vnode);\r\n    const suspense = {\r\n        vnode,\r\n        parent,\r\n        parentComponent,\r\n        isSVG,\r\n        optimized,\r\n        container,\r\n        hiddenContainer,\r\n        anchor,\r\n        deps: 0,\r\n        subTree: content,\r\n        fallbackTree: fallback,\r\n        isHydrating,\r\n        isResolved: false,\r\n        isUnmounted: false,\r\n        effects: [],\r\n        resolve() {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (suspense.isResolved) {\r\n                    throw new Error(`resolveSuspense() is called on an already resolved suspense boundary.`);\r\n                }\r\n                if (suspense.isUnmounted) {\r\n                    throw new Error(`resolveSuspense() is called on an already unmounted suspense boundary.`);\r\n                }\r\n            }\r\n            const { vnode, subTree, fallbackTree, effects, parentComponent, container } = suspense;\r\n            if (suspense.isHydrating) {\r\n                suspense.isHydrating = false;\r\n            }\r\n            else {\r\n                // this is initial anchor on mount\r\n                let { anchor } = suspense;\r\n                // unmount fallback tree\r\n                if (fallbackTree.el) {\r\n                    // if the fallback tree was mounted, it may have been moved\r\n                    // as part of a parent suspense. get the latest anchor for insertion\r\n                    anchor = next(fallbackTree);\r\n                    unmount(fallbackTree, parentComponent, suspense, true);\r\n                }\r\n                // move content from off-dom container to actual container\r\n                move(subTree, container, anchor, 0 /* ENTER */);\r\n            }\r\n            const el = (vnode.el = subTree.el);\r\n            // suspense as the root node of a component...\r\n            if (parentComponent && parentComponent.subTree === vnode) {\r\n                parentComponent.vnode.el = el;\r\n                updateHOCHostEl(parentComponent, el);\r\n            }\r\n            // check if there is a pending parent suspense\r\n            let parent = suspense.parent;\r\n            let hasUnresolvedAncestor = false;\r\n            while (parent) {\r\n                if (!parent.isResolved) {\r\n                    // found a pending parent suspense, merge buffered post jobs\r\n                    // into that parent\r\n                    parent.effects.push(...effects);\r\n                    hasUnresolvedAncestor = true;\r\n                    break;\r\n                }\r\n                parent = parent.parent;\r\n            }\r\n            // no pending parent suspense, flush all jobs\r\n            if (!hasUnresolvedAncestor) {\r\n                queuePostFlushCb(effects);\r\n            }\r\n            suspense.isResolved = true;\r\n            suspense.effects = [];\r\n            // invoke @resolve event\r\n            const onResolve = vnode.props && vnode.props.onResolve;\r\n            if (isFunction(onResolve)) {\r\n                onResolve();\r\n            }\r\n        },\r\n        recede() {\r\n            suspense.isResolved = false;\r\n            const { vnode, subTree, fallbackTree, parentComponent, container, hiddenContainer, isSVG, optimized } = suspense;\r\n            // move content tree back to the off-dom container\r\n            const anchor = next(subTree);\r\n            move(subTree, hiddenContainer, null, 1 /* LEAVE */);\r\n            // remount the fallback tree\r\n            patch(null, fallbackTree, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n            isSVG, optimized);\r\n            const el = (vnode.el = fallbackTree.el);\r\n            // suspense as the root node of a component...\r\n            if (parentComponent && parentComponent.subTree === vnode) {\r\n                parentComponent.vnode.el = el;\r\n                updateHOCHostEl(parentComponent, el);\r\n            }\r\n            // invoke @recede event\r\n            const onRecede = vnode.props && vnode.props.onRecede;\r\n            if (isFunction(onRecede)) {\r\n                onRecede();\r\n            }\r\n        },\r\n        move(container, anchor, type) {\r\n            move(getCurrentTree(), container, anchor, type);\r\n            suspense.container = container;\r\n        },\r\n        next() {\r\n            return next(getCurrentTree());\r\n        },\r\n        registerDep(instance, setupRenderEffect) {\r\n            // suspense is already resolved, need to recede.\r\n            // use queueJob so it's handled synchronously after patching the current\r\n            // suspense tree\r\n            if (suspense.isResolved) {\r\n                queueJob(() => {\r\n                    suspense.recede();\r\n                });\r\n            }\r\n            const hydratedEl = instance.vnode.el;\r\n            suspense.deps++;\r\n            instance\r\n                .asyncDep.catch(err => {\r\n                handleError(err, instance, 0 /* SETUP_FUNCTION */);\r\n            })\r\n                .then(asyncSetupResult => {\r\n                // retry when the setup() promise resolves.\r\n                // component may have been unmounted before resolve.\r\n                if (instance.isUnmounted || suspense.isUnmounted) {\r\n                    return;\r\n                }\r\n                suspense.deps--;\r\n                // retry from this component\r\n                instance.asyncResolved = true;\r\n                const { vnode } = instance;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(vnode);\r\n                }\r\n                handleSetupResult(instance, asyncSetupResult);\r\n                if (hydratedEl) {\r\n                    // vnode may have been replaced if an update happened before the\r\n                    // async dep is resolved.\r\n                    vnode.el = hydratedEl;\r\n                }\r\n                setupRenderEffect(instance, vnode, \r\n                // component may have been moved before resolve.\r\n                // if this is not a hydration, instance.subTree will be the comment\r\n                // placeholder.\r\n                hydratedEl\r\n                    ? parentNode(hydratedEl)\r\n                    : parentNode(instance.subTree.el), \r\n                // anchor will not be used if this is hydration, so only need to\r\n                // consider the comment placeholder case.\r\n                hydratedEl ? null : next(instance.subTree), suspense, isSVG, optimized);\r\n                updateHOCHostEl(instance, vnode.el);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n                if (suspense.deps === 0) {\r\n                    suspense.resolve();\r\n                }\r\n            });\r\n        },\r\n        unmount(parentSuspense, doRemove) {\r\n            suspense.isUnmounted = true;\r\n            unmount(suspense.subTree, parentComponent, parentSuspense, doRemove);\r\n            if (!suspense.isResolved) {\r\n                unmount(suspense.fallbackTree, parentComponent, parentSuspense, doRemove);\r\n            }\r\n        }\r\n    };\r\n    return suspense;\r\n}\r\nfunction hydrateSuspense(node, vnode, parentComponent, parentSuspense, isSVG, optimized, rendererInternals, hydrateNode) {\r\n    /* eslint-disable no-restricted-globals */\r\n    const suspense = (vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, node.parentNode, document.createElement('div'), null, isSVG, optimized, rendererInternals, true /* hydrating */));\r\n    // there are two possible scenarios for server-rendered suspense:\r\n    // - success: ssr content should be fully resolved\r\n    // - failure: ssr content should be the fallback branch.\r\n    // however, on the client we don't really know if it has failed or not\r\n    // attempt to hydrate the DOM assuming it has succeeded, but we still\r\n    // need to construct a suspense boundary first\r\n    const result = hydrateNode(node, suspense.subTree, parentComponent, suspense, optimized);\r\n    if (suspense.deps === 0) {\r\n        suspense.resolve();\r\n    }\r\n    return result;\r\n    /* eslint-enable no-restricted-globals */\r\n}\r\nfunction normalizeSuspenseChildren(vnode) {\r\n    const { shapeFlag, children } = vnode;\r\n    if (shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        const { default: d, fallback } = children;\r\n        return {\r\n            content: normalizeVNode(isFunction(d) ? d() : d),\r\n            fallback: normalizeVNode(isFunction(fallback) ? fallback() : fallback)\r\n        };\r\n    }\r\n    else {\r\n        return {\r\n            content: normalizeVNode(children),\r\n            fallback: normalizeVNode(null)\r\n        };\r\n    }\r\n}\r\nfunction queueEffectWithSuspense(fn, suspense) {\r\n    if (suspense && !suspense.isResolved) {\r\n        if (isArray(fn)) {\r\n            suspense.effects.push(...fn);\r\n        }\r\n        else {\r\n            suspense.effects.push(fn);\r\n        }\r\n    }\r\n    else {\r\n        queuePostFlushCb(fn);\r\n    }\r\n}\n\n/**\r\n * Wrap a slot function to memoize current rendering instance\r\n * @private\r\n */\r\nfunction withCtx(fn, ctx = currentRenderingInstance) {\r\n    if (!ctx)\r\n        return fn;\r\n    return function renderFnWithContext() {\r\n        const owner = currentRenderingInstance;\r\n        setCurrentRenderingInstance(ctx);\r\n        const res = fn.apply(null, arguments);\r\n        setCurrentRenderingInstance(owner);\r\n        return res;\r\n    };\r\n}\n\n// SFC scoped style ID management.\r\nlet currentScopeId = null;\r\nconst scopeIdStack = [];\r\n/**\r\n * @private\r\n */\r\nfunction pushScopeId(id) {\r\n    scopeIdStack.push((currentScopeId = id));\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction popScopeId() {\r\n    scopeIdStack.pop();\r\n    currentScopeId = scopeIdStack[scopeIdStack.length - 1] || null;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction withScopeId(id) {\r\n    return ((fn) => withCtx(function () {\r\n        pushScopeId(id);\r\n        const res = fn.apply(this, arguments);\r\n        popScopeId();\r\n        return res;\r\n    }));\r\n}\n\nconst isTeleport = (type) => type.__isTeleport;\r\nconst isTeleportDisabled = (props) => props && (props.disabled || props.disabled === '');\r\nconst resolveTarget = (props, select) => {\r\n    const targetSelector = props && props.to;\r\n    if (isString(targetSelector)) {\r\n        if (!select) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Current renderer does not support string target for Teleports. ` +\r\n                    `(missing querySelector renderer option)`);\r\n            return null;\r\n        }\r\n        else {\r\n            const target = select(targetSelector);\r\n            if (!target) {\r\n                (process.env.NODE_ENV !== 'production') &&\r\n                    warn(`Failed to locate Teleport target with selector \"${targetSelector}\". ` +\r\n                        `Note the target element must exist before the component is mounted - ` +\r\n                        `i.e. the target cannot be rendered by the component itself, and ` +\r\n                        `ideally should be outside of the entire Vue component tree.`);\r\n            }\r\n            return target;\r\n        }\r\n    }\r\n    else {\r\n        if ((process.env.NODE_ENV !== 'production') && !targetSelector) {\r\n            warn(`Invalid Teleport target: ${targetSelector}`);\r\n        }\r\n        return targetSelector;\r\n    }\r\n};\r\nconst TeleportImpl = {\r\n    __isTeleport: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, internals) {\r\n        const { mc: mountChildren, pc: patchChildren, pbc: patchBlockChildren, o: { insert, querySelector, createText, createComment } } = internals;\r\n        const disabled = isTeleportDisabled(n2.props);\r\n        const { shapeFlag, children } = n2;\r\n        if (n1 == null) {\r\n            // insert anchors in the main view\r\n            const placeholder = (n2.el = (process.env.NODE_ENV !== 'production')\r\n                ? createComment('teleport start')\r\n                : createText(''));\r\n            const mainAnchor = (n2.anchor = (process.env.NODE_ENV !== 'production')\r\n                ? createComment('teleport end')\r\n                : createText(''));\r\n            insert(placeholder, container, anchor);\r\n            insert(mainAnchor, container, anchor);\r\n            const target = (n2.target = resolveTarget(n2.props, querySelector));\r\n            const targetAnchor = (n2.targetAnchor = createText(''));\r\n            if (target) {\r\n                insert(targetAnchor, target);\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production')) {\r\n                warn('Invalid Teleport target on mount:', target, `(${typeof target})`);\r\n            }\r\n            const mount = (container, anchor) => {\r\n                // Teleport *always* has Array children. This is enforced in both the\r\n                // compiler and vnode children normalization.\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    mountChildren(children, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n            };\r\n            if (disabled) {\r\n                mount(container, mainAnchor);\r\n            }\r\n            else if (target) {\r\n                mount(target, targetAnchor);\r\n            }\r\n        }\r\n        else {\r\n            // update content\r\n            n2.el = n1.el;\r\n            const mainAnchor = (n2.anchor = n1.anchor);\r\n            const target = (n2.target = n1.target);\r\n            const targetAnchor = (n2.targetAnchor = n1.targetAnchor);\r\n            const wasDisabled = isTeleportDisabled(n1.props);\r\n            const currentContainer = wasDisabled ? container : target;\r\n            const currentAnchor = wasDisabled ? mainAnchor : targetAnchor;\r\n            if (n2.dynamicChildren) {\r\n                // fast path when the teleport happens to be a block root\r\n                patchBlockChildren(n1.dynamicChildren, n2.dynamicChildren, currentContainer, parentComponent, parentSuspense, isSVG);\r\n            }\r\n            else if (!optimized) {\r\n                patchChildren(n1, n2, currentContainer, currentAnchor, parentComponent, parentSuspense, isSVG);\r\n            }\r\n            if (disabled) {\r\n                if (!wasDisabled) {\r\n                    // enabled -> disabled\r\n                    // move into main container\r\n                    moveTeleport(n2, container, mainAnchor, internals, 1 /* TOGGLE */);\r\n                }\r\n            }\r\n            else {\r\n                // target changed\r\n                if ((n2.props && n2.props.to) !== (n1.props && n1.props.to)) {\r\n                    const nextTarget = (n2.target = resolveTarget(n2.props, querySelector));\r\n                    if (nextTarget) {\r\n                        moveTeleport(n2, nextTarget, null, internals, 0 /* TARGET_CHANGE */);\r\n                    }\r\n                    else if ((process.env.NODE_ENV !== 'production')) {\r\n                        warn('Invalid Teleport target on update:', target, `(${typeof target})`);\r\n                    }\r\n                }\r\n                else if (wasDisabled) {\r\n                    // disabled -> enabled\r\n                    // move into teleport target\r\n                    moveTeleport(n2, target, targetAnchor, internals, 1 /* TOGGLE */);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    remove(vnode, { r: remove, o: { remove: hostRemove } }) {\r\n        const { shapeFlag, children, anchor } = vnode;\r\n        hostRemove(anchor);\r\n        if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            for (let i = 0; i < children.length; i++) {\r\n                remove(children[i]);\r\n            }\r\n        }\r\n    },\r\n    move: moveTeleport,\r\n    hydrate: hydrateTeleport\r\n};\r\nfunction moveTeleport(vnode, container, parentAnchor, { o: { insert }, m: move }, moveType = 2 /* REORDER */) {\r\n    // move target anchor if this is a target change.\r\n    if (moveType === 0 /* TARGET_CHANGE */) {\r\n        insert(vnode.targetAnchor, container, parentAnchor);\r\n    }\r\n    const { el, anchor, shapeFlag, children, props } = vnode;\r\n    const isReorder = moveType === 2 /* REORDER */;\r\n    // move main view anchor if this is a re-order.\r\n    if (isReorder) {\r\n        insert(el, container, parentAnchor);\r\n    }\r\n    // if this is a re-order and teleport is enabled (content is in target)\r\n    // do not move children. So the opposite is: only move children if this\r\n    // is not a reorder, or the teleport is disabled\r\n    if (!isReorder || isTeleportDisabled(props)) {\r\n        // Teleport has either Array children or no children.\r\n        if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            for (let i = 0; i < children.length; i++) {\r\n                move(children[i], container, parentAnchor, 2 /* REORDER */);\r\n            }\r\n        }\r\n    }\r\n    // move main view anchor if this is a re-order.\r\n    if (isReorder) {\r\n        insert(anchor, container, parentAnchor);\r\n    }\r\n}\r\nfunction hydrateTeleport(node, vnode, parentComponent, parentSuspense, optimized, { o: { nextSibling, parentNode, querySelector } }, hydrateChildren) {\r\n    const target = (vnode.target = resolveTarget(vnode.props, querySelector));\r\n    if (target) {\r\n        // if multiple teleports rendered to the same target element, we need to\r\n        // pick up from where the last teleport finished instead of the first node\r\n        const targetNode = target._lpa || target.firstChild;\r\n        if (vnode.shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            if (isTeleportDisabled(vnode.props)) {\r\n                vnode.anchor = hydrateChildren(nextSibling(node), vnode, parentNode(node), parentComponent, parentSuspense, optimized);\r\n                vnode.targetAnchor = targetNode;\r\n            }\r\n            else {\r\n                vnode.anchor = nextSibling(node);\r\n                vnode.targetAnchor = hydrateChildren(targetNode, vnode, target, parentComponent, parentSuspense, optimized);\r\n            }\r\n            target._lpa =\r\n                vnode.targetAnchor && nextSibling(vnode.targetAnchor);\r\n        }\r\n    }\r\n    return vnode.anchor && nextSibling(vnode.anchor);\r\n}\r\n// Force-casted public typing for h and TSX props inference\r\nconst Teleport = TeleportImpl;\n\nconst COMPONENTS = 'components';\r\nconst DIRECTIVES = 'directives';\r\n/**\r\n * @private\r\n */\r\nfunction resolveComponent(name) {\r\n    return resolveAsset(COMPONENTS, name) || name;\r\n}\r\nconst NULL_DYNAMIC_COMPONENT = Symbol();\r\n/**\r\n * @private\r\n */\r\nfunction resolveDynamicComponent(component) {\r\n    if (isString(component)) {\r\n        return resolveAsset(COMPONENTS, component, false) || component;\r\n    }\r\n    else {\r\n        // invalid types will fallthrough to createVNode and raise warning\r\n        return (component || NULL_DYNAMIC_COMPONENT);\r\n    }\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction resolveDirective(name) {\r\n    return resolveAsset(DIRECTIVES, name);\r\n}\r\n// implementation\r\nfunction resolveAsset(type, name, warnMissing = true) {\r\n    const instance = currentRenderingInstance || currentInstance;\r\n    if (instance) {\r\n        let camelized, capitalized;\r\n        const registry = instance[type];\r\n        let res = registry[name] ||\r\n            registry[(camelized = camelize(name))] ||\r\n            registry[(capitalized = capitalize(camelized))];\r\n        if (!res && type === COMPONENTS) {\r\n            const self = instance.type;\r\n            const selfName = self.displayName || self.name;\r\n            if (selfName &&\r\n                (selfName === name ||\r\n                    selfName === camelized ||\r\n                    selfName === capitalized)) {\r\n                res = self;\r\n            }\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && warnMissing && !res) {\r\n            warn(`Failed to resolve ${type.slice(0, -1)}: ${name}`);\r\n        }\r\n        return res;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`resolve${capitalize(type.slice(0, -1))} ` +\r\n            `can only be used in render() or setup().`);\r\n    }\r\n}\n\nconst Fragment = Symbol((process.env.NODE_ENV !== 'production') ? 'Fragment' : undefined);\r\nconst Text = Symbol((process.env.NODE_ENV !== 'production') ? 'Text' : undefined);\r\nconst Comment = Symbol((process.env.NODE_ENV !== 'production') ? 'Comment' : undefined);\r\nconst Static = Symbol((process.env.NODE_ENV !== 'production') ? 'Static' : undefined);\r\n// Since v-if and v-for are the two possible ways node structure can dynamically\r\n// change, once we consider v-if branches and each v-for fragment a block, we\r\n// can divide a template into nested blocks, and within each block the node\r\n// structure would be stable. This allows us to skip most children diffing\r\n// and only worry about the dynamic nodes (indicated by patch flags).\r\nconst blockStack = [];\r\nlet currentBlock = null;\r\n/**\r\n * Open a block.\r\n * This must be called before `createBlock`. It cannot be part of `createBlock`\r\n * because the children of the block are evaluated before `createBlock` itself\r\n * is called. The generated code typically looks like this:\r\n *\r\n * ```js\r\n * function render() {\r\n *   return (openBlock(),createBlock('div', null, [...]))\r\n * }\r\n * ```\r\n * disableTracking is true when creating a v-for fragment block, since a v-for\r\n * fragment always diffs its children.\r\n *\r\n * @private\r\n */\r\nfunction openBlock(disableTracking = false) {\r\n    blockStack.push((currentBlock = disableTracking ? null : []));\r\n}\r\n// Whether we should be tracking dynamic child nodes inside a block.\r\n// Only tracks when this value is > 0\r\n// We are not using a simple boolean because this value may need to be\r\n// incremented/decremented by nested usage of v-once (see below)\r\nlet shouldTrack = 1;\r\n/**\r\n * Block tracking sometimes needs to be disabled, for example during the\r\n * creation of a tree that needs to be cached by v-once. The compiler generates\r\n * code like this:\r\n *\r\n * ``` js\r\n * _cache[1] || (\r\n *   setBlockTracking(-1),\r\n *   _cache[1] = createVNode(...),\r\n *   setBlockTracking(1),\r\n *   _cache[1]\r\n * )\r\n * ```\r\n *\r\n * @private\r\n */\r\nfunction setBlockTracking(value) {\r\n    shouldTrack += value;\r\n}\r\n/**\r\n * Create a block root vnode. Takes the same exact arguments as `createVNode`.\r\n * A block root keeps track of dynamic nodes within the block in the\r\n * `dynamicChildren` array.\r\n *\r\n * @private\r\n */\r\nfunction createBlock(type, props, children, patchFlag, dynamicProps) {\r\n    const vnode = createVNode(type, props, children, patchFlag, dynamicProps, true /* isBlock: prevent a block from tracking itself */);\r\n    // save current block children on the block vnode\r\n    vnode.dynamicChildren = currentBlock || EMPTY_ARR;\r\n    // close block\r\n    blockStack.pop();\r\n    currentBlock = blockStack[blockStack.length - 1] || null;\r\n    // a block is always going to be patched, so track it as a child of its\r\n    // parent block\r\n    if (currentBlock) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\nfunction isVNode(value) {\r\n    return value ? value.__v_isVNode === true : false;\r\n}\r\nfunction isSameVNodeType(n1, n2) {\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        n2.shapeFlag & 6 /* COMPONENT */ &&\r\n        hmrDirtyComponents.has(n2.type)) {\r\n        // HMR only: if the component has been hot-updated, force a reload.\r\n        return false;\r\n    }\r\n    return n1.type === n2.type && n1.key === n2.key;\r\n}\r\nlet vnodeArgsTransformer;\r\n/**\r\n * Internal API for registering an arguments transform for createVNode\r\n * used for creating stubs in the test-utils\r\n * It is *internal* but needs to be exposed for test-utils to pick up proper\r\n * typings\r\n */\r\nfunction transformVNodeArgs(transformer) {\r\n    vnodeArgsTransformer = transformer;\r\n}\r\nconst createVNodeWithArgsTransform = (...args) => {\r\n    return _createVNode(...(vnodeArgsTransformer\r\n        ? vnodeArgsTransformer(args, currentRenderingInstance)\r\n        : args));\r\n};\r\nconst InternalObjectKey = `__vInternal`;\r\nconst normalizeKey = ({ key }) => key != null ? key : null;\r\nconst normalizeRef = ({ ref }) => {\r\n    return (ref != null\r\n        ? isArray(ref)\r\n            ? ref\r\n            : [currentRenderingInstance, ref]\r\n        : null);\r\n};\r\nconst createVNode = ((process.env.NODE_ENV !== 'production')\r\n    ? createVNodeWithArgsTransform\r\n    : _createVNode);\r\nfunction _createVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, isBlockNode = false) {\r\n    if (!type || type === NULL_DYNAMIC_COMPONENT) {\r\n        if ((process.env.NODE_ENV !== 'production') && !type) {\r\n            warn(`Invalid vnode type when creating vnode: ${type}.`);\r\n        }\r\n        type = Comment;\r\n    }\r\n    if (isVNode(type)) {\r\n        return cloneVNode(type, props, children);\r\n    }\r\n    // class component normalization.\r\n    if (isFunction(type) && '__vccOpts' in type) {\r\n        type = type.__vccOpts;\r\n    }\r\n    // class & style normalization.\r\n    if (props) {\r\n        // for reactive or proxy objects, we need to clone it to enable mutation.\r\n        if (isProxy(props) || InternalObjectKey in props) {\r\n            props = extend({}, props);\r\n        }\r\n        let { class: klass, style } = props;\r\n        if (klass && !isString(klass)) {\r\n            props.class = normalizeClass(klass);\r\n        }\r\n        if (isObject(style)) {\r\n            // reactive state objects need to be cloned since they are likely to be\r\n            // mutated\r\n            if (isProxy(style) && !isArray(style)) {\r\n                style = extend({}, style);\r\n            }\r\n            props.style = normalizeStyle(style);\r\n        }\r\n    }\r\n    // encode the vnode type information into a bitmap\r\n    const shapeFlag = isString(type)\r\n        ? 1 /* ELEMENT */\r\n        :  isSuspense(type)\r\n            ? 128 /* SUSPENSE */\r\n            : isTeleport(type)\r\n                ? 64 /* TELEPORT */\r\n                : isObject(type)\r\n                    ? 4 /* STATEFUL_COMPONENT */\r\n                    : isFunction(type)\r\n                        ? 2 /* FUNCTIONAL_COMPONENT */\r\n                        : 0;\r\n    if ((process.env.NODE_ENV !== 'production') && shapeFlag & 4 /* STATEFUL_COMPONENT */ && isProxy(type)) {\r\n        type = toRaw(type);\r\n        warn(`Vue received a Component which was made a reactive object. This can ` +\r\n            `lead to unnecessary performance overhead, and should be avoided by ` +\r\n            `marking the component with \\`markRaw\\` or using \\`shallowRef\\` ` +\r\n            `instead of \\`ref\\`.`, `\\nComponent that was made reactive: `, type);\r\n    }\r\n    const vnode = {\r\n        __v_isVNode: true,\r\n        __v_skip: true,\r\n        type,\r\n        props,\r\n        key: props && normalizeKey(props),\r\n        ref: props && normalizeRef(props),\r\n        scopeId: currentScopeId,\r\n        children: null,\r\n        component: null,\r\n        suspense: null,\r\n        dirs: null,\r\n        transition: null,\r\n        el: null,\r\n        anchor: null,\r\n        target: null,\r\n        targetAnchor: null,\r\n        staticCount: 0,\r\n        shapeFlag,\r\n        patchFlag,\r\n        dynamicProps,\r\n        dynamicChildren: null,\r\n        appContext: null\r\n    };\r\n    // validate key\r\n    if ((process.env.NODE_ENV !== 'production') && vnode.key !== vnode.key) {\r\n        warn(`VNode created with invalid key (NaN). VNode type:`, vnode.type);\r\n    }\r\n    normalizeChildren(vnode, children);\r\n    // presence of a patch flag indicates this node needs patching on updates.\r\n    // component nodes also should always be patched, because even if the\r\n    // component doesn't need to update, it needs to persist the instance on to\r\n    // the next vnode so that it can be properly unmounted later.\r\n    if (shouldTrack > 0 &&\r\n        !isBlockNode &&\r\n        currentBlock &&\r\n        // the EVENTS flag is only for hydration and if it is the only flag, the\r\n        // vnode should not be considered dynamic due to handler caching.\r\n        patchFlag !== 32 /* HYDRATE_EVENTS */ &&\r\n        (patchFlag > 0 ||\r\n            shapeFlag & 128 /* SUSPENSE */ ||\r\n            shapeFlag & 64 /* TELEPORT */ ||\r\n            shapeFlag & 4 /* STATEFUL_COMPONENT */ ||\r\n            shapeFlag & 2 /* FUNCTIONAL_COMPONENT */)) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\nfunction cloneVNode(vnode, extraProps, children) {\r\n    const props = extraProps\r\n        ? vnode.props\r\n            ? mergeProps(vnode.props, extraProps)\r\n            : extend({}, extraProps)\r\n        : vnode.props;\r\n    // This is intentionally NOT using spread or extend to avoid the runtime\r\n    // key enumeration cost.\r\n    const cloned = {\r\n        __v_isVNode: true,\r\n        __v_skip: true,\r\n        type: vnode.type,\r\n        props,\r\n        key: props && normalizeKey(props),\r\n        ref: extraProps && extraProps.ref ? normalizeRef(extraProps) : vnode.ref,\r\n        scopeId: vnode.scopeId,\r\n        children: vnode.children,\r\n        target: vnode.target,\r\n        targetAnchor: vnode.targetAnchor,\r\n        staticCount: vnode.staticCount,\r\n        shapeFlag: vnode.shapeFlag,\r\n        // if the vnode is cloned with extra props, we can no longer assume its\r\n        // existing patch flag to be reliable and need to bail out of optimized mode.\r\n        // however we don't want block nodes to de-opt their children, so if the\r\n        // vnode is a block node, we only add the FULL_PROPS flag to it.\r\n        patchFlag: extraProps\r\n            ? vnode.dynamicChildren\r\n                ? vnode.patchFlag | 16 /* FULL_PROPS */\r\n                : -2 /* BAIL */\r\n            : vnode.patchFlag,\r\n        dynamicProps: vnode.dynamicProps,\r\n        dynamicChildren: vnode.dynamicChildren,\r\n        appContext: vnode.appContext,\r\n        dirs: vnode.dirs,\r\n        transition: vnode.transition,\r\n        // These should technically only be non-null on mounted VNodes. However,\r\n        // they *should* be copied for kept-alive vnodes. So we just always copy\r\n        // them since them being non-null during a mount doesn't affect the logic as\r\n        // they will simply be overwritten.\r\n        component: vnode.component,\r\n        suspense: vnode.suspense,\r\n        el: vnode.el,\r\n        anchor: vnode.anchor\r\n    };\r\n    if (children) {\r\n        normalizeChildren(cloned, children);\r\n    }\r\n    return cloned;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createTextVNode(text = ' ', flag = 0) {\r\n    return createVNode(Text, null, text, flag);\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createStaticVNode(content, numberOfNodes) {\r\n    // A static vnode can contain multiple stringified elements, and the number\r\n    // of elements is necessary for hydration.\r\n    const vnode = createVNode(Static, null, content);\r\n    vnode.staticCount = numberOfNodes;\r\n    return vnode;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createCommentVNode(text = '', \r\n// when used as the v-else branch, the comment node must be created as a\r\n// block to ensure correct updates.\r\nasBlock = false) {\r\n    return asBlock\r\n        ? (openBlock(), createBlock(Comment, null, text))\r\n        : createVNode(Comment, null, text);\r\n}\r\nfunction normalizeVNode(child) {\r\n    if (child == null || typeof child === 'boolean') {\r\n        // empty placeholder\r\n        return createVNode(Comment);\r\n    }\r\n    else if (isArray(child)) {\r\n        // fragment\r\n        return createVNode(Fragment, null, child);\r\n    }\r\n    else if (typeof child === 'object') {\r\n        // already vnode, this should be the most common since compiled templates\r\n        // always produce all-vnode children arrays\r\n        return child.el === null ? child : cloneVNode(child);\r\n    }\r\n    else {\r\n        // strings and numbers\r\n        return createVNode(Text, null, String(child));\r\n    }\r\n}\r\n// optimized normalization for template-compiled render fns\r\nfunction cloneIfMounted(child) {\r\n    return child.el === null ? child : cloneVNode(child);\r\n}\r\nfunction normalizeChildren(vnode, children) {\r\n    let type = 0;\r\n    const { shapeFlag } = vnode;\r\n    if (children == null) {\r\n        children = null;\r\n    }\r\n    else if (isArray(children)) {\r\n        type = 16 /* ARRAY_CHILDREN */;\r\n    }\r\n    else if (typeof children === 'object') {\r\n        // Normalize slot to plain children\r\n        if ((shapeFlag & 1 /* ELEMENT */ || shapeFlag & 64 /* TELEPORT */) &&\r\n            children.default) {\r\n            normalizeChildren(vnode, children.default());\r\n            return;\r\n        }\r\n        else {\r\n            type = 32 /* SLOTS_CHILDREN */;\r\n            const slotFlag = children._;\r\n            if (!slotFlag && !(InternalObjectKey in children)) {\r\n                children._ctx = currentRenderingInstance;\r\n            }\r\n            else if (slotFlag === 3 /* FORWARDED */ && currentRenderingInstance) {\r\n                // a child component receives forwarded slots from the parent.\r\n                // its slot type is determined by its parent's slot type.\r\n                if (currentRenderingInstance.vnode.patchFlag & 1024 /* DYNAMIC_SLOTS */) {\r\n                    children._ = 2 /* DYNAMIC */;\r\n                    vnode.patchFlag |= 1024 /* DYNAMIC_SLOTS */;\r\n                }\r\n                else {\r\n                    children._ = 1 /* STABLE */;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if (isFunction(children)) {\r\n        children = { default: children, _ctx: currentRenderingInstance };\r\n        type = 32 /* SLOTS_CHILDREN */;\r\n    }\r\n    else {\r\n        children = String(children);\r\n        // force teleport children to array so it can be moved around\r\n        if (shapeFlag & 64 /* TELEPORT */) {\r\n            type = 16 /* ARRAY_CHILDREN */;\r\n            children = [createTextVNode(children)];\r\n        }\r\n        else {\r\n            type = 8 /* TEXT_CHILDREN */;\r\n        }\r\n    }\r\n    vnode.children = children;\r\n    vnode.shapeFlag |= type;\r\n}\r\nconst handlersRE = /^on|^vnode/;\r\nfunction mergeProps(...args) {\r\n    const ret = extend({}, args[0]);\r\n    for (let i = 1; i < args.length; i++) {\r\n        const toMerge = args[i];\r\n        for (const key in toMerge) {\r\n            if (key === 'class') {\r\n                if (ret.class !== toMerge.class) {\r\n                    ret.class = normalizeClass([ret.class, toMerge.class]);\r\n                }\r\n            }\r\n            else if (key === 'style') {\r\n                ret.style = normalizeStyle([ret.style, toMerge.style]);\r\n            }\r\n            else if (handlersRE.test(key)) {\r\n                // on*, vnode*\r\n                const existing = ret[key];\r\n                const incoming = toMerge[key];\r\n                if (existing !== incoming) {\r\n                    ret[key] = existing\r\n                        ? [].concat(existing, toMerge[key])\r\n                        : incoming;\r\n                }\r\n            }\r\n            else {\r\n                ret[key] = toMerge[key];\r\n            }\r\n        }\r\n    }\r\n    return ret;\r\n}\n\nfunction emit(instance, event, ...args) {\r\n    const props = instance.vnode.props || EMPTY_OBJ;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const options = normalizeEmitsOptions(instance.type);\r\n        if (options) {\r\n            if (!(event in options)) {\r\n                const propsOptions = normalizePropsOptions(instance.type)[0];\r\n                if (!propsOptions || !(`on` + capitalize(event) in propsOptions)) {\r\n                    warn(`Component emitted event \"${event}\" but it is neither declared in ` +\r\n                        `the emits option nor as an \"on${capitalize(event)}\" prop.`);\r\n                }\r\n            }\r\n            else {\r\n                const validator = options[event];\r\n                if (isFunction(validator)) {\r\n                    const isValid = validator(...args);\r\n                    if (!isValid) {\r\n                        warn(`Invalid event arguments: event validation failed for event \"${event}\".`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    let handlerName = `on${capitalize(event)}`;\r\n    let handler = props[handlerName];\r\n    // for v-model update:xxx events, also trigger kebab-case equivalent\r\n    // for props passed via kebab-case\r\n    if (!handler && event.startsWith('update:')) {\r\n        handlerName = `on${capitalize(hyphenate(event))}`;\r\n        handler = props[handlerName];\r\n    }\r\n    if (!handler) {\r\n        handler = props[handlerName + `Once`];\r\n        if (!instance.emitted) {\r\n            (instance.emitted = {})[handlerName] = true;\r\n        }\r\n        else if (instance.emitted[handlerName]) {\r\n            return;\r\n        }\r\n    }\r\n    if (handler) {\r\n        callWithAsyncErrorHandling(handler, instance, 6 /* COMPONENT_EVENT_HANDLER */, args);\r\n    }\r\n}\r\nfunction normalizeEmitsOptions(comp) {\r\n    if (hasOwn(comp, '__emits')) {\r\n        return comp.__emits;\r\n    }\r\n    const raw = comp.emits;\r\n    let normalized = {};\r\n    // apply mixin/extends props\r\n    let hasExtends = false;\r\n    if ( !isFunction(comp)) {\r\n        if (comp.extends) {\r\n            hasExtends = true;\r\n            extend(normalized, normalizeEmitsOptions(comp.extends));\r\n        }\r\n        if (comp.mixins) {\r\n            hasExtends = true;\r\n            comp.mixins.forEach(m => extend(normalized, normalizeEmitsOptions(m)));\r\n        }\r\n    }\r\n    if (!raw && !hasExtends) {\r\n        return (comp.__emits = undefined);\r\n    }\r\n    if (isArray(raw)) {\r\n        raw.forEach(key => (normalized[key] = null));\r\n    }\r\n    else {\r\n        extend(normalized, raw);\r\n    }\r\n    return (comp.__emits = normalized);\r\n}\r\n// Check if an incoming prop key is a declared emit event listener.\r\n// e.g. With `emits: { click: null }`, props named `onClick` and `onclick` are\r\n// both considered matched listeners.\r\nfunction isEmitListener(comp, key) {\r\n    let emits;\r\n    if (!isOn(key) || !(emits = normalizeEmitsOptions(comp))) {\r\n        return false;\r\n    }\r\n    key = key.replace(/Once$/, '');\r\n    return (hasOwn(emits, key[2].toLowerCase() + key.slice(3)) ||\r\n        hasOwn(emits, key.slice(2)));\r\n}\n\nfunction initProps(instance, rawProps, isStateful, // result of bitwise flag comparison\r\nisSSR = false) {\r\n    const props = {};\r\n    const attrs = {};\r\n    def(attrs, InternalObjectKey, 1);\r\n    setFullProps(instance, rawProps, props, attrs);\r\n    // validation\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        validateProps(props, instance.type);\r\n    }\r\n    if (isStateful) {\r\n        // stateful\r\n        instance.props = isSSR ? props : shallowReactive(props);\r\n    }\r\n    else {\r\n        if (!instance.type.props) {\r\n            // functional w/ optional props, props === attrs\r\n            instance.props = attrs;\r\n        }\r\n        else {\r\n            // functional w/ declared props\r\n            instance.props = props;\r\n        }\r\n    }\r\n    instance.attrs = attrs;\r\n}\r\nfunction updateProps(instance, rawProps, rawPrevProps, optimized) {\r\n    const { props, attrs, vnode: { patchFlag } } = instance;\r\n    const rawCurrentProps = toRaw(props);\r\n    const [options] = normalizePropsOptions(instance.type);\r\n    if ((optimized || patchFlag > 0) && !(patchFlag & 16 /* FULL_PROPS */)) {\r\n        if (patchFlag & 8 /* PROPS */) {\r\n            // Compiler-generated props & no keys change, just set the updated\r\n            // the props.\r\n            const propsToUpdate = instance.vnode.dynamicProps;\r\n            for (let i = 0; i < propsToUpdate.length; i++) {\r\n                const key = propsToUpdate[i];\r\n                // PROPS flag guarantees rawProps to be non-null\r\n                const value = rawProps[key];\r\n                if (options) {\r\n                    // attr / props separation was done on init and will be consistent\r\n                    // in this code path, so just check if attrs have it.\r\n                    if (hasOwn(attrs, key)) {\r\n                        attrs[key] = value;\r\n                    }\r\n                    else {\r\n                        const camelizedKey = camelize(key);\r\n                        props[camelizedKey] = resolvePropValue(options, rawCurrentProps, camelizedKey, value);\r\n                    }\r\n                }\r\n                else {\r\n                    attrs[key] = value;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // full props update.\r\n        setFullProps(instance, rawProps, props, attrs);\r\n        // in case of dynamic props, check if we need to delete keys from\r\n        // the props object\r\n        let kebabKey;\r\n        for (const key in rawCurrentProps) {\r\n            if (!rawProps ||\r\n                // for camelCase\r\n                (!hasOwn(rawProps, key) &&\r\n                    // it's possible the original props was passed in as kebab-case\r\n                    // and converted to camelCase (#955)\r\n                    ((kebabKey = hyphenate(key)) === key || !hasOwn(rawProps, kebabKey)))) {\r\n                if (options) {\r\n                    if (rawPrevProps &&\r\n                        // for camelCase\r\n                        (rawPrevProps[key] !== undefined ||\r\n                            // for kebab-case\r\n                            rawPrevProps[kebabKey] !== undefined)) {\r\n                        props[key] = resolvePropValue(options, rawProps || EMPTY_OBJ, key, undefined);\r\n                    }\r\n                }\r\n                else {\r\n                    delete props[key];\r\n                }\r\n            }\r\n        }\r\n        // in the case of functional component w/o props declaration, props and\r\n        // attrs point to the same object so it should already have been updated.\r\n        if (attrs !== rawCurrentProps) {\r\n            for (const key in attrs) {\r\n                if (!rawProps || !hasOwn(rawProps, key)) {\r\n                    delete attrs[key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // trigger updates for $attrs in case it's used in component slots\r\n    trigger(instance, \"set\" /* SET */, '$attrs');\r\n    if ((process.env.NODE_ENV !== 'production') && rawProps) {\r\n        validateProps(props, instance.type);\r\n    }\r\n}\r\nfunction setFullProps(instance, rawProps, props, attrs) {\r\n    const [options, needCastKeys] = normalizePropsOptions(instance.type);\r\n    if (rawProps) {\r\n        for (const key in rawProps) {\r\n            const value = rawProps[key];\r\n            // key, ref are reserved and never passed down\r\n            if (isReservedProp(key)) {\r\n                continue;\r\n            }\r\n            // prop option names are camelized during normalization, so to support\r\n            // kebab -> camel conversion here we need to camelize the key.\r\n            let camelKey;\r\n            if (options && hasOwn(options, (camelKey = camelize(key)))) {\r\n                props[camelKey] = value;\r\n            }\r\n            else if (!isEmitListener(instance.type, key)) {\r\n                // Any non-declared (either as a prop or an emitted event) props are put\r\n                // into a separate `attrs` object for spreading. Make sure to preserve\r\n                // original key casing\r\n                attrs[key] = value;\r\n            }\r\n        }\r\n    }\r\n    if (needCastKeys) {\r\n        const rawCurrentProps = toRaw(props);\r\n        for (let i = 0; i < needCastKeys.length; i++) {\r\n            const key = needCastKeys[i];\r\n            props[key] = resolvePropValue(options, rawCurrentProps, key, rawCurrentProps[key]);\r\n        }\r\n    }\r\n}\r\nfunction resolvePropValue(options, props, key, value) {\r\n    const opt = options[key];\r\n    if (opt != null) {\r\n        const hasDefault = hasOwn(opt, 'default');\r\n        // default values\r\n        if (hasDefault && value === undefined) {\r\n            const defaultValue = opt.default;\r\n            value =\r\n                opt.type !== Function && isFunction(defaultValue)\r\n                    ? defaultValue()\r\n                    : defaultValue;\r\n        }\r\n        // boolean casting\r\n        if (opt[0 /* shouldCast */]) {\r\n            if (!hasOwn(props, key) && !hasDefault) {\r\n                value = false;\r\n            }\r\n            else if (opt[1 /* shouldCastTrue */] &&\r\n                (value === '' || value === hyphenate(key))) {\r\n                value = true;\r\n            }\r\n        }\r\n    }\r\n    return value;\r\n}\r\nfunction normalizePropsOptions(comp) {\r\n    if (comp.__props) {\r\n        return comp.__props;\r\n    }\r\n    const raw = comp.props;\r\n    const normalized = {};\r\n    const needCastKeys = [];\r\n    // apply mixin/extends props\r\n    let hasExtends = false;\r\n    if ( !isFunction(comp)) {\r\n        const extendProps = (raw) => {\r\n            const [props, keys] = normalizePropsOptions(raw);\r\n            extend(normalized, props);\r\n            if (keys)\r\n                needCastKeys.push(...keys);\r\n        };\r\n        if (comp.extends) {\r\n            hasExtends = true;\r\n            extendProps(comp.extends);\r\n        }\r\n        if (comp.mixins) {\r\n            hasExtends = true;\r\n            comp.mixins.forEach(extendProps);\r\n        }\r\n    }\r\n    if (!raw && !hasExtends) {\r\n        return (comp.__props = EMPTY_ARR);\r\n    }\r\n    if (isArray(raw)) {\r\n        for (let i = 0; i < raw.length; i++) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isString(raw[i])) {\r\n                warn(`props must be strings when using array syntax.`, raw[i]);\r\n            }\r\n            const normalizedKey = camelize(raw[i]);\r\n            if (validatePropName(normalizedKey)) {\r\n                normalized[normalizedKey] = EMPTY_OBJ;\r\n            }\r\n        }\r\n    }\r\n    else if (raw) {\r\n        if ((process.env.NODE_ENV !== 'production') && !isObject(raw)) {\r\n            warn(`invalid props options`, raw);\r\n        }\r\n        for (const key in raw) {\r\n            const normalizedKey = camelize(key);\r\n            if (validatePropName(normalizedKey)) {\r\n                const opt = raw[key];\r\n                const prop = (normalized[normalizedKey] =\r\n                    isArray(opt) || isFunction(opt) ? { type: opt } : opt);\r\n                if (prop) {\r\n                    const booleanIndex = getTypeIndex(Boolean, prop.type);\r\n                    const stringIndex = getTypeIndex(String, prop.type);\r\n                    prop[0 /* shouldCast */] = booleanIndex > -1;\r\n                    prop[1 /* shouldCastTrue */] =\r\n                        stringIndex < 0 || booleanIndex < stringIndex;\r\n                    // if the prop needs boolean casting or default value\r\n                    if (booleanIndex > -1 || hasOwn(prop, 'default')) {\r\n                        needCastKeys.push(normalizedKey);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    const normalizedEntry = [normalized, needCastKeys];\r\n    comp.__props = normalizedEntry;\r\n    return normalizedEntry;\r\n}\r\n// use function string name to check type constructors\r\n// so that it works across vms / iframes.\r\nfunction getType(ctor) {\r\n    const match = ctor && ctor.toString().match(/^\\s*function (\\w+)/);\r\n    return match ? match[1] : '';\r\n}\r\nfunction isSameType(a, b) {\r\n    return getType(a) === getType(b);\r\n}\r\nfunction getTypeIndex(type, expectedTypes) {\r\n    if (isArray(expectedTypes)) {\r\n        for (let i = 0, len = expectedTypes.length; i < len; i++) {\r\n            if (isSameType(expectedTypes[i], type)) {\r\n                return i;\r\n            }\r\n        }\r\n    }\r\n    else if (isFunction(expectedTypes)) {\r\n        return isSameType(expectedTypes, type) ? 0 : -1;\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction validateProps(props, comp) {\r\n    const rawValues = toRaw(props);\r\n    const options = normalizePropsOptions(comp)[0];\r\n    for (const key in options) {\r\n        let opt = options[key];\r\n        if (opt == null)\r\n            continue;\r\n        validateProp(key, rawValues[key], opt, !hasOwn(rawValues, key));\r\n    }\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction validatePropName(key) {\r\n    if (key[0] !== '$') {\r\n        return true;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`Invalid prop name: \"${key}\" is a reserved property.`);\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction validateProp(name, value, prop, isAbsent) {\r\n    const { type, required, validator } = prop;\r\n    // required!\r\n    if (required && isAbsent) {\r\n        warn('Missing required prop: \"' + name + '\"');\r\n        return;\r\n    }\r\n    // missing but optional\r\n    if (value == null && !prop.required) {\r\n        return;\r\n    }\r\n    // type check\r\n    if (type != null && type !== true) {\r\n        let isValid = false;\r\n        const types = isArray(type) ? type : [type];\r\n        const expectedTypes = [];\r\n        // value is valid as long as one of the specified types match\r\n        for (let i = 0; i < types.length && !isValid; i++) {\r\n            const { valid, expectedType } = assertType(value, types[i]);\r\n            expectedTypes.push(expectedType || '');\r\n            isValid = valid;\r\n        }\r\n        if (!isValid) {\r\n            warn(getInvalidTypeMessage(name, value, expectedTypes));\r\n            return;\r\n        }\r\n    }\r\n    // custom validator\r\n    if (validator && !validator(value)) {\r\n        warn('Invalid prop: custom validator check failed for prop \"' + name + '\".');\r\n    }\r\n}\r\nconst isSimpleType = /*#__PURE__*/ makeMap('String,Number,Boolean,Function,Symbol');\r\n/**\r\n * dev only\r\n */\r\nfunction assertType(value, type) {\r\n    let valid;\r\n    const expectedType = getType(type);\r\n    if (isSimpleType(expectedType)) {\r\n        const t = typeof value;\r\n        valid = t === expectedType.toLowerCase();\r\n        // for primitive wrapper objects\r\n        if (!valid && t === 'object') {\r\n            valid = value instanceof type;\r\n        }\r\n    }\r\n    else if (expectedType === 'Object') {\r\n        valid = toRawType(value) === 'Object';\r\n    }\r\n    else if (expectedType === 'Array') {\r\n        valid = isArray(value);\r\n    }\r\n    else {\r\n        valid = value instanceof type;\r\n    }\r\n    return {\r\n        valid,\r\n        expectedType\r\n    };\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction getInvalidTypeMessage(name, value, expectedTypes) {\r\n    let message = `Invalid prop: type check failed for prop \"${name}\".` +\r\n        ` Expected ${expectedTypes.map(capitalize).join(', ')}`;\r\n    const expectedType = expectedTypes[0];\r\n    const receivedType = toRawType(value);\r\n    const expectedValue = styleValue(value, expectedType);\r\n    const receivedValue = styleValue(value, receivedType);\r\n    // check if we need to specify expected value\r\n    if (expectedTypes.length === 1 &&\r\n        isExplicable(expectedType) &&\r\n        !isBoolean(expectedType, receivedType)) {\r\n        message += ` with value ${expectedValue}`;\r\n    }\r\n    message += `, got ${receivedType} `;\r\n    // check if we need to specify received value\r\n    if (isExplicable(receivedType)) {\r\n        message += `with value ${receivedValue}.`;\r\n    }\r\n    return message;\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction styleValue(value, type) {\r\n    if (type === 'String') {\r\n        return `\"${value}\"`;\r\n    }\r\n    else if (type === 'Number') {\r\n        return `${Number(value)}`;\r\n    }\r\n    else {\r\n        return `${value}`;\r\n    }\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction isExplicable(type) {\r\n    const explicitTypes = ['string', 'number', 'boolean'];\r\n    return explicitTypes.some(elem => type.toLowerCase() === elem);\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction isBoolean(...args) {\r\n    return args.some(elem => elem.toLowerCase() === 'boolean');\r\n}\n\nfunction injectHook(type, hook, target = currentInstance, prepend = false) {\r\n    if (target) {\r\n        const hooks = target[type] || (target[type] = []);\r\n        // cache the error handling wrapper for injected hooks so the same hook\r\n        // can be properly deduped by the scheduler. \"__weh\" stands for \"with error\r\n        // handling\".\r\n        const wrappedHook = hook.__weh ||\r\n            (hook.__weh = (...args) => {\r\n                if (target.isUnmounted) {\r\n                    return;\r\n                }\r\n                // disable tracking inside all lifecycle hooks\r\n                // since they can potentially be called inside effects.\r\n                pauseTracking();\r\n                // Set currentInstance during hook invocation.\r\n                // This assumes the hook does not synchronously trigger other hooks, which\r\n                // can only be false when the user does something really funky.\r\n                setCurrentInstance(target);\r\n                const res = callWithAsyncErrorHandling(hook, target, type, args);\r\n                setCurrentInstance(null);\r\n                resetTracking();\r\n                return res;\r\n            });\r\n        if (prepend) {\r\n            hooks.unshift(wrappedHook);\r\n        }\r\n        else {\r\n            hooks.push(wrappedHook);\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        const apiName = `on${capitalize(ErrorTypeStrings[type].replace(/ hook$/, ''))}`;\r\n        warn(`${apiName} is called when there is no active component instance to be ` +\r\n            `associated with. ` +\r\n            `Lifecycle injection APIs can only be used during execution of setup().` +\r\n            ( ` If you are using async setup(), make sure to register lifecycle ` +\r\n                    `hooks before the first await statement.`\r\n                ));\r\n    }\r\n}\r\nconst createHook = (lifecycle) => (hook, target = currentInstance) => \r\n// post-create lifecycle registrations are noops during SSR\r\n!isInSSRComponentSetup && injectHook(lifecycle, hook, target);\r\nconst onBeforeMount = createHook(\"bm\" /* BEFORE_MOUNT */);\r\nconst onMounted = createHook(\"m\" /* MOUNTED */);\r\nconst onBeforeUpdate = createHook(\"bu\" /* BEFORE_UPDATE */);\r\nconst onUpdated = createHook(\"u\" /* UPDATED */);\r\nconst onBeforeUnmount = createHook(\"bum\" /* BEFORE_UNMOUNT */);\r\nconst onUnmounted = createHook(\"um\" /* UNMOUNTED */);\r\nconst onRenderTriggered = createHook(\"rtg\" /* RENDER_TRIGGERED */);\r\nconst onRenderTracked = createHook(\"rtc\" /* RENDER_TRACKED */);\r\nconst onErrorCaptured = (hook, target = currentInstance) => {\r\n    injectHook(\"ec\" /* ERROR_CAPTURED */, hook, target);\r\n};\n\nfunction useTransitionState() {\r\n    const state = {\r\n        isMounted: false,\r\n        isLeaving: false,\r\n        isUnmounting: false,\r\n        leavingVNodes: new Map()\r\n    };\r\n    onMounted(() => {\r\n        state.isMounted = true;\r\n    });\r\n    onBeforeUnmount(() => {\r\n        state.isUnmounting = true;\r\n    });\r\n    return state;\r\n}\r\nconst BaseTransitionImpl = {\r\n    name: `BaseTransition`,\r\n    props: {\r\n        mode: String,\r\n        appear: Boolean,\r\n        persisted: Boolean,\r\n        // enter\r\n        onBeforeEnter: Function,\r\n        onEnter: Function,\r\n        onAfterEnter: Function,\r\n        onEnterCancelled: Function,\r\n        // leave\r\n        onBeforeLeave: Function,\r\n        onLeave: Function,\r\n        onAfterLeave: Function,\r\n        onLeaveCancelled: Function,\r\n        // appear\r\n        onBeforeAppear: Function,\r\n        onAppear: Function,\r\n        onAfterAppear: Function,\r\n        onAppearCancelled: Function\r\n    },\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        const state = useTransitionState();\r\n        let prevTransitionKey;\r\n        return () => {\r\n            const children = slots.default && getTransitionRawChildren(slots.default(), true);\r\n            if (!children || !children.length) {\r\n                return;\r\n            }\r\n            // warn multiple elements\r\n            if ((process.env.NODE_ENV !== 'production') && children.length > 1) {\r\n                warn('<transition> can only be used on a single element or component. Use ' +\r\n                    '<transition-group> for lists.');\r\n            }\r\n            // there's no need to track reactivity for these props so use the raw\r\n            // props for a bit better perf\r\n            const rawProps = toRaw(props);\r\n            const { mode } = rawProps;\r\n            // check mode\r\n            if ((process.env.NODE_ENV !== 'production') && mode && !['in-out', 'out-in', 'default'].includes(mode)) {\r\n                warn(`invalid <transition> mode: ${mode}`);\r\n            }\r\n            // at this point children has a guaranteed length of 1.\r\n            const child = children[0];\r\n            if (state.isLeaving) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            // in the case of <transition><keep-alive/></transition>, we need to\r\n            // compare the type of the kept-alive children.\r\n            const innerChild = getKeepAliveChild(child);\r\n            if (!innerChild) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            const enterHooks = (innerChild.transition = resolveTransitionHooks(innerChild, rawProps, state, instance));\r\n            const oldChild = instance.subTree;\r\n            const oldInnerChild = oldChild && getKeepAliveChild(oldChild);\r\n            let transitionKeyChanged = false;\r\n            const { getTransitionKey } = innerChild.type;\r\n            if (getTransitionKey) {\r\n                const key = getTransitionKey();\r\n                if (prevTransitionKey === undefined) {\r\n                    prevTransitionKey = key;\r\n                }\r\n                else if (key !== prevTransitionKey) {\r\n                    prevTransitionKey = key;\r\n                    transitionKeyChanged = true;\r\n                }\r\n            }\r\n            // handle mode\r\n            if (oldInnerChild &&\r\n                oldInnerChild.type !== Comment &&\r\n                (!isSameVNodeType(innerChild, oldInnerChild) || transitionKeyChanged)) {\r\n                const leavingHooks = resolveTransitionHooks(oldInnerChild, rawProps, state, instance);\r\n                // update old tree's hooks in case of dynamic transition\r\n                setTransitionHooks(oldInnerChild, leavingHooks);\r\n                // switching between different views\r\n                if (mode === 'out-in') {\r\n                    state.isLeaving = true;\r\n                    // return placeholder node and queue update when leave finishes\r\n                    leavingHooks.afterLeave = () => {\r\n                        state.isLeaving = false;\r\n                        instance.update();\r\n                    };\r\n                    return emptyPlaceholder(child);\r\n                }\r\n                else if (mode === 'in-out') {\r\n                    leavingHooks.delayLeave = (el, earlyRemove, delayedLeave) => {\r\n                        const leavingVNodesCache = getLeavingNodesForType(state, oldInnerChild);\r\n                        leavingVNodesCache[String(oldInnerChild.key)] = oldInnerChild;\r\n                        // early removal callback\r\n                        el._leaveCb = () => {\r\n                            earlyRemove();\r\n                            el._leaveCb = undefined;\r\n                            delete enterHooks.delayedLeave;\r\n                        };\r\n                        enterHooks.delayedLeave = delayedLeave;\r\n                    };\r\n                }\r\n            }\r\n            return child;\r\n        };\r\n    }\r\n};\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst BaseTransition = BaseTransitionImpl;\r\nfunction getLeavingNodesForType(state, vnode) {\r\n    const { leavingVNodes } = state;\r\n    let leavingVNodesCache = leavingVNodes.get(vnode.type);\r\n    if (!leavingVNodesCache) {\r\n        leavingVNodesCache = Object.create(null);\r\n        leavingVNodes.set(vnode.type, leavingVNodesCache);\r\n    }\r\n    return leavingVNodesCache;\r\n}\r\n// The transition hooks are attached to the vnode as vnode.transition\r\n// and will be called at appropriate timing in the renderer.\r\nfunction resolveTransitionHooks(vnode, { appear, persisted = false, onBeforeEnter, onEnter, onAfterEnter, onEnterCancelled, onBeforeLeave, onLeave, onAfterLeave, onLeaveCancelled, onBeforeAppear, onAppear, onAfterAppear, onAppearCancelled }, state, instance) {\r\n    const key = String(vnode.key);\r\n    const leavingVNodesCache = getLeavingNodesForType(state, vnode);\r\n    const callHook = (hook, args) => {\r\n        hook &&\r\n            callWithAsyncErrorHandling(hook, instance, 9 /* TRANSITION_HOOK */, args);\r\n    };\r\n    const hooks = {\r\n        persisted,\r\n        beforeEnter(el) {\r\n            let hook = onBeforeEnter;\r\n            if (!state.isMounted) {\r\n                if (appear) {\r\n                    hook = onBeforeAppear || onBeforeEnter;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n            // for same element (v-show)\r\n            if (el._leaveCb) {\r\n                el._leaveCb(true /* cancelled */);\r\n            }\r\n            // for toggled element with same key (v-if)\r\n            const leavingVNode = leavingVNodesCache[key];\r\n            if (leavingVNode &&\r\n                isSameVNodeType(vnode, leavingVNode) &&\r\n                leavingVNode.el._leaveCb) {\r\n                // force early removal (not cancelled)\r\n                leavingVNode.el._leaveCb();\r\n            }\r\n            callHook(hook, [el]);\r\n        },\r\n        enter(el) {\r\n            let hook = onEnter;\r\n            let afterHook = onAfterEnter;\r\n            let cancelHook = onEnterCancelled;\r\n            if (!state.isMounted) {\r\n                if (appear) {\r\n                    hook = onAppear || onEnter;\r\n                    afterHook = onAfterAppear || onAfterEnter;\r\n                    cancelHook = onAppearCancelled || onEnterCancelled;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n            let called = false;\r\n            const done = (el._enterCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                if (cancelled) {\r\n                    callHook(cancelHook, [el]);\r\n                }\r\n                else {\r\n                    callHook(afterHook, [el]);\r\n                }\r\n                if (hooks.delayedLeave) {\r\n                    hooks.delayedLeave();\r\n                }\r\n                el._enterCb = undefined;\r\n            });\r\n            if (hook) {\r\n                hook(el, done);\r\n                if (hook.length <= 1) {\r\n                    done();\r\n                }\r\n            }\r\n            else {\r\n                done();\r\n            }\r\n        },\r\n        leave(el, remove) {\r\n            const key = String(vnode.key);\r\n            if (el._enterCb) {\r\n                el._enterCb(true /* cancelled */);\r\n            }\r\n            if (state.isUnmounting) {\r\n                return remove();\r\n            }\r\n            callHook(onBeforeLeave, [el]);\r\n            let called = false;\r\n            const done = (el._leaveCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                remove();\r\n                if (cancelled) {\r\n                    callHook(onLeaveCancelled, [el]);\r\n                }\r\n                else {\r\n                    callHook(onAfterLeave, [el]);\r\n                }\r\n                el._leaveCb = undefined;\r\n                if (leavingVNodesCache[key] === vnode) {\r\n                    delete leavingVNodesCache[key];\r\n                }\r\n            });\r\n            leavingVNodesCache[key] = vnode;\r\n            if (onLeave) {\r\n                onLeave(el, done);\r\n                if (onLeave.length <= 1) {\r\n                    done();\r\n                }\r\n            }\r\n            else {\r\n                done();\r\n            }\r\n        }\r\n    };\r\n    return hooks;\r\n}\r\n// the placeholder really only handles one special case: KeepAlive\r\n// in the case of a KeepAlive in a leave phase we need to return a KeepAlive\r\n// placeholder with empty content to avoid the KeepAlive instance from being\r\n// unmounted.\r\nfunction emptyPlaceholder(vnode) {\r\n    if (isKeepAlive(vnode)) {\r\n        vnode = cloneVNode(vnode);\r\n        vnode.children = null;\r\n        return vnode;\r\n    }\r\n}\r\nfunction getKeepAliveChild(vnode) {\r\n    return isKeepAlive(vnode)\r\n        ? vnode.children\r\n            ? vnode.children[0]\r\n            : undefined\r\n        : vnode;\r\n}\r\nfunction setTransitionHooks(vnode, hooks) {\r\n    if (vnode.shapeFlag & 6 /* COMPONENT */ && vnode.component) {\r\n        setTransitionHooks(vnode.component.subTree, hooks);\r\n    }\r\n    else {\r\n        vnode.transition = hooks;\r\n    }\r\n}\r\nfunction getTransitionRawChildren(children, keepComment = false) {\r\n    let ret = [];\r\n    let keyedFragmentCount = 0;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        // handle fragment children case, e.g. v-for\r\n        if (child.type === Fragment) {\r\n            if (child.patchFlag & 128 /* KEYED_FRAGMENT */)\r\n                keyedFragmentCount++;\r\n            ret = ret.concat(getTransitionRawChildren(child.children, keepComment));\r\n        }\r\n        // comment placeholders should be skipped, e.g. v-if\r\n        else if (keepComment || child.type !== Comment) {\r\n            ret.push(child);\r\n        }\r\n    }\r\n    // #1126 if a transition children list contains multiple sub fragments, these\r\n    // fragments will be merged into a flat children array. Since each v-for\r\n    // fragment may contain different static bindings inside, we need to de-top\r\n    // these children to force full diffs to ensure correct behavior.\r\n    if (keyedFragmentCount > 1) {\r\n        for (let i = 0; i < ret.length; i++) {\r\n            ret[i].patchFlag = -2 /* BAIL */;\r\n        }\r\n    }\r\n    return ret;\r\n}\n\nconst isKeepAlive = (vnode) => vnode.type.__isKeepAlive;\r\nconst KeepAliveImpl = {\r\n    name: `KeepAlive`,\r\n    // Marker for special handling inside the renderer. We are not using a ===\r\n    // check directly on KeepAlive in the renderer, because importing it directly\r\n    // would prevent it from being tree-shaken.\r\n    __isKeepAlive: true,\r\n    inheritRef: true,\r\n    props: {\r\n        include: [String, RegExp, Array],\r\n        exclude: [String, RegExp, Array],\r\n        max: [String, Number]\r\n    },\r\n    setup(props, { slots }) {\r\n        const cache = new Map();\r\n        const keys = new Set();\r\n        let current = null;\r\n        const instance = getCurrentInstance();\r\n        const parentSuspense = instance.suspense;\r\n        // KeepAlive communicates with the instantiated renderer via the\r\n        // ctx where the renderer passes in its internals,\r\n        // and the KeepAlive instance exposes activate/deactivate implementations.\r\n        // The whole point of this is to avoid importing KeepAlive directly in the\r\n        // renderer to facilitate tree-shaking.\r\n        const sharedContext = instance.ctx;\r\n        const { renderer: { p: patch, m: move, um: _unmount, o: { createElement } } } = sharedContext;\r\n        const storageContainer = createElement('div');\r\n        sharedContext.activate = (vnode, container, anchor, isSVG, optimized) => {\r\n            const instance = vnode.component;\r\n            move(vnode, container, anchor, 0 /* ENTER */, parentSuspense);\r\n            // in case props have changed\r\n            patch(instance.vnode, vnode, container, anchor, instance, parentSuspense, isSVG, optimized);\r\n            queuePostRenderEffect(() => {\r\n                instance.isDeactivated = false;\r\n                if (instance.a) {\r\n                    invokeArrayFns(instance.a);\r\n                }\r\n                const vnodeHook = vnode.props && vnode.props.onVnodeMounted;\r\n                if (vnodeHook) {\r\n                    invokeVNodeHook(vnodeHook, instance.parent, vnode);\r\n                }\r\n            }, parentSuspense);\r\n        };\r\n        sharedContext.deactivate = (vnode) => {\r\n            const instance = vnode.component;\r\n            move(vnode, storageContainer, null, 1 /* LEAVE */, parentSuspense);\r\n            queuePostRenderEffect(() => {\r\n                if (instance.da) {\r\n                    invokeArrayFns(instance.da);\r\n                }\r\n                const vnodeHook = vnode.props && vnode.props.onVnodeUnmounted;\r\n                if (vnodeHook) {\r\n                    invokeVNodeHook(vnodeHook, instance.parent, vnode);\r\n                }\r\n                instance.isDeactivated = true;\r\n            }, parentSuspense);\r\n        };\r\n        function unmount(vnode) {\r\n            // reset the shapeFlag so it can be properly unmounted\r\n            resetShapeFlag(vnode);\r\n            _unmount(vnode, instance, parentSuspense);\r\n        }\r\n        function pruneCache(filter) {\r\n            cache.forEach((vnode, key) => {\r\n                const name = getName(vnode.type);\r\n                if (name && (!filter || !filter(name))) {\r\n                    pruneCacheEntry(key);\r\n                }\r\n            });\r\n        }\r\n        function pruneCacheEntry(key) {\r\n            const cached = cache.get(key);\r\n            if (!current || cached.type !== current.type) {\r\n                unmount(cached);\r\n            }\r\n            else if (current) {\r\n                // current active instance should no longer be kept-alive.\r\n                // we can't unmount it now but it might be later, so reset its flag now.\r\n                resetShapeFlag(current);\r\n            }\r\n            cache.delete(key);\r\n            keys.delete(key);\r\n        }\r\n        watch(() => [props.include, props.exclude], ([include, exclude]) => {\r\n            include && pruneCache(name => matches(include, name));\r\n            exclude && pruneCache(name => matches(exclude, name));\r\n        });\r\n        // cache sub tree in beforeMount/Update (i.e. right after the render)\r\n        let pendingCacheKey = null;\r\n        const cacheSubtree = () => {\r\n            // fix #1621, the pendingCacheKey could be 0\r\n            if (pendingCacheKey != null) {\r\n                cache.set(pendingCacheKey, instance.subTree);\r\n            }\r\n        };\r\n        onBeforeMount(cacheSubtree);\r\n        onBeforeUpdate(cacheSubtree);\r\n        onBeforeUnmount(() => {\r\n            cache.forEach(cached => {\r\n                const { subTree, suspense } = instance;\r\n                if (cached.type === subTree.type) {\r\n                    // current instance will be unmounted as part of keep-alive's unmount\r\n                    resetShapeFlag(subTree);\r\n                    // but invoke its deactivated hook here\r\n                    const da = subTree.component.da;\r\n                    da && queuePostRenderEffect(da, suspense);\r\n                    return;\r\n                }\r\n                unmount(cached);\r\n            });\r\n        });\r\n        return () => {\r\n            pendingCacheKey = null;\r\n            if (!slots.default) {\r\n                return null;\r\n            }\r\n            const children = slots.default();\r\n            let vnode = children[0];\r\n            if (children.length > 1) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`KeepAlive should contain exactly one component child.`);\r\n                }\r\n                current = null;\r\n                return children;\r\n            }\r\n            else if (!isVNode(vnode) ||\r\n                !(vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */)) {\r\n                current = null;\r\n                return vnode;\r\n            }\r\n            const comp = vnode.type;\r\n            const name = getName(comp);\r\n            const { include, exclude, max } = props;\r\n            if ((include && (!name || !matches(include, name))) ||\r\n                (exclude && name && matches(exclude, name))) {\r\n                return (current = vnode);\r\n            }\r\n            const key = vnode.key == null ? comp : vnode.key;\r\n            const cachedVNode = cache.get(key);\r\n            // clone vnode if it's reused because we are going to mutate it\r\n            if (vnode.el) {\r\n                vnode = cloneVNode(vnode);\r\n            }\r\n            // #1513 it's possible for the returned vnode to be cloned due to attr\r\n            // fallthrough or scopeId, so the vnode here may not be the final vnode\r\n            // that is mounted. Instead of caching it directly, we store the pending\r\n            // key and cache `instance.subTree` (the normalized vnode) in\r\n            // beforeMount/beforeUpdate hooks.\r\n            pendingCacheKey = key;\r\n            if (cachedVNode) {\r\n                // copy over mounted state\r\n                vnode.el = cachedVNode.el;\r\n                vnode.component = cachedVNode.component;\r\n                if (vnode.transition) {\r\n                    // recursively update transition hooks on subTree\r\n                    setTransitionHooks(vnode, vnode.transition);\r\n                }\r\n                // avoid vnode being mounted as fresh\r\n                vnode.shapeFlag |= 512 /* COMPONENT_KEPT_ALIVE */;\r\n                // make this key the freshest\r\n                keys.delete(key);\r\n                keys.add(key);\r\n            }\r\n            else {\r\n                keys.add(key);\r\n                // prune oldest entry\r\n                if (max && keys.size > parseInt(max, 10)) {\r\n                    pruneCacheEntry(keys.values().next().value);\r\n                }\r\n            }\r\n            // avoid vnode being unmounted\r\n            vnode.shapeFlag |= 256 /* COMPONENT_SHOULD_KEEP_ALIVE */;\r\n            current = vnode;\r\n            return vnode;\r\n        };\r\n    }\r\n};\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst KeepAlive = KeepAliveImpl;\r\nfunction getName(comp) {\r\n    return comp.displayName || comp.name;\r\n}\r\nfunction matches(pattern, name) {\r\n    if (isArray(pattern)) {\r\n        return pattern.some((p) => matches(p, name));\r\n    }\r\n    else if (isString(pattern)) {\r\n        return pattern.split(',').indexOf(name) > -1;\r\n    }\r\n    else if (pattern.test) {\r\n        return pattern.test(name);\r\n    }\r\n    /* istanbul ignore next */\r\n    return false;\r\n}\r\nfunction onActivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"a\" /* ACTIVATED */, target);\r\n}\r\nfunction onDeactivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"da\" /* DEACTIVATED */, target);\r\n}\r\nfunction registerKeepAliveHook(hook, type, target = currentInstance) {\r\n    // cache the deactivate branch check wrapper for injected hooks so the same\r\n    // hook can be properly deduped by the scheduler. \"__wdc\" stands for \"with\r\n    // deactivation check\".\r\n    const wrappedHook = hook.__wdc ||\r\n        (hook.__wdc = () => {\r\n            // only fire the hook if the target instance is NOT in a deactivated branch.\r\n            let current = target;\r\n            while (current) {\r\n                if (current.isDeactivated) {\r\n                    return;\r\n                }\r\n                current = current.parent;\r\n            }\r\n            hook();\r\n        });\r\n    injectHook(type, wrappedHook, target);\r\n    // In addition to registering it on the target instance, we walk up the parent\r\n    // chain and register it on all ancestor instances that are keep-alive roots.\r\n    // This avoids the need to walk the entire component tree when invoking these\r\n    // hooks, and more importantly, avoids the need to track child components in\r\n    // arrays.\r\n    if (target) {\r\n        let current = target.parent;\r\n        while (current && current.parent) {\r\n            if (isKeepAlive(current.parent.vnode)) {\r\n                injectToKeepAliveRoot(wrappedHook, type, target, current);\r\n            }\r\n            current = current.parent;\r\n        }\r\n    }\r\n}\r\nfunction injectToKeepAliveRoot(hook, type, target, keepAliveRoot) {\r\n    injectHook(type, hook, keepAliveRoot, true /* prepend */);\r\n    onUnmounted(() => {\r\n        remove(keepAliveRoot[type], hook);\r\n    }, target);\r\n}\r\nfunction resetShapeFlag(vnode) {\r\n    let shapeFlag = vnode.shapeFlag;\r\n    if (shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n        shapeFlag -= 256 /* COMPONENT_SHOULD_KEEP_ALIVE */;\r\n    }\r\n    if (shapeFlag & 512 /* COMPONENT_KEPT_ALIVE */) {\r\n        shapeFlag -= 512 /* COMPONENT_KEPT_ALIVE */;\r\n    }\r\n    vnode.shapeFlag = shapeFlag;\r\n}\n\nconst isInternalKey = (key) => key[0] === '_' || key === '$stable';\r\nconst normalizeSlotValue = (value) => isArray(value)\r\n    ? value.map(normalizeVNode)\r\n    : [normalizeVNode(value)];\r\nconst normalizeSlot = (key, rawSlot, ctx) => withCtx((props) => {\r\n    if ((process.env.NODE_ENV !== 'production') && currentInstance) {\r\n        warn(`Slot \"${key}\" invoked outside of the render function: ` +\r\n            `this will not track dependencies used in the slot. ` +\r\n            `Invoke the slot function inside the render function instead.`);\r\n    }\r\n    return normalizeSlotValue(rawSlot(props));\r\n}, ctx);\r\nconst normalizeObjectSlots = (rawSlots, slots) => {\r\n    const ctx = rawSlots._ctx;\r\n    for (const key in rawSlots) {\r\n        if (isInternalKey(key))\r\n            continue;\r\n        const value = rawSlots[key];\r\n        if (isFunction(value)) {\r\n            slots[key] = normalizeSlot(key, value, ctx);\r\n        }\r\n        else if (value != null) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Non-function value encountered for slot \"${key}\". ` +\r\n                    `Prefer function slots for better performance.`);\r\n            }\r\n            const normalized = normalizeSlotValue(value);\r\n            slots[key] = () => normalized;\r\n        }\r\n    }\r\n};\r\nconst normalizeVNodeSlots = (instance, children) => {\r\n    if ((process.env.NODE_ENV !== 'production') && !isKeepAlive(instance.vnode)) {\r\n        warn(`Non-function value encountered for default slot. ` +\r\n            `Prefer function slots for better performance.`);\r\n    }\r\n    const normalized = normalizeSlotValue(children);\r\n    instance.slots.default = () => normalized;\r\n};\r\nconst initSlots = (instance, children) => {\r\n    if (instance.vnode.shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        const type = children._;\r\n        if (type) {\r\n            instance.slots = children;\r\n            // make compiler marker non-enumerable\r\n            def(children, '_', type);\r\n        }\r\n        else {\r\n            normalizeObjectSlots(children, (instance.slots = {}));\r\n        }\r\n    }\r\n    else {\r\n        instance.slots = {};\r\n        if (children) {\r\n            normalizeVNodeSlots(instance, children);\r\n        }\r\n    }\r\n    def(instance.slots, InternalObjectKey, 1);\r\n};\r\nconst updateSlots = (instance, children) => {\r\n    const { vnode, slots } = instance;\r\n    let needDeletionCheck = true;\r\n    let deletionComparisonTarget = EMPTY_OBJ;\r\n    if (vnode.shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        const type = children._;\r\n        if (type) {\r\n            // compiled slots.\r\n            if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n                // Parent was HMR updated so slot content may have changed.\r\n                // force update slots and mark instance for hmr as well\r\n                extend(slots, children);\r\n            }\r\n            else if (type === 1 /* STABLE */) {\r\n                // compiled AND stable.\r\n                // no need to update, and skip stale slots removal.\r\n                needDeletionCheck = false;\r\n            }\r\n            else {\r\n                // compiled but dynamic (v-if/v-for on slots) - update slots, but skip\r\n                // normalization.\r\n                extend(slots, children);\r\n            }\r\n        }\r\n        else {\r\n            needDeletionCheck = !children.$stable;\r\n            normalizeObjectSlots(children, slots);\r\n        }\r\n        deletionComparisonTarget = children;\r\n    }\r\n    else if (children) {\r\n        // non slot object children (direct value) passed to a component\r\n        normalizeVNodeSlots(instance, children);\r\n        deletionComparisonTarget = { default: 1 };\r\n    }\r\n    // delete stale slots\r\n    if (needDeletionCheck) {\r\n        for (const key in slots) {\r\n            if (!isInternalKey(key) && !(key in deletionComparisonTarget)) {\r\n                delete slots[key];\r\n            }\r\n        }\r\n    }\r\n};\n\n/**\r\nRuntime helper for applying directives to a vnode. Example usage:\r\n\nconst comp = resolveComponent('comp')\r\nconst foo = resolveDirective('foo')\r\nconst bar = resolveDirective('bar')\r\n\nreturn withDirectives(h(comp), [\r\n  [foo, this.x],\r\n  [bar, this.y]\r\n])\r\n*/\r\nconst isBuiltInDirective = /*#__PURE__*/ makeMap('bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text');\r\nfunction validateDirectiveName(name) {\r\n    if (isBuiltInDirective(name)) {\r\n        warn('Do not use built-in directive ids as custom directive id: ' + name);\r\n    }\r\n}\r\n/**\r\n * Adds directives to a VNode.\r\n */\r\nfunction withDirectives(vnode, directives) {\r\n    const internalInstance = currentRenderingInstance;\r\n    if (internalInstance === null) {\r\n        (process.env.NODE_ENV !== 'production') && warn(`withDirectives can only be used inside render functions.`);\r\n        return vnode;\r\n    }\r\n    const instance = internalInstance.proxy;\r\n    const bindings = vnode.dirs || (vnode.dirs = []);\r\n    for (let i = 0; i < directives.length; i++) {\r\n        let [dir, value, arg, modifiers = EMPTY_OBJ] = directives[i];\r\n        if (isFunction(dir)) {\r\n            dir = {\r\n                mounted: dir,\r\n                updated: dir\r\n            };\r\n        }\r\n        bindings.push({\r\n            dir,\r\n            instance,\r\n            value,\r\n            oldValue: void 0,\r\n            arg,\r\n            modifiers\r\n        });\r\n    }\r\n    return vnode;\r\n}\r\nfunction invokeDirectiveHook(vnode, prevVNode, instance, name) {\r\n    const bindings = vnode.dirs;\r\n    const oldBindings = prevVNode && prevVNode.dirs;\r\n    for (let i = 0; i < bindings.length; i++) {\r\n        const binding = bindings[i];\r\n        if (oldBindings) {\r\n            binding.oldValue = oldBindings[i].value;\r\n        }\r\n        const hook = binding.dir[name];\r\n        if (hook) {\r\n            callWithAsyncErrorHandling(hook, instance, 8 /* DIRECTIVE_HOOK */, [\r\n                vnode.el,\r\n                binding,\r\n                vnode,\r\n                prevVNode\r\n            ]);\r\n        }\r\n    }\r\n}\n\nvar DevtoolsHooks;\r\n(function (DevtoolsHooks) {\r\n    DevtoolsHooks[\"APP_INIT\"] = \"app:init\";\r\n    DevtoolsHooks[\"APP_UNMOUNT\"] = \"app:unmount\";\r\n    DevtoolsHooks[\"COMPONENT_UPDATED\"] = \"component:updated\";\r\n    DevtoolsHooks[\"COMPONENT_ADDED\"] = \"component:added\";\r\n    DevtoolsHooks[\"COMPONENT_REMOVED\"] = \"component:removed\";\r\n})(DevtoolsHooks || (DevtoolsHooks = {}));\r\nlet devtools;\r\nfunction setDevtoolsHook(hook) {\r\n    devtools = hook;\r\n}\r\nfunction initApp(app, version) {\r\n    // TODO queue if devtools is undefined\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(DevtoolsHooks.APP_INIT, app, version, {\r\n        Fragment: Fragment,\r\n        Text: Text,\r\n        Comment: Comment,\r\n        Static: Static\r\n    });\r\n}\r\nfunction appUnmounted(app) {\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(DevtoolsHooks.APP_UNMOUNT, app);\r\n}\r\nconst componentAdded = createDevtoolsHook(DevtoolsHooks.COMPONENT_ADDED);\r\nconst componentUpdated = createDevtoolsHook(DevtoolsHooks.COMPONENT_UPDATED);\r\nconst componentRemoved = createDevtoolsHook(DevtoolsHooks.COMPONENT_REMOVED);\r\nfunction createDevtoolsHook(hook) {\r\n    return (component) => {\r\n        if (!devtools || !component.appContext.__app)\r\n            return;\r\n        devtools.emit(hook, component.appContext.__app, component.uid, component.parent ? component.parent.uid : undefined);\r\n    };\r\n}\n\nfunction createAppContext() {\r\n    return {\r\n        config: {\r\n            isNativeTag: NO,\r\n            devtools: true,\r\n            performance: false,\r\n            globalProperties: {},\r\n            optionMergeStrategies: {},\r\n            isCustomElement: NO,\r\n            errorHandler: undefined,\r\n            warnHandler: undefined\r\n        },\r\n        mixins: [],\r\n        components: {},\r\n        directives: {},\r\n        provides: Object.create(null)\r\n    };\r\n}\r\nfunction createAppAPI(render, hydrate) {\r\n    return function createApp(rootComponent, rootProps = null) {\r\n        if (rootProps != null && !isObject(rootProps)) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`root props passed to app.mount() must be an object.`);\r\n            rootProps = null;\r\n        }\r\n        const context = createAppContext();\r\n        const installedPlugins = new Set();\r\n        let isMounted = false;\r\n        const app = {\r\n            _component: rootComponent,\r\n            _props: rootProps,\r\n            _container: null,\r\n            _context: context,\r\n            version,\r\n            get config() {\r\n                return context.config;\r\n            },\r\n            set config(v) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`app.config cannot be replaced. Modify individual options instead.`);\r\n                }\r\n            },\r\n            use(plugin, ...options) {\r\n                if (installedPlugins.has(plugin)) {\r\n                    (process.env.NODE_ENV !== 'production') && warn(`Plugin has already been applied to target app.`);\r\n                }\r\n                else if (plugin && isFunction(plugin.install)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin.install(app, ...options);\r\n                }\r\n                else if (isFunction(plugin)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin(app, ...options);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`A plugin must either be a function or an object with an \"install\" ` +\r\n                        `function.`);\r\n                }\r\n                return app;\r\n            },\r\n            mixin(mixin) {\r\n                {\r\n                    if (!context.mixins.includes(mixin)) {\r\n                        context.mixins.push(mixin);\r\n                    }\r\n                    else if ((process.env.NODE_ENV !== 'production')) {\r\n                        warn('Mixin has already been applied to target app' +\r\n                            (mixin.name ? `: ${mixin.name}` : ''));\r\n                    }\r\n                }\r\n                return app;\r\n            },\r\n            component(name, component) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    validateComponentName(name, context.config);\r\n                }\r\n                if (!component) {\r\n                    return context.components[name];\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && context.components[name]) {\r\n                    warn(`Component \"${name}\" has already been registered in target app.`);\r\n                }\r\n                context.components[name] = component;\r\n                return app;\r\n            },\r\n            directive(name, directive) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    validateDirectiveName(name);\r\n                }\r\n                if (!directive) {\r\n                    return context.directives[name];\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && context.directives[name]) {\r\n                    warn(`Directive \"${name}\" has already been registered in target app.`);\r\n                }\r\n                context.directives[name] = directive;\r\n                return app;\r\n            },\r\n            mount(rootContainer, isHydrate) {\r\n                if (!isMounted) {\r\n                    const vnode = createVNode(rootComponent, rootProps);\r\n                    // store app context on the root VNode.\r\n                    // this will be set on the root instance on initial mount.\r\n                    vnode.appContext = context;\r\n                    // HMR root reload\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        context.reload = () => {\r\n                            render(cloneVNode(vnode), rootContainer);\r\n                        };\r\n                    }\r\n                    if (isHydrate && hydrate) {\r\n                        hydrate(vnode, rootContainer);\r\n                    }\r\n                    else {\r\n                        render(vnode, rootContainer);\r\n                    }\r\n                    isMounted = true;\r\n                    app._container = rootContainer;\r\n                    (process.env.NODE_ENV !== 'production') && initApp(app, version);\r\n                    return vnode.component.proxy;\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`App has already been mounted.\\n` +\r\n                        `If you want to remount the same app, move your app creation logic ` +\r\n                        `into a factory function and create fresh app instances for each ` +\r\n                        `mount - e.g. \\`const createMyApp = () => createApp(App)\\``);\r\n                }\r\n            },\r\n            unmount() {\r\n                if (isMounted) {\r\n                    render(null, app._container);\r\n                    (process.env.NODE_ENV !== 'production') && appUnmounted(app);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`Cannot unmount an app that is not mounted.`);\r\n                }\r\n            },\r\n            provide(key, value) {\r\n                if ((process.env.NODE_ENV !== 'production') && key in context.provides) {\r\n                    warn(`App already provides property with key \"${String(key)}\". ` +\r\n                        `It will be overwritten with the new value.`);\r\n                }\r\n                // TypeScript doesn't allow symbols as index type\r\n                // https://github.com/Microsoft/TypeScript/issues/24587\r\n                context.provides[key] = value;\r\n                return app;\r\n            }\r\n        };\r\n        context.__app = app;\r\n        return app;\r\n    };\r\n}\n\nlet hasMismatch = false;\r\nconst isSVGContainer = (container) => /svg/.test(container.namespaceURI) && container.tagName !== 'foreignObject';\r\nconst isComment = (node) => node.nodeType === 8 /* COMMENT */;\r\n// Note: hydration is DOM-specific\r\n// But we have to place it in core due to tight coupling with core - splitting\r\n// it out creates a ton of unnecessary complexity.\r\n// Hydration also depends on some renderer internal logic which needs to be\r\n// passed in via arguments.\r\nfunction createHydrationFunctions(rendererInternals) {\r\n    const { mt: mountComponent, p: patch, o: { patchProp, nextSibling, parentNode, remove, insert, createComment } } = rendererInternals;\r\n    const hydrate = (vnode, container) => {\r\n        if ((process.env.NODE_ENV !== 'production') && !container.hasChildNodes()) {\r\n            warn(`Attempting to hydrate existing markup but container is empty. ` +\r\n                `Performing full mount instead.`);\r\n            patch(null, vnode, container);\r\n            return;\r\n        }\r\n        hasMismatch = false;\r\n        hydrateNode(container.firstChild, vnode, null, null);\r\n        flushPostFlushCbs();\r\n        if (hasMismatch && !false) {\r\n            // this error should show up in production\r\n            console.error(`Hydration completed but contains mismatches.`);\r\n        }\r\n    };\r\n    const hydrateNode = (node, vnode, parentComponent, parentSuspense, optimized = false) => {\r\n        const isFragmentStart = isComment(node) && node.data === '[';\r\n        const onMismatch = () => handleMismatch(node, vnode, parentComponent, parentSuspense, isFragmentStart);\r\n        const { type, ref, shapeFlag } = vnode;\r\n        const domType = node.nodeType;\r\n        vnode.el = node;\r\n        let nextNode = null;\r\n        switch (type) {\r\n            case Text:\r\n                if (domType !== 3 /* TEXT */) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    if (node.data !== vnode.children) {\r\n                        hasMismatch = true;\r\n                        (process.env.NODE_ENV !== 'production') &&\r\n                            warn(`Hydration text mismatch:` +\r\n                                `\\n- Client: ${JSON.stringify(node.data)}` +\r\n                                `\\n- Server: ${JSON.stringify(vnode.children)}`);\r\n                        node.data = vnode.children;\r\n                    }\r\n                    nextNode = nextSibling(node);\r\n                }\r\n                break;\r\n            case Comment:\r\n                if (domType !== 8 /* COMMENT */ || isFragmentStart) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    nextNode = nextSibling(node);\r\n                }\r\n                break;\r\n            case Static:\r\n                if (domType !== 1 /* ELEMENT */) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    // determine anchor, adopt content\r\n                    nextNode = node;\r\n                    // if the static vnode has its content stripped during build,\r\n                    // adopt it from the server-rendered HTML.\r\n                    const needToAdoptContent = !vnode.children.length;\r\n                    for (let i = 0; i < vnode.staticCount; i++) {\r\n                        if (needToAdoptContent)\r\n                            vnode.children += nextNode.outerHTML;\r\n                        if (i === vnode.staticCount - 1) {\r\n                            vnode.anchor = nextNode;\r\n                        }\r\n                        nextNode = nextSibling(nextNode);\r\n                    }\r\n                    return nextNode;\r\n                }\r\n                break;\r\n            case Fragment:\r\n                if (!isFragmentStart) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    nextNode = hydrateFragment(node, vnode, parentComponent, parentSuspense, optimized);\r\n                }\r\n                break;\r\n            default:\r\n                if (shapeFlag & 1 /* ELEMENT */) {\r\n                    if (domType !== 1 /* ELEMENT */ ||\r\n                        vnode.type !== node.tagName.toLowerCase()) {\r\n                        nextNode = onMismatch();\r\n                    }\r\n                    else {\r\n                        nextNode = hydrateElement(node, vnode, parentComponent, parentSuspense, optimized);\r\n                    }\r\n                }\r\n                else if (shapeFlag & 6 /* COMPONENT */) {\r\n                    // when setting up the render effect, if the initial vnode already\r\n                    // has .el set, the component will perform hydration instead of mount\r\n                    // on its sub-tree.\r\n                    const container = parentNode(node);\r\n                    const hydrateComponent = () => {\r\n                        mountComponent(vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container), optimized);\r\n                    };\r\n                    // async component\r\n                    const loadAsync = vnode.type.__asyncLoader;\r\n                    if (loadAsync) {\r\n                        loadAsync().then(hydrateComponent);\r\n                    }\r\n                    else {\r\n                        hydrateComponent();\r\n                    }\r\n                    // component may be async, so in the case of fragments we cannot rely\r\n                    // on component's rendered output to determine the end of the fragment\r\n                    // instead, we do a lookahead to find the end anchor node.\r\n                    nextNode = isFragmentStart\r\n                        ? locateClosingAsyncAnchor(node)\r\n                        : nextSibling(node);\r\n                }\r\n                else if (shapeFlag & 64 /* TELEPORT */) {\r\n                    if (domType !== 8 /* COMMENT */) {\r\n                        nextNode = onMismatch();\r\n                    }\r\n                    else {\r\n                        nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, optimized, rendererInternals, hydrateChildren);\r\n                    }\r\n                }\r\n                else if ( shapeFlag & 128 /* SUSPENSE */) {\r\n                    nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, isSVGContainer(parentNode(node)), optimized, rendererInternals, hydrateNode);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Invalid HostVNode type:', type, `(${typeof type})`);\r\n                }\r\n        }\r\n        if (ref != null && parentComponent) {\r\n            setRef(ref, null, parentComponent, parentSuspense, vnode);\r\n        }\r\n        return nextNode;\r\n    };\r\n    const hydrateElement = (el, vnode, parentComponent, parentSuspense, optimized) => {\r\n        optimized = optimized || !!vnode.dynamicChildren;\r\n        const { props, patchFlag, shapeFlag, dirs } = vnode;\r\n        // skip props & children if this is hoisted static nodes\r\n        if (patchFlag !== -1 /* HOISTED */) {\r\n            // props\r\n            if (props) {\r\n                if (!optimized ||\r\n                    (patchFlag & 16 /* FULL_PROPS */ ||\r\n                        patchFlag & 32 /* HYDRATE_EVENTS */)) {\r\n                    for (const key in props) {\r\n                        if (!isReservedProp(key) && isOn(key)) {\r\n                            patchProp(el, key, null, props[key]);\r\n                        }\r\n                    }\r\n                }\r\n                else if (props.onClick) {\r\n                    // Fast path for click listeners (which is most often) to avoid\r\n                    // iterating through props.\r\n                    patchProp(el, 'onClick', null, props.onClick);\r\n                }\r\n            }\r\n            // vnode / directive hooks\r\n            let vnodeHooks;\r\n            if ((vnodeHooks = props && props.onVnodeBeforeMount)) {\r\n                invokeVNodeHook(vnodeHooks, parentComponent, vnode);\r\n            }\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\r\n            }\r\n            if ((vnodeHooks = props && props.onVnodeMounted) || dirs) {\r\n                queueEffectWithSuspense(() => {\r\n                    vnodeHooks && invokeVNodeHook(vnodeHooks, parentComponent, vnode);\r\n                    dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\r\n                }, parentSuspense);\r\n            }\r\n            // children\r\n            if (shapeFlag & 16 /* ARRAY_CHILDREN */ &&\r\n                // skip if element has innerHTML / textContent\r\n                !(props && (props.innerHTML || props.textContent))) {\r\n                let next = hydrateChildren(el.firstChild, vnode, el, parentComponent, parentSuspense, optimized);\r\n                let hasWarned = false;\r\n                while (next) {\r\n                    hasMismatch = true;\r\n                    if ((process.env.NODE_ENV !== 'production') && !hasWarned) {\r\n                        warn(`Hydration children mismatch in <${vnode.type}>: ` +\r\n                            `server rendered element contains more child nodes than client vdom.`);\r\n                        hasWarned = true;\r\n                    }\r\n                    // The SSRed DOM contains more nodes than it should. Remove them.\r\n                    const cur = next;\r\n                    next = next.nextSibling;\r\n                    remove(cur);\r\n                }\r\n            }\r\n            else if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                if (el.textContent !== vnode.children) {\r\n                    hasMismatch = true;\r\n                    (process.env.NODE_ENV !== 'production') &&\r\n                        warn(`Hydration text content mismatch in <${vnode.type}>:\\n` +\r\n                            `- Client: ${el.textContent}\\n` +\r\n                            `- Server: ${vnode.children}`);\r\n                    el.textContent = vnode.children;\r\n                }\r\n            }\r\n        }\r\n        return el.nextSibling;\r\n    };\r\n    const hydrateChildren = (node, vnode, container, parentComponent, parentSuspense, optimized) => {\r\n        optimized = optimized || !!vnode.dynamicChildren;\r\n        const children = vnode.children;\r\n        const l = children.length;\r\n        let hasWarned = false;\r\n        for (let i = 0; i < l; i++) {\r\n            const vnode = optimized\r\n                ? children[i]\r\n                : (children[i] = normalizeVNode(children[i]));\r\n            if (node) {\r\n                node = hydrateNode(node, vnode, parentComponent, parentSuspense, optimized);\r\n            }\r\n            else {\r\n                hasMismatch = true;\r\n                if ((process.env.NODE_ENV !== 'production') && !hasWarned) {\r\n                    warn(`Hydration children mismatch in <${container.tagName.toLowerCase()}>: ` +\r\n                        `server rendered element contains fewer child nodes than client vdom.`);\r\n                    hasWarned = true;\r\n                }\r\n                // the SSRed DOM didn't contain enough nodes. Mount the missing ones.\r\n                patch(null, vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container));\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    const hydrateFragment = (node, vnode, parentComponent, parentSuspense, optimized) => {\r\n        const container = parentNode(node);\r\n        const next = hydrateChildren(nextSibling(node), vnode, container, parentComponent, parentSuspense, optimized);\r\n        if (next && isComment(next) && next.data === ']') {\r\n            return nextSibling((vnode.anchor = next));\r\n        }\r\n        else {\r\n            // fragment didn't hydrate successfully, since we didn't get a end anchor\r\n            // back. This should have led to node/children mismatch warnings.\r\n            hasMismatch = true;\r\n            // since the anchor is missing, we need to create one and insert it\r\n            insert((vnode.anchor = createComment(`]`)), container, next);\r\n            return next;\r\n        }\r\n    };\r\n    const handleMismatch = (node, vnode, parentComponent, parentSuspense, isFragment) => {\r\n        hasMismatch = true;\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`Hydration node mismatch:\\n- Client vnode:`, vnode.type, `\\n- Server rendered DOM:`, node, node.nodeType === 3 /* TEXT */\r\n                ? `(text)`\r\n                : isComment(node) && node.data === '['\r\n                    ? `(start of fragment)`\r\n                    : ``);\r\n        vnode.el = null;\r\n        if (isFragment) {\r\n            // remove excessive fragment nodes\r\n            const end = locateClosingAsyncAnchor(node);\r\n            while (true) {\r\n                const next = nextSibling(node);\r\n                if (next && next !== end) {\r\n                    remove(next);\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        const next = nextSibling(node);\r\n        const container = parentNode(node);\r\n        remove(node);\r\n        patch(null, vnode, container, next, parentComponent, parentSuspense, isSVGContainer(container));\r\n        return next;\r\n    };\r\n    const locateClosingAsyncAnchor = (node) => {\r\n        let match = 0;\r\n        while (node) {\r\n            node = nextSibling(node);\r\n            if (node && isComment(node)) {\r\n                if (node.data === '[')\r\n                    match++;\r\n                if (node.data === ']') {\r\n                    if (match === 0) {\r\n                        return nextSibling(node);\r\n                    }\r\n                    else {\r\n                        match--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    return [hydrate, hydrateNode];\r\n}\n\nlet supported;\r\nlet perf;\r\nfunction startMeasure(instance, type) {\r\n    if (instance.appContext.config.performance && isSupported()) {\r\n        perf.mark(`vue-${type}-${instance.uid}`);\r\n    }\r\n}\r\nfunction endMeasure(instance, type) {\r\n    if (instance.appContext.config.performance && isSupported()) {\r\n        const startTag = `vue-${type}-${instance.uid}`;\r\n        const endTag = startTag + `:end`;\r\n        perf.mark(endTag);\r\n        perf.measure(`<${formatComponentName(instance, instance.type)}> ${type}`, startTag, endTag);\r\n        perf.clearMarks(startTag);\r\n        perf.clearMarks(endTag);\r\n    }\r\n}\r\nfunction isSupported() {\r\n    if (supported !== undefined) {\r\n        return supported;\r\n    }\r\n    /* eslint-disable no-restricted-globals */\r\n    if (typeof window !== 'undefined' && window.performance) {\r\n        supported = true;\r\n        perf = window.performance;\r\n    }\r\n    else {\r\n        supported = false;\r\n    }\r\n    /* eslint-enable no-restricted-globals */\r\n    return supported;\r\n}\n\nconst prodEffectOptions = {\r\n    scheduler: queueJob\r\n};\r\nfunction createDevEffectOptions(instance) {\r\n    return {\r\n        scheduler: queueJob,\r\n        onTrack: instance.rtc ? e => invokeArrayFns(instance.rtc, e) : void 0,\r\n        onTrigger: instance.rtg ? e => invokeArrayFns(instance.rtg, e) : void 0\r\n    };\r\n}\r\nconst queuePostRenderEffect =  queueEffectWithSuspense\r\n    ;\r\nconst setRef = (rawRef, oldRawRef, parentComponent, parentSuspense, vnode) => {\r\n    let value;\r\n    if (!vnode) {\r\n        value = null;\r\n    }\r\n    else {\r\n        if (vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */) {\r\n            value = vnode.component.proxy;\r\n        }\r\n        else {\r\n            value = vnode.el;\r\n        }\r\n    }\r\n    const [owner, ref] = rawRef;\r\n    if ((process.env.NODE_ENV !== 'production') && !owner) {\r\n        warn(`Missing ref owner context. ref cannot be used on hoisted vnodes. ` +\r\n            `A vnode with ref must be created inside the render function.`);\r\n        return;\r\n    }\r\n    const oldRef = oldRawRef && oldRawRef[1];\r\n    const refs = owner.refs === EMPTY_OBJ ? (owner.refs = {}) : owner.refs;\r\n    const setupState = owner.setupState;\r\n    // unset old ref\r\n    if (oldRef != null && oldRef !== ref) {\r\n        if (isString(oldRef)) {\r\n            refs[oldRef] = null;\r\n            if (hasOwn(setupState, oldRef)) {\r\n                queuePostRenderEffect(() => {\r\n                    setupState[oldRef] = null;\r\n                }, parentSuspense);\r\n            }\r\n        }\r\n        else if (isRef(oldRef)) {\r\n            oldRef.value = null;\r\n        }\r\n    }\r\n    if (isString(ref)) {\r\n        refs[ref] = value;\r\n        if (hasOwn(setupState, ref)) {\r\n            queuePostRenderEffect(() => {\r\n                setupState[ref] = value;\r\n            }, parentSuspense);\r\n        }\r\n    }\r\n    else if (isRef(ref)) {\r\n        ref.value = value;\r\n    }\r\n    else if (isFunction(ref)) {\r\n        callWithErrorHandling(ref, parentComponent, 12 /* FUNCTION_REF */, [\r\n            value,\r\n            refs\r\n        ]);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn('Invalid template ref type:', value, `(${typeof value})`);\r\n    }\r\n};\r\n/**\r\n * The createRenderer function accepts two generic arguments:\r\n * HostNode and HostElement, corresponding to Node and Element types in the\r\n * host environment. For example, for runtime-dom, HostNode would be the DOM\r\n * `Node` interface and HostElement would be the DOM `Element` interface.\r\n *\r\n * Custom renderers can pass in the platform specific types like this:\r\n *\r\n * ``` js\r\n * const { render, createApp } = createRenderer<Node, Element>({\r\n *   patchProp,\r\n *   ...nodeOps\r\n * })\r\n * ```\r\n */\r\nfunction createRenderer(options) {\r\n    return baseCreateRenderer(options);\r\n}\r\n// Separate API for creating hydration-enabled renderer.\r\n// Hydration logic is only used when calling this function, making it\r\n// tree-shakable.\r\nfunction createHydrationRenderer(options) {\r\n    return baseCreateRenderer(options, createHydrationFunctions);\r\n}\r\n// implementation\r\nfunction baseCreateRenderer(options, createHydrationFns) {\r\n    const { insert: hostInsert, remove: hostRemove, patchProp: hostPatchProp, forcePatchProp: hostForcePatchProp, createElement: hostCreateElement, createText: hostCreateText, createComment: hostCreateComment, setText: hostSetText, setElementText: hostSetElementText, parentNode: hostParentNode, nextSibling: hostNextSibling, setScopeId: hostSetScopeId = NOOP, cloneNode: hostCloneNode, insertStaticContent: hostInsertStaticContent } = options;\r\n    // Note: functions inside this closure should use `const xxx = () => {}`\r\n    // style in order to prevent being inlined by minifiers.\r\n    const patch = (n1, n2, container, anchor = null, parentComponent = null, parentSuspense = null, isSVG = false, optimized = false) => {\r\n        // patching & not same type, unmount old tree\r\n        if (n1 && !isSameVNodeType(n1, n2)) {\r\n            anchor = getNextHostNode(n1);\r\n            unmount(n1, parentComponent, parentSuspense, true);\r\n            n1 = null;\r\n        }\r\n        if (n2.patchFlag === -2 /* BAIL */) {\r\n            optimized = false;\r\n            n2.dynamicChildren = null;\r\n        }\r\n        const { type, ref, shapeFlag } = n2;\r\n        switch (type) {\r\n            case Text:\r\n                processText(n1, n2, container, anchor);\r\n                break;\r\n            case Comment:\r\n                processCommentNode(n1, n2, container, anchor);\r\n                break;\r\n            case Static:\r\n                if (n1 == null) {\r\n                    mountStaticNode(n2, container, anchor, isSVG);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    patchStaticNode(n1, n2, container, isSVG);\r\n                }\r\n                break;\r\n            case Fragment:\r\n                processFragment(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                break;\r\n            default:\r\n                if (shapeFlag & 1 /* ELEMENT */) {\r\n                    processElement(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n                else if (shapeFlag & 6 /* COMPONENT */) {\r\n                    processComponent(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n                else if (shapeFlag & 64 /* TELEPORT */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, internals);\r\n                }\r\n                else if ( shapeFlag & 128 /* SUSPENSE */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, internals);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Invalid VNode type:', type, `(${typeof type})`);\r\n                }\r\n        }\r\n        // set ref\r\n        if (ref != null && parentComponent) {\r\n            setRef(ref, n1 && n1.ref, parentComponent, parentSuspense, n2);\r\n        }\r\n    };\r\n    const processText = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateText(n2.children)), container, anchor);\r\n        }\r\n        else {\r\n            const el = (n2.el = n1.el);\r\n            if (n2.children !== n1.children) {\r\n                hostSetText(el, n2.children);\r\n            }\r\n        }\r\n    };\r\n    const processCommentNode = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateComment(n2.children || '')), container, anchor);\r\n        }\r\n        else {\r\n            // there's no support for dynamic comments\r\n            n2.el = n1.el;\r\n        }\r\n    };\r\n    const mountStaticNode = (n2, container, anchor, isSVG) => {\r\n        [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG);\r\n    };\r\n    /**\r\n     * Dev / HMR only\r\n     */\r\n    const patchStaticNode = (n1, n2, container, isSVG) => {\r\n        // static nodes are only patched during dev for HMR\r\n        if (n2.children !== n1.children) {\r\n            const anchor = hostNextSibling(n1.anchor);\r\n            // remove existing\r\n            removeStaticNode(n1);\r\n            [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG);\r\n        }\r\n        else {\r\n            n2.el = n1.el;\r\n            n2.anchor = n1.anchor;\r\n        }\r\n    };\r\n    /**\r\n     * Dev / HMR only\r\n     */\r\n    const moveStaticNode = (vnode, container, anchor) => {\r\n        let cur = vnode.el;\r\n        const end = vnode.anchor;\r\n        while (cur && cur !== end) {\r\n            const next = hostNextSibling(cur);\r\n            hostInsert(cur, container, anchor);\r\n            cur = next;\r\n        }\r\n        hostInsert(end, container, anchor);\r\n    };\r\n    /**\r\n     * Dev / HMR only\r\n     */\r\n    const removeStaticNode = (vnode) => {\r\n        let cur = vnode.el;\r\n        while (cur && cur !== vnode.anchor) {\r\n            const next = hostNextSibling(cur);\r\n            hostRemove(cur);\r\n            cur = next;\r\n        }\r\n        hostRemove(vnode.anchor);\r\n    };\r\n    const processElement = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        isSVG = isSVG || n2.type === 'svg';\r\n        if (n1 == null) {\r\n            mountElement(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n        else {\r\n            patchElement(n1, n2, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n    };\r\n    const mountElement = (vnode, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        let el;\r\n        let vnodeHook;\r\n        const { type, props, shapeFlag, transition, scopeId, patchFlag, dirs } = vnode;\r\n        if (!(process.env.NODE_ENV !== 'production') &&\r\n            vnode.el &&\r\n            hostCloneNode !== undefined &&\r\n            patchFlag === -1 /* HOISTED */) {\r\n            // If a vnode has non-null el, it means it's being reused.\r\n            // Only static vnodes can be reused, so its mounted DOM nodes should be\r\n            // exactly the same, and we can simply do a clone here.\r\n            // only do this in production since cloned trees cannot be HMR updated.\r\n            el = vnode.el = hostCloneNode(vnode.el);\r\n        }\r\n        else {\r\n            el = vnode.el = hostCreateElement(vnode.type, isSVG, props && props.is);\r\n            // mount children first, since some props may rely on child content\r\n            // being already rendered, e.g. `<select value>`\r\n            if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                hostSetElementText(el, vnode.children);\r\n            }\r\n            else if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                mountChildren(vnode.children, el, null, parentComponent, parentSuspense, isSVG && type !== 'foreignObject', optimized || !!vnode.dynamicChildren);\r\n            }\r\n            // props\r\n            if (props) {\r\n                for (const key in props) {\r\n                    if (!isReservedProp(key)) {\r\n                        hostPatchProp(el, key, null, props[key], isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                    }\r\n                }\r\n                if ((vnodeHook = props.onVnodeBeforeMount)) {\r\n                    invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                }\r\n            }\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\r\n            }\r\n            // scopeId\r\n            if (scopeId) {\r\n                hostSetScopeId(el, scopeId);\r\n            }\r\n            const treeOwnerId = parentComponent && parentComponent.type.__scopeId;\r\n            // vnode's own scopeId and the current patched component's scopeId is\r\n            // different - this is a slot content node.\r\n            if (treeOwnerId && treeOwnerId !== scopeId) {\r\n                hostSetScopeId(el, treeOwnerId + '-s');\r\n            }\r\n            if (transition && !transition.persisted) {\r\n                transition.beforeEnter(el);\r\n            }\r\n        }\r\n        hostInsert(el, container, anchor);\r\n        // #1583 For inside suspense case, enter hook should call when suspense resolved\r\n        const needCallTransitionHooks = !parentSuspense && transition && !transition.persisted;\r\n        if ((vnodeHook = props && props.onVnodeMounted) ||\r\n            needCallTransitionHooks ||\r\n            dirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                needCallTransitionHooks && transition.enter(el);\r\n                dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const mountChildren = (children, container, anchor, parentComponent, parentSuspense, isSVG, optimized, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            const child = (children[i] = optimized\r\n                ? cloneIfMounted(children[i])\r\n                : normalizeVNode(children[i]));\r\n            patch(null, child, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n    };\r\n    const patchElement = (n1, n2, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const el = (n2.el = n1.el);\r\n        let { patchFlag, dynamicChildren, dirs } = n2;\r\n        // #1426 take the old vnode's patch flag into account since user may clone a\r\n        // compiler-generated vnode, which de-opts to FULL_PROPS\r\n        patchFlag |= n1.patchFlag & 16 /* FULL_PROPS */;\r\n        const oldProps = n1.props || EMPTY_OBJ;\r\n        const newProps = n2.props || EMPTY_OBJ;\r\n        let vnodeHook;\r\n        if ((vnodeHook = newProps.onVnodeBeforeUpdate)) {\r\n            invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\r\n        }\r\n        if (dirs) {\r\n            invokeDirectiveHook(n2, n1, parentComponent, 'beforeUpdate');\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n            // HMR updated, force full diff\r\n            patchFlag = 0;\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        if (patchFlag > 0) {\r\n            // the presence of a patchFlag means this element's render code was\r\n            // generated by the compiler and can take the fast path.\r\n            // in this path old node and new node are guaranteed to have the same shape\r\n            // (i.e. at the exact same position in the source template)\r\n            if (patchFlag & 16 /* FULL_PROPS */) {\r\n                // element props contain dynamic keys, full diff needed\r\n                patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n            }\r\n            else {\r\n                // class\r\n                // this flag is matched when the element has dynamic class bindings.\r\n                if (patchFlag & 2 /* CLASS */) {\r\n                    if (oldProps.class !== newProps.class) {\r\n                        hostPatchProp(el, 'class', null, newProps.class, isSVG);\r\n                    }\r\n                }\r\n                // style\r\n                // this flag is matched when the element has dynamic style bindings\r\n                if (patchFlag & 4 /* STYLE */) {\r\n                    hostPatchProp(el, 'style', oldProps.style, newProps.style, isSVG);\r\n                }\r\n                // props\r\n                // This flag is matched when the element has dynamic prop/attr bindings\r\n                // other than class and style. The keys of dynamic prop/attrs are saved for\r\n                // faster iteration.\r\n                // Note dynamic keys like :[foo]=\"bar\" will cause this optimization to\r\n                // bail out and go through a full diff because we need to unset the old key\r\n                if (patchFlag & 8 /* PROPS */) {\r\n                    // if the flag is present then dynamicProps must be non-null\r\n                    const propsToUpdate = n2.dynamicProps;\r\n                    for (let i = 0; i < propsToUpdate.length; i++) {\r\n                        const key = propsToUpdate[i];\r\n                        const prev = oldProps[key];\r\n                        const next = newProps[key];\r\n                        if (next !== prev ||\r\n                            (hostForcePatchProp && hostForcePatchProp(el, key))) {\r\n                            hostPatchProp(el, key, prev, next, isSVG, n1.children, parentComponent, parentSuspense, unmountChildren);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // text\r\n            // This flag is matched when the element has only dynamic text children.\r\n            if (patchFlag & 1 /* TEXT */) {\r\n                if (n1.children !== n2.children) {\r\n                    hostSetElementText(el, n2.children);\r\n                }\r\n            }\r\n        }\r\n        else if (!optimized && dynamicChildren == null) {\r\n            // unoptimized, full diff\r\n            patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n        }\r\n        const areChildrenSVG = isSVG && n2.type !== 'foreignObject';\r\n        if (dynamicChildren) {\r\n            patchBlockChildren(n1.dynamicChildren, dynamicChildren, el, parentComponent, parentSuspense, areChildrenSVG);\r\n            if ((process.env.NODE_ENV !== 'production') && parentComponent && parentComponent.type.__hmrId) {\r\n                traverseStaticChildren(n1, n2);\r\n            }\r\n        }\r\n        else if (!optimized) {\r\n            // full diff\r\n            patchChildren(n1, n2, el, null, parentComponent, parentSuspense, areChildrenSVG);\r\n        }\r\n        if ((vnodeHook = newProps.onVnodeUpdated) || dirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\r\n                dirs && invokeDirectiveHook(n2, n1, parentComponent, 'updated');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    // The fast path for blocks.\r\n    const patchBlockChildren = (oldChildren, newChildren, fallbackContainer, parentComponent, parentSuspense, isSVG) => {\r\n        for (let i = 0; i < newChildren.length; i++) {\r\n            const oldVNode = oldChildren[i];\r\n            const newVNode = newChildren[i];\r\n            // Determine the container (parent element) for the patch.\r\n            const container = \r\n            // - In the case of a Fragment, we need to provide the actual parent\r\n            // of the Fragment itself so it can move its children.\r\n            oldVNode.type === Fragment ||\r\n                // - In the case of different nodes, there is going to be a replacement\r\n                // which also requires the correct parent container\r\n                !isSameVNodeType(oldVNode, newVNode) ||\r\n                // - In the case of a component, it could contain anything.\r\n                oldVNode.shapeFlag & 6 /* COMPONENT */\r\n                ? hostParentNode(oldVNode.el)\r\n                : // In other cases, the parent container is not actually used so we\r\n                    // just pass the block element here to avoid a DOM parentNode call.\r\n                    fallbackContainer;\r\n            patch(oldVNode, newVNode, container, null, parentComponent, parentSuspense, isSVG, true);\r\n        }\r\n    };\r\n    const patchProps = (el, vnode, oldProps, newProps, parentComponent, parentSuspense, isSVG) => {\r\n        if (oldProps !== newProps) {\r\n            for (const key in newProps) {\r\n                if (isReservedProp(key))\r\n                    continue;\r\n                const next = newProps[key];\r\n                const prev = oldProps[key];\r\n                if (next !== prev ||\r\n                    (hostForcePatchProp && hostForcePatchProp(el, key))) {\r\n                    hostPatchProp(el, key, prev, next, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                }\r\n            }\r\n            if (oldProps !== EMPTY_OBJ) {\r\n                for (const key in oldProps) {\r\n                    if (!isReservedProp(key) && !(key in newProps)) {\r\n                        hostPatchProp(el, key, oldProps[key], null, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const processFragment = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const fragmentStartAnchor = (n2.el = n1 ? n1.el : hostCreateText(''));\r\n        const fragmentEndAnchor = (n2.anchor = n1 ? n1.anchor : hostCreateText(''));\r\n        let { patchFlag, dynamicChildren } = n2;\r\n        if (patchFlag > 0) {\r\n            optimized = true;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n            // HMR updated, force full diff\r\n            patchFlag = 0;\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        if (n1 == null) {\r\n            hostInsert(fragmentStartAnchor, container, anchor);\r\n            hostInsert(fragmentEndAnchor, container, anchor);\r\n            // a fragment can only have array children\r\n            // since they are either generated by the compiler, or implicitly created\r\n            // from arrays.\r\n            mountChildren(n2.children, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n        else {\r\n            if (patchFlag > 0 &&\r\n                patchFlag & 64 /* STABLE_FRAGMENT */ &&\r\n                dynamicChildren) {\r\n                // a stable fragment (template root or <template v-for>) doesn't need to\r\n                // patch children order, but it may contain dynamicChildren.\r\n                patchBlockChildren(n1.dynamicChildren, dynamicChildren, container, parentComponent, parentSuspense, isSVG);\r\n                if ((process.env.NODE_ENV !== 'production') && parentComponent && parentComponent.type.__hmrId) {\r\n                    traverseStaticChildren(n1, n2);\r\n                }\r\n            }\r\n            else {\r\n                // keyed / unkeyed, or manual fragments.\r\n                // for keyed & unkeyed, since they are compiler generated from v-for,\r\n                // each child is guaranteed to be a block so the fragment will never\r\n                // have dynamicChildren.\r\n                patchChildren(n1, n2, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n        }\r\n    };\r\n    const processComponent = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        if (n1 == null) {\r\n            if (n2.shapeFlag & 512 /* COMPONENT_KEPT_ALIVE */) {\r\n                parentComponent.ctx.activate(n2, container, anchor, isSVG, optimized);\r\n            }\r\n            else {\r\n                mountComponent(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n        }\r\n        else {\r\n            updateComponent(n1, n2, optimized);\r\n        }\r\n    };\r\n    const mountComponent = (initialVNode, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const instance = (initialVNode.component = createComponentInstance(initialVNode, parentComponent, parentSuspense));\r\n        if ((process.env.NODE_ENV !== 'production') && instance.type.__hmrId) {\r\n            registerHMR(instance);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            pushWarningContext(initialVNode);\r\n            startMeasure(instance, `mount`);\r\n        }\r\n        // inject renderer internals for keepAlive\r\n        if (isKeepAlive(initialVNode)) {\r\n            instance.ctx.renderer = internals;\r\n        }\r\n        // resolve props and slots for setup context\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            startMeasure(instance, `init`);\r\n        }\r\n        setupComponent(instance);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            endMeasure(instance, `init`);\r\n        }\r\n        // setup() is async. This component relies on async logic to be resolved\r\n        // before proceeding\r\n        if ( instance.asyncDep) {\r\n            if (!parentSuspense) {\r\n                if ((process.env.NODE_ENV !== 'production'))\r\n                    warn('async setup() is used without a suspense boundary!');\r\n                return;\r\n            }\r\n            parentSuspense.registerDep(instance, setupRenderEffect);\r\n            // Give it a placeholder if this is not hydration\r\n            if (!initialVNode.el) {\r\n                const placeholder = (instance.subTree = createVNode(Comment));\r\n                processCommentNode(null, placeholder, container, anchor);\r\n            }\r\n            return;\r\n        }\r\n        setupRenderEffect(instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            popWarningContext();\r\n            endMeasure(instance, `mount`);\r\n        }\r\n    };\r\n    const updateComponent = (n1, n2, optimized) => {\r\n        const instance = (n2.component = n1.component);\r\n        if (shouldUpdateComponent(n1, n2, optimized)) {\r\n            if (\r\n                instance.asyncDep &&\r\n                !instance.asyncResolved) {\r\n                // async & still pending - just update props and slots\r\n                // since the component's reactive effect for render isn't set-up yet\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(n2);\r\n                }\r\n                updateComponentPreRender(instance, n2, optimized);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n                return;\r\n            }\r\n            else {\r\n                // normal update\r\n                instance.next = n2;\r\n                // in case the child component is also queued, remove it to avoid\r\n                // double updating the same child component in the same flush.\r\n                invalidateJob(instance.update);\r\n                // instance.update is the reactive effect runner.\r\n                instance.update();\r\n            }\r\n        }\r\n        else {\r\n            // no update needed. just copy over properties\r\n            n2.component = n1.component;\r\n            n2.el = n1.el;\r\n            instance.vnode = n2;\r\n        }\r\n    };\r\n    const setupRenderEffect = (instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized) => {\r\n        // create reactive effect for rendering\r\n        instance.update = effect(function componentEffect() {\r\n            if (!instance.isMounted) {\r\n                let vnodeHook;\r\n                const { el, props } = initialVNode;\r\n                const { bm, m, a, parent } = instance;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `render`);\r\n                }\r\n                const subTree = (instance.subTree = renderComponentRoot(instance));\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `render`);\r\n                }\r\n                // beforeMount hook\r\n                if (bm) {\r\n                    invokeArrayFns(bm);\r\n                }\r\n                // onVnodeBeforeMount\r\n                if ((vnodeHook = props && props.onVnodeBeforeMount)) {\r\n                    invokeVNodeHook(vnodeHook, parent, initialVNode);\r\n                }\r\n                if (el && hydrateNode) {\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        startMeasure(instance, `hydrate`);\r\n                    }\r\n                    // vnode has adopted host node - perform hydration instead of mount.\r\n                    hydrateNode(initialVNode.el, subTree, instance, parentSuspense);\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        endMeasure(instance, `hydrate`);\r\n                    }\r\n                }\r\n                else {\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        startMeasure(instance, `patch`);\r\n                    }\r\n                    patch(null, subTree, container, anchor, instance, parentSuspense, isSVG);\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        endMeasure(instance, `patch`);\r\n                    }\r\n                    initialVNode.el = subTree.el;\r\n                }\r\n                // mounted hook\r\n                if (m) {\r\n                    queuePostRenderEffect(m, parentSuspense);\r\n                }\r\n                // onVnodeMounted\r\n                if ((vnodeHook = props && props.onVnodeMounted)) {\r\n                    queuePostRenderEffect(() => {\r\n                        invokeVNodeHook(vnodeHook, parent, initialVNode);\r\n                    }, parentSuspense);\r\n                }\r\n                // activated hook for keep-alive roots.\r\n                if (a &&\r\n                    initialVNode.shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n                    queuePostRenderEffect(a, parentSuspense);\r\n                }\r\n                instance.isMounted = true;\r\n            }\r\n            else {\r\n                // updateComponent\r\n                // This is triggered by mutation of component's own state (next: null)\r\n                // OR parent calling processComponent (next: VNode)\r\n                let { next, bu, u, parent, vnode } = instance;\r\n                let originNext = next;\r\n                let vnodeHook;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(next || instance.vnode);\r\n                }\r\n                if (next) {\r\n                    updateComponentPreRender(instance, next, optimized);\r\n                }\r\n                else {\r\n                    next = vnode;\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `render`);\r\n                }\r\n                const nextTree = renderComponentRoot(instance);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `render`);\r\n                }\r\n                const prevTree = instance.subTree;\r\n                instance.subTree = nextTree;\r\n                next.el = vnode.el;\r\n                // beforeUpdate hook\r\n                if (bu) {\r\n                    invokeArrayFns(bu);\r\n                }\r\n                // onVnodeBeforeUpdate\r\n                if ((vnodeHook = next.props && next.props.onVnodeBeforeUpdate)) {\r\n                    invokeVNodeHook(vnodeHook, parent, next, vnode);\r\n                }\r\n                // reset refs\r\n                // only needed if previous patch had refs\r\n                if (instance.refs !== EMPTY_OBJ) {\r\n                    instance.refs = {};\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `patch`);\r\n                }\r\n                patch(prevTree, nextTree, \r\n                // parent may have changed if it's in a teleport\r\n                hostParentNode(prevTree.el), \r\n                // anchor may have changed if it's in a fragment\r\n                getNextHostNode(prevTree), instance, parentSuspense, isSVG);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `patch`);\r\n                }\r\n                next.el = nextTree.el;\r\n                if (originNext === null) {\r\n                    // self-triggered update. In case of HOC, update parent component\r\n                    // vnode el. HOC is indicated by parent instance's subTree pointing\r\n                    // to child component's vnode\r\n                    updateHOCHostEl(instance, nextTree.el);\r\n                }\r\n                // updated hook\r\n                if (u) {\r\n                    queuePostRenderEffect(u, parentSuspense);\r\n                }\r\n                // onVnodeUpdated\r\n                if ((vnodeHook = next.props && next.props.onVnodeUpdated)) {\r\n                    queuePostRenderEffect(() => {\r\n                        invokeVNodeHook(vnodeHook, parent, next, vnode);\r\n                    }, parentSuspense);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                    componentUpdated(instance);\r\n                }\r\n            }\r\n        }, (process.env.NODE_ENV !== 'production') ? createDevEffectOptions(instance) : prodEffectOptions);\r\n    };\r\n    const updateComponentPreRender = (instance, nextVNode, optimized) => {\r\n        if ((process.env.NODE_ENV !== 'production') && instance.type.__hmrId) {\r\n            optimized = false;\r\n        }\r\n        nextVNode.component = instance;\r\n        const prevProps = instance.vnode.props;\r\n        instance.vnode = nextVNode;\r\n        instance.next = null;\r\n        updateProps(instance, nextVNode.props, prevProps, optimized);\r\n        updateSlots(instance, nextVNode.children);\r\n    };\r\n    const patchChildren = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized = false) => {\r\n        const c1 = n1 && n1.children;\r\n        const prevShapeFlag = n1 ? n1.shapeFlag : 0;\r\n        const c2 = n2.children;\r\n        const { patchFlag, shapeFlag } = n2;\r\n        // fast path\r\n        if (patchFlag > 0) {\r\n            if (patchFlag & 128 /* KEYED_FRAGMENT */) {\r\n                // this could be either fully-keyed or mixed (some keyed some not)\r\n                // presence of patchFlag means children are guaranteed to be arrays\r\n                patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                return;\r\n            }\r\n            else if (patchFlag & 256 /* UNKEYED_FRAGMENT */) {\r\n                // unkeyed\r\n                patchUnkeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                return;\r\n            }\r\n        }\r\n        // children has 3 possibilities: text, array or no children.\r\n        if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n            // text children fast path\r\n            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                unmountChildren(c1, parentComponent, parentSuspense);\r\n            }\r\n            if (c2 !== c1) {\r\n                hostSetElementText(container, c2);\r\n            }\r\n        }\r\n        else {\r\n            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                // prev children was array\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    // two arrays, cannot assume anything, do full diff\r\n                    patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n                else {\r\n                    // no new children, just unmount old\r\n                    unmountChildren(c1, parentComponent, parentSuspense, true);\r\n                }\r\n            }\r\n            else {\r\n                // prev children was text OR null\r\n                // new children is array OR null\r\n                if (prevShapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                    hostSetElementText(container, '');\r\n                }\r\n                // mount new if array\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const patchUnkeyedChildren = (c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        c1 = c1 || EMPTY_ARR;\r\n        c2 = c2 || EMPTY_ARR;\r\n        const oldLength = c1.length;\r\n        const newLength = c2.length;\r\n        const commonLength = Math.min(oldLength, newLength);\r\n        let i;\r\n        for (i = 0; i < commonLength; i++) {\r\n            const nextChild = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            patch(c1[i], nextChild, container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n        if (oldLength > newLength) {\r\n            // remove old\r\n            unmountChildren(c1, parentComponent, parentSuspense, true, commonLength);\r\n        }\r\n        else {\r\n            // mount new\r\n            mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, commonLength);\r\n        }\r\n    };\r\n    // can be all-keyed or mixed\r\n    const patchKeyedChildren = (c1, c2, container, parentAnchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        let i = 0;\r\n        const l2 = c2.length;\r\n        let e1 = c1.length - 1; // prev ending index\r\n        let e2 = l2 - 1; // next ending index\r\n        // 1. sync from start\r\n        // (a b) c\r\n        // (a b) d e\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[i];\r\n            const n2 = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            i++;\r\n        }\r\n        // 2. sync from end\r\n        // a (b c)\r\n        // d e (b c)\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[e1];\r\n            const n2 = (c2[e2] = optimized\r\n                ? cloneIfMounted(c2[e2])\r\n                : normalizeVNode(c2[e2]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            e1--;\r\n            e2--;\r\n        }\r\n        // 3. common sequence + mount\r\n        // (a b)\r\n        // (a b) c\r\n        // i = 2, e1 = 1, e2 = 2\r\n        // (a b)\r\n        // c (a b)\r\n        // i = 0, e1 = -1, e2 = 0\r\n        if (i > e1) {\r\n            if (i <= e2) {\r\n                const nextPos = e2 + 1;\r\n                const anchor = nextPos < l2 ? c2[nextPos].el : parentAnchor;\r\n                while (i <= e2) {\r\n                    patch(null, (c2[i] = optimized\r\n                        ? cloneIfMounted(c2[i])\r\n                        : normalizeVNode(c2[i])), container, anchor, parentComponent, parentSuspense, isSVG);\r\n                    i++;\r\n                }\r\n            }\r\n        }\r\n        // 4. common sequence + unmount\r\n        // (a b) c\r\n        // (a b)\r\n        // i = 2, e1 = 2, e2 = 1\r\n        // a (b c)\r\n        // (b c)\r\n        // i = 0, e1 = 0, e2 = -1\r\n        else if (i > e2) {\r\n            while (i <= e1) {\r\n                unmount(c1[i], parentComponent, parentSuspense, true);\r\n                i++;\r\n            }\r\n        }\r\n        // 5. unknown sequence\r\n        // [i ... e1 + 1]: a b [c d e] f g\r\n        // [i ... e2 + 1]: a b [e d c h] f g\r\n        // i = 2, e1 = 4, e2 = 5\r\n        else {\r\n            const s1 = i; // prev starting index\r\n            const s2 = i; // next starting index\r\n            // 5.1 build key:index map for newChildren\r\n            const keyToNewIndexMap = new Map();\r\n            for (i = s2; i <= e2; i++) {\r\n                const nextChild = (c2[i] = optimized\r\n                    ? cloneIfMounted(c2[i])\r\n                    : normalizeVNode(c2[i]));\r\n                if (nextChild.key != null) {\r\n                    if ((process.env.NODE_ENV !== 'production') && keyToNewIndexMap.has(nextChild.key)) {\r\n                        warn(`Duplicate keys found during update:`, JSON.stringify(nextChild.key), `Make sure keys are unique.`);\r\n                    }\r\n                    keyToNewIndexMap.set(nextChild.key, i);\r\n                }\r\n            }\r\n            // 5.2 loop through old children left to be patched and try to patch\r\n            // matching nodes & remove nodes that are no longer present\r\n            let j;\r\n            let patched = 0;\r\n            const toBePatched = e2 - s2 + 1;\r\n            let moved = false;\r\n            // used to track whether any node has moved\r\n            let maxNewIndexSoFar = 0;\r\n            // works as Map<newIndex, oldIndex>\r\n            // Note that oldIndex is offset by +1\r\n            // and oldIndex = 0 is a special value indicating the new node has\r\n            // no corresponding old node.\r\n            // used for determining longest stable subsequence\r\n            const newIndexToOldIndexMap = new Array(toBePatched);\r\n            for (i = 0; i < toBePatched; i++)\r\n                newIndexToOldIndexMap[i] = 0;\r\n            for (i = s1; i <= e1; i++) {\r\n                const prevChild = c1[i];\r\n                if (patched >= toBePatched) {\r\n                    // all new children have been patched so this can only be a removal\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                    continue;\r\n                }\r\n                let newIndex;\r\n                if (prevChild.key != null) {\r\n                    newIndex = keyToNewIndexMap.get(prevChild.key);\r\n                }\r\n                else {\r\n                    // key-less node, try to locate a key-less node of the same type\r\n                    for (j = s2; j <= e2; j++) {\r\n                        if (newIndexToOldIndexMap[j - s2] === 0 &&\r\n                            isSameVNodeType(prevChild, c2[j])) {\r\n                            newIndex = j;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (newIndex === undefined) {\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                }\r\n                else {\r\n                    newIndexToOldIndexMap[newIndex - s2] = i + 1;\r\n                    if (newIndex >= maxNewIndexSoFar) {\r\n                        maxNewIndexSoFar = newIndex;\r\n                    }\r\n                    else {\r\n                        moved = true;\r\n                    }\r\n                    patch(prevChild, c2[newIndex], container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n                    patched++;\r\n                }\r\n            }\r\n            // 5.3 move and mount\r\n            // generate longest stable subsequence only when nodes have moved\r\n            const increasingNewIndexSequence = moved\r\n                ? getSequence(newIndexToOldIndexMap)\r\n                : EMPTY_ARR;\r\n            j = increasingNewIndexSequence.length - 1;\r\n            // looping backwards so that we can use last patched node as anchor\r\n            for (i = toBePatched - 1; i >= 0; i--) {\r\n                const nextIndex = s2 + i;\r\n                const nextChild = c2[nextIndex];\r\n                const anchor = nextIndex + 1 < l2 ? c2[nextIndex + 1].el : parentAnchor;\r\n                if (newIndexToOldIndexMap[i] === 0) {\r\n                    // mount new\r\n                    patch(null, nextChild, container, anchor, parentComponent, parentSuspense, isSVG);\r\n                }\r\n                else if (moved) {\r\n                    // move if:\r\n                    // There is no stable subsequence (e.g. a reverse)\r\n                    // OR current node is not among the stable sequence\r\n                    if (j < 0 || i !== increasingNewIndexSequence[j]) {\r\n                        move(nextChild, container, anchor, 2 /* REORDER */);\r\n                    }\r\n                    else {\r\n                        j--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const move = (vnode, container, anchor, moveType, parentSuspense = null) => {\r\n        const { el, type, transition, children, shapeFlag } = vnode;\r\n        if (shapeFlag & 6 /* COMPONENT */) {\r\n            move(vnode.component.subTree, container, anchor, moveType);\r\n            return;\r\n        }\r\n        if ( shapeFlag & 128 /* SUSPENSE */) {\r\n            vnode.suspense.move(container, anchor, moveType);\r\n            return;\r\n        }\r\n        if (shapeFlag & 64 /* TELEPORT */) {\r\n            type.move(vnode, container, anchor, internals);\r\n            return;\r\n        }\r\n        if (type === Fragment) {\r\n            hostInsert(el, container, anchor);\r\n            for (let i = 0; i < children.length; i++) {\r\n                move(children[i], container, anchor, moveType);\r\n            }\r\n            hostInsert(vnode.anchor, container, anchor);\r\n            return;\r\n        }\r\n        // static node move can only happen when force updating HMR\r\n        if ((process.env.NODE_ENV !== 'production') && type === Static) {\r\n            moveStaticNode(vnode, container, anchor);\r\n            return;\r\n        }\r\n        // single nodes\r\n        const needTransition = moveType !== 2 /* REORDER */ &&\r\n            shapeFlag & 1 /* ELEMENT */ &&\r\n            transition;\r\n        if (needTransition) {\r\n            if (moveType === 0 /* ENTER */) {\r\n                transition.beforeEnter(el);\r\n                hostInsert(el, container, anchor);\r\n                queuePostRenderEffect(() => transition.enter(el), parentSuspense);\r\n            }\r\n            else {\r\n                const { leave, delayLeave, afterLeave } = transition;\r\n                const remove = () => hostInsert(el, container, anchor);\r\n                const performLeave = () => {\r\n                    leave(el, () => {\r\n                        remove();\r\n                        afterLeave && afterLeave();\r\n                    });\r\n                };\r\n                if (delayLeave) {\r\n                    delayLeave(el, remove, performLeave);\r\n                }\r\n                else {\r\n                    performLeave();\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            hostInsert(el, container, anchor);\r\n        }\r\n    };\r\n    const unmount = (vnode, parentComponent, parentSuspense, doRemove = false) => {\r\n        const { type, props, ref, children, dynamicChildren, shapeFlag, patchFlag, dirs } = vnode;\r\n        // unset ref\r\n        if (ref != null && parentComponent) {\r\n            setRef(ref, null, parentComponent, parentSuspense, null);\r\n        }\r\n        if (shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n            parentComponent.ctx.deactivate(vnode);\r\n            return;\r\n        }\r\n        const shouldInvokeDirs = shapeFlag & 1 /* ELEMENT */ && dirs;\r\n        let vnodeHook;\r\n        if ((vnodeHook = props && props.onVnodeBeforeUnmount)) {\r\n            invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n        }\r\n        if (shapeFlag & 6 /* COMPONENT */) {\r\n            unmountComponent(vnode.component, parentSuspense, doRemove);\r\n        }\r\n        else {\r\n            if ( shapeFlag & 128 /* SUSPENSE */) {\r\n                vnode.suspense.unmount(parentSuspense, doRemove);\r\n                return;\r\n            }\r\n            if (shouldInvokeDirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeUnmount');\r\n            }\r\n            if (dynamicChildren &&\r\n                // #1153: fast path should not be taken for non-stable (v-for) fragments\r\n                (type !== Fragment ||\r\n                    (patchFlag > 0 && patchFlag & 64 /* STABLE_FRAGMENT */))) {\r\n                // fast path for block nodes: only need to unmount dynamic children.\r\n                unmountChildren(dynamicChildren, parentComponent, parentSuspense);\r\n            }\r\n            else if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                unmountChildren(children, parentComponent, parentSuspense);\r\n            }\r\n            // an unmounted teleport should always remove its children\r\n            if (shapeFlag & 64 /* TELEPORT */) {\r\n                vnode.type.remove(vnode, internals);\r\n            }\r\n            if (doRemove) {\r\n                remove(vnode);\r\n            }\r\n        }\r\n        if ((vnodeHook = props && props.onVnodeUnmounted) || shouldInvokeDirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                shouldInvokeDirs &&\r\n                    invokeDirectiveHook(vnode, null, parentComponent, 'unmounted');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const remove = vnode => {\r\n        const { type, el, anchor, transition } = vnode;\r\n        if (type === Fragment) {\r\n            removeFragment(el, anchor);\r\n            return;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && type === Static) {\r\n            removeStaticNode(vnode);\r\n            return;\r\n        }\r\n        const performRemove = () => {\r\n            hostRemove(el);\r\n            if (transition && !transition.persisted && transition.afterLeave) {\r\n                transition.afterLeave();\r\n            }\r\n        };\r\n        if (vnode.shapeFlag & 1 /* ELEMENT */ &&\r\n            transition &&\r\n            !transition.persisted) {\r\n            const { leave, delayLeave } = transition;\r\n            const performLeave = () => leave(el, performRemove);\r\n            if (delayLeave) {\r\n                delayLeave(vnode.el, performRemove, performLeave);\r\n            }\r\n            else {\r\n                performLeave();\r\n            }\r\n        }\r\n        else {\r\n            performRemove();\r\n        }\r\n    };\r\n    const removeFragment = (cur, end) => {\r\n        // For fragments, directly remove all contained DOM nodes.\r\n        // (fragment child nodes cannot have transition)\r\n        let next;\r\n        while (cur !== end) {\r\n            next = hostNextSibling(cur);\r\n            hostRemove(cur);\r\n            cur = next;\r\n        }\r\n        hostRemove(end);\r\n    };\r\n    const unmountComponent = (instance, parentSuspense, doRemove) => {\r\n        if ((process.env.NODE_ENV !== 'production') && instance.type.__hmrId) {\r\n            unregisterHMR(instance);\r\n        }\r\n        const { bum, effects, update, subTree, um, da, isDeactivated } = instance;\r\n        // beforeUnmount hook\r\n        if (bum) {\r\n            invokeArrayFns(bum);\r\n        }\r\n        if (effects) {\r\n            for (let i = 0; i < effects.length; i++) {\r\n                stop(effects[i]);\r\n            }\r\n        }\r\n        // update may be null if a component is unmounted before its async\r\n        // setup has resolved.\r\n        if (update) {\r\n            stop(update);\r\n            unmount(subTree, instance, parentSuspense, doRemove);\r\n        }\r\n        // unmounted hook\r\n        if (um) {\r\n            queuePostRenderEffect(um, parentSuspense);\r\n        }\r\n        // deactivated hook\r\n        if (da &&\r\n            !isDeactivated &&\r\n            instance.vnode.shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n            queuePostRenderEffect(da, parentSuspense);\r\n        }\r\n        queuePostRenderEffect(() => {\r\n            instance.isUnmounted = true;\r\n        }, parentSuspense);\r\n        // A component with async dep inside a pending suspense is unmounted before\r\n        // its async dep resolves. This should remove the dep from the suspense, and\r\n        // cause the suspense to resolve immediately if that was the last dep.\r\n        if (\r\n            parentSuspense &&\r\n            !parentSuspense.isResolved &&\r\n            !parentSuspense.isUnmounted &&\r\n            instance.asyncDep &&\r\n            !instance.asyncResolved) {\r\n            parentSuspense.deps--;\r\n            if (parentSuspense.deps === 0) {\r\n                parentSuspense.resolve();\r\n            }\r\n        }\r\n        (process.env.NODE_ENV !== 'production') && componentRemoved(instance);\r\n    };\r\n    const unmountChildren = (children, parentComponent, parentSuspense, doRemove = false, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            unmount(children[i], parentComponent, parentSuspense, doRemove);\r\n        }\r\n    };\r\n    const getNextHostNode = vnode => {\r\n        if (vnode.shapeFlag & 6 /* COMPONENT */) {\r\n            return getNextHostNode(vnode.component.subTree);\r\n        }\r\n        if ( vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n            return vnode.suspense.next();\r\n        }\r\n        return hostNextSibling((vnode.anchor || vnode.el));\r\n    };\r\n    /**\r\n     * #1156\r\n     * When a component is HMR-enabled, we need to make sure that all static nodes\r\n     * inside a block also inherit the DOM element from the previous tree so that\r\n     * HMR updates (which are full updates) can retrieve the element for patching.\r\n     *\r\n     * Dev only.\r\n     */\r\n    const traverseStaticChildren = (n1, n2) => {\r\n        const ch1 = n1.children;\r\n        const ch2 = n2.children;\r\n        if (isArray(ch1) && isArray(ch2)) {\r\n            for (let i = 0; i < ch1.length; i++) {\r\n                // this is only called in the optimized path so array children are\r\n                // guaranteed to be vnodes\r\n                const c1 = ch1[i];\r\n                const c2 = (ch2[i] = cloneIfMounted(ch2[i]));\r\n                if (c2.shapeFlag & 1 /* ELEMENT */ && !c2.dynamicChildren) {\r\n                    if (c2.patchFlag <= 0) {\r\n                        c2.el = c1.el;\r\n                    }\r\n                    traverseStaticChildren(c1, c2);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const render = (vnode, container) => {\r\n        if (vnode == null) {\r\n            if (container._vnode) {\r\n                unmount(container._vnode, null, null, true);\r\n            }\r\n        }\r\n        else {\r\n            patch(container._vnode || null, vnode, container);\r\n        }\r\n        flushPostFlushCbs();\r\n        container._vnode = vnode;\r\n    };\r\n    const internals = {\r\n        p: patch,\r\n        um: unmount,\r\n        m: move,\r\n        r: remove,\r\n        mt: mountComponent,\r\n        mc: mountChildren,\r\n        pc: patchChildren,\r\n        pbc: patchBlockChildren,\r\n        n: getNextHostNode,\r\n        o: options\r\n    };\r\n    let hydrate;\r\n    let hydrateNode;\r\n    if (createHydrationFns) {\r\n        [hydrate, hydrateNode] = createHydrationFns(internals);\r\n    }\r\n    return {\r\n        render,\r\n        hydrate,\r\n        createApp: createAppAPI(render, hydrate)\r\n    };\r\n}\r\nfunction invokeVNodeHook(hook, instance, vnode, prevVNode = null) {\r\n    callWithAsyncErrorHandling(hook, instance, 7 /* VNODE_HOOK */, [\r\n        vnode,\r\n        prevVNode\r\n    ]);\r\n}\r\n// https://en.wikipedia.org/wiki/Longest_increasing_subsequence\r\nfunction getSequence(arr) {\r\n    const p = arr.slice();\r\n    const result = [0];\r\n    let i, j, u, v, c;\r\n    const len = arr.length;\r\n    for (i = 0; i < len; i++) {\r\n        const arrI = arr[i];\r\n        if (arrI !== 0) {\r\n            j = result[result.length - 1];\r\n            if (arr[j] < arrI) {\r\n                p[i] = j;\r\n                result.push(i);\r\n                continue;\r\n            }\r\n            u = 0;\r\n            v = result.length - 1;\r\n            while (u < v) {\r\n                c = ((u + v) / 2) | 0;\r\n                if (arr[result[c]] < arrI) {\r\n                    u = c + 1;\r\n                }\r\n                else {\r\n                    v = c;\r\n                }\r\n            }\r\n            if (arrI < arr[result[u]]) {\r\n                if (u > 0) {\r\n                    p[i] = result[u - 1];\r\n                }\r\n                result[u] = i;\r\n            }\r\n        }\r\n    }\r\n    u = result.length;\r\n    v = result[u - 1];\r\n    while (u-- > 0) {\r\n        result[u] = v;\r\n        v = p[v];\r\n    }\r\n    return result;\r\n}\n\n// Simple effect.\r\nfunction watchEffect(effect, options) {\r\n    return doWatch(effect, null, options);\r\n}\r\n// initial value for watchers to trigger on undefined initial values\r\nconst INITIAL_WATCHER_VALUE = {};\r\n// implementation\r\nfunction watch(source, cb, options) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isFunction(cb)) {\r\n        warn(`\\`watch(fn, options?)\\` signature has been moved to a separate API. ` +\r\n            `Use \\`watchEffect(fn, options?)\\` instead. \\`watch\\` now only ` +\r\n            `supports \\`watch(source, cb, options?) signature.`);\r\n    }\r\n    return doWatch(source, cb, options);\r\n}\r\nfunction doWatch(source, cb, { immediate, deep, flush, onTrack, onTrigger } = EMPTY_OBJ, instance = currentInstance) {\r\n    if ((process.env.NODE_ENV !== 'production') && !cb) {\r\n        if (immediate !== undefined) {\r\n            warn(`watch() \"immediate\" option is only respected when using the ` +\r\n                `watch(source, callback, options?) signature.`);\r\n        }\r\n        if (deep !== undefined) {\r\n            warn(`watch() \"deep\" option is only respected when using the ` +\r\n                `watch(source, callback, options?) signature.`);\r\n        }\r\n    }\r\n    const warnInvalidSource = (s) => {\r\n        warn(`Invalid watch source: `, s, `A watch source can only be a getter/effect function, a ref, ` +\r\n            `a reactive object, or an array of these types.`);\r\n    };\r\n    let getter;\r\n    if (isArray(source)) {\r\n        getter = () => source.map(s => {\r\n            if (isRef(s)) {\r\n                return s.value;\r\n            }\r\n            else if (isReactive(s)) {\r\n                return traverse(s);\r\n            }\r\n            else if (isFunction(s)) {\r\n                return callWithErrorHandling(s, instance, 2 /* WATCH_GETTER */);\r\n            }\r\n            else {\r\n                (process.env.NODE_ENV !== 'production') && warnInvalidSource(s);\r\n            }\r\n        });\r\n    }\r\n    else if (isRef(source)) {\r\n        getter = () => source.value;\r\n    }\r\n    else if (isReactive(source)) {\r\n        getter = () => source;\r\n        deep = true;\r\n    }\r\n    else if (isFunction(source)) {\r\n        if (cb) {\r\n            // getter with cb\r\n            getter = () => callWithErrorHandling(source, instance, 2 /* WATCH_GETTER */);\r\n        }\r\n        else {\r\n            // no cb -> simple effect\r\n            getter = () => {\r\n                if (instance && instance.isUnmounted) {\r\n                    return;\r\n                }\r\n                if (cleanup) {\r\n                    cleanup();\r\n                }\r\n                return callWithErrorHandling(source, instance, 3 /* WATCH_CALLBACK */, [onInvalidate]);\r\n            };\r\n        }\r\n    }\r\n    else {\r\n        getter = NOOP;\r\n        (process.env.NODE_ENV !== 'production') && warnInvalidSource(source);\r\n    }\r\n    if (cb && deep) {\r\n        const baseGetter = getter;\r\n        getter = () => traverse(baseGetter());\r\n    }\r\n    let cleanup;\r\n    const onInvalidate = (fn) => {\r\n        cleanup = runner.options.onStop = () => {\r\n            callWithErrorHandling(fn, instance, 4 /* WATCH_CLEANUP */);\r\n        };\r\n    };\r\n    let oldValue = isArray(source) ? [] : INITIAL_WATCHER_VALUE;\r\n    const job = () => {\r\n        if (!runner.active) {\r\n            return;\r\n        }\r\n        if (cb) {\r\n            // watch(source, cb)\r\n            const newValue = runner();\r\n            if (deep || hasChanged(newValue, oldValue)) {\r\n                // cleanup before running cb again\r\n                if (cleanup) {\r\n                    cleanup();\r\n                }\r\n                callWithAsyncErrorHandling(cb, instance, 3 /* WATCH_CALLBACK */, [\r\n                    newValue,\r\n                    // pass undefined as the old value when it's changed for the first time\r\n                    oldValue === INITIAL_WATCHER_VALUE ? undefined : oldValue,\r\n                    onInvalidate\r\n                ]);\r\n                oldValue = newValue;\r\n            }\r\n        }\r\n        else {\r\n            // watchEffect\r\n            runner();\r\n        }\r\n    };\r\n    let scheduler;\r\n    if (flush === 'sync') {\r\n        scheduler = job;\r\n    }\r\n    else if (flush === 'pre') {\r\n        // ensure it's queued before component updates (which have positive ids)\r\n        job.id = -1;\r\n        scheduler = () => {\r\n            if (!instance || instance.isMounted) {\r\n                queueJob(job);\r\n            }\r\n            else {\r\n                // with 'pre' option, the first call must happen before\r\n                // the component is mounted so it is called synchronously.\r\n                job();\r\n            }\r\n        };\r\n    }\r\n    else {\r\n        scheduler = () => queuePostRenderEffect(job, instance && instance.suspense);\r\n    }\r\n    const runner = effect(getter, {\r\n        lazy: true,\r\n        onTrack,\r\n        onTrigger,\r\n        scheduler\r\n    });\r\n    recordInstanceBoundEffect(runner);\r\n    // initial run\r\n    if (cb) {\r\n        if (immediate) {\r\n            job();\r\n        }\r\n        else {\r\n            oldValue = runner();\r\n        }\r\n    }\r\n    else {\r\n        runner();\r\n    }\r\n    return () => {\r\n        stop(runner);\r\n        if (instance) {\r\n            remove(instance.effects, runner);\r\n        }\r\n    };\r\n}\r\n// this.$watch\r\nfunction instanceWatch(source, cb, options) {\r\n    const publicThis = this.proxy;\r\n    const getter = isString(source)\r\n        ? () => publicThis[source]\r\n        : source.bind(publicThis);\r\n    return doWatch(getter, cb.bind(publicThis), options, this);\r\n}\r\nfunction traverse(value, seen = new Set()) {\r\n    if (!isObject(value) || seen.has(value)) {\r\n        return value;\r\n    }\r\n    seen.add(value);\r\n    if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            traverse(value[i], seen);\r\n        }\r\n    }\r\n    else if (value instanceof Map) {\r\n        value.forEach((v, key) => {\r\n            // to register mutation dep for existing keys\r\n            traverse(value.get(key), seen);\r\n        });\r\n    }\r\n    else if (value instanceof Set) {\r\n        value.forEach(v => {\r\n            traverse(v, seen);\r\n        });\r\n    }\r\n    else {\r\n        for (const key in value) {\r\n            traverse(value[key], seen);\r\n        }\r\n    }\r\n    return value;\r\n}\n\nfunction provide(key, value) {\r\n    if (!currentInstance) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`provide() can only be used inside setup().`);\r\n        }\r\n    }\r\n    else {\r\n        let provides = currentInstance.provides;\r\n        // by default an instance inherits its parent's provides object\r\n        // but when it needs to provide values of its own, it creates its\r\n        // own provides object using parent provides object as prototype.\r\n        // this way in `inject` we can simply look up injections from direct\r\n        // parent and let the prototype chain do the work.\r\n        const parentProvides = currentInstance.parent && currentInstance.parent.provides;\r\n        if (parentProvides === provides) {\r\n            provides = currentInstance.provides = Object.create(parentProvides);\r\n        }\r\n        // TS doesn't allow symbol as index type\r\n        provides[key] = value;\r\n    }\r\n}\r\nfunction inject(key, defaultValue) {\r\n    // fallback to `currentRenderingInstance` so that this can be called in\r\n    // a functional component\r\n    const instance = currentInstance || currentRenderingInstance;\r\n    if (instance) {\r\n        const provides = instance.provides;\r\n        if (key in provides) {\r\n            // TS doesn't allow symbol as index type\r\n            return provides[key];\r\n        }\r\n        else if (arguments.length > 1) {\r\n            return defaultValue;\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`injection \"${String(key)}\" not found.`);\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`inject() can only be used inside setup() or functional components.`);\r\n    }\r\n}\n\nfunction createDuplicateChecker() {\r\n    const cache = Object.create(null);\r\n    return (type, key) => {\r\n        if (cache[key]) {\r\n            warn(`${type} property \"${key}\" is already defined in ${cache[key]}.`);\r\n        }\r\n        else {\r\n            cache[key] = type;\r\n        }\r\n    };\r\n}\r\nfunction applyOptions(instance, options, deferredData = [], deferredWatch = [], asMixin = false) {\r\n    const { \r\n    // composition\r\n    mixins, extends: extendsOptions, \r\n    // state\r\n    data: dataOptions, computed: computedOptions, methods, watch: watchOptions, provide: provideOptions, inject: injectOptions, \r\n    // assets\r\n    components, directives, \r\n    // lifecycle\r\n    beforeMount, mounted, beforeUpdate, updated, activated, deactivated, beforeUnmount, unmounted, renderTracked, renderTriggered, errorCaptured } = options;\r\n    const publicThis = instance.proxy;\r\n    const ctx = instance.ctx;\r\n    const globalMixins = instance.appContext.mixins;\r\n    // call it only during dev\r\n    // applyOptions is called non-as-mixin once per instance\r\n    if (!asMixin) {\r\n        callSyncHook('beforeCreate', options, publicThis, globalMixins);\r\n        // global mixins are applied first\r\n        applyMixins(instance, globalMixins, deferredData, deferredWatch);\r\n    }\r\n    // extending a base component...\r\n    if (extendsOptions) {\r\n        applyOptions(instance, extendsOptions, deferredData, deferredWatch, true);\r\n    }\r\n    // local mixins\r\n    if (mixins) {\r\n        applyMixins(instance, mixins, deferredData, deferredWatch);\r\n    }\r\n    const checkDuplicateProperties = (process.env.NODE_ENV !== 'production') ? createDuplicateChecker() : null;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const propsOptions = normalizePropsOptions(options)[0];\r\n        if (propsOptions) {\r\n            for (const key in propsOptions) {\r\n                checkDuplicateProperties(\"Props\" /* PROPS */, key);\r\n            }\r\n        }\r\n    }\r\n    // options initialization order (to be consistent with Vue 2):\r\n    // - props (already done outside of this function)\r\n    // - inject\r\n    // - methods\r\n    // - data (deferred since it relies on `this` access)\r\n    // - computed\r\n    // - watch (deferred since it relies on `this` access)\r\n    if (injectOptions) {\r\n        if (isArray(injectOptions)) {\r\n            for (let i = 0; i < injectOptions.length; i++) {\r\n                const key = injectOptions[i];\r\n                ctx[key] = inject(key);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Inject\" /* INJECT */, key);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (const key in injectOptions) {\r\n                const opt = injectOptions[key];\r\n                if (isObject(opt)) {\r\n                    ctx[key] = inject(opt.from, opt.default);\r\n                }\r\n                else {\r\n                    ctx[key] = inject(opt);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Inject\" /* INJECT */, key);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (methods) {\r\n        for (const key in methods) {\r\n            const methodHandler = methods[key];\r\n            if (isFunction(methodHandler)) {\r\n                ctx[key] = methodHandler.bind(publicThis);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Methods\" /* METHODS */, key);\r\n                }\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Method \"${key}\" has type \"${typeof methodHandler}\" in the component definition. ` +\r\n                    `Did you reference the function correctly?`);\r\n            }\r\n        }\r\n    }\r\n    if (dataOptions) {\r\n        if ((process.env.NODE_ENV !== 'production') && !isFunction(dataOptions)) {\r\n            warn(`The data option must be a function. ` +\r\n                `Plain object usage is no longer supported.`);\r\n        }\r\n        if (asMixin) {\r\n            deferredData.push(dataOptions);\r\n        }\r\n        else {\r\n            resolveData(instance, dataOptions, publicThis);\r\n        }\r\n    }\r\n    if (!asMixin) {\r\n        if (deferredData.length) {\r\n            deferredData.forEach(dataFn => resolveData(instance, dataFn, publicThis));\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            const rawData = toRaw(instance.data);\r\n            for (const key in rawData) {\r\n                checkDuplicateProperties(\"Data\" /* DATA */, key);\r\n                // expose data on ctx during dev\r\n                if (key[0] !== '$' && key[0] !== '_') {\r\n                    Object.defineProperty(ctx, key, {\r\n                        configurable: true,\r\n                        enumerable: true,\r\n                        get: () => rawData[key],\r\n                        set: NOOP\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (computedOptions) {\r\n        for (const key in computedOptions) {\r\n            const opt = computedOptions[key];\r\n            const get = isFunction(opt)\r\n                ? opt.bind(publicThis, publicThis)\r\n                : isFunction(opt.get)\r\n                    ? opt.get.bind(publicThis, publicThis)\r\n                    : NOOP;\r\n            if ((process.env.NODE_ENV !== 'production') && get === NOOP) {\r\n                warn(`Computed property \"${key}\" has no getter.`);\r\n            }\r\n            const set = !isFunction(opt) && isFunction(opt.set)\r\n                ? opt.set.bind(publicThis)\r\n                : (process.env.NODE_ENV !== 'production')\r\n                    ? () => {\r\n                        warn(`Write operation failed: computed property \"${key}\" is readonly.`);\r\n                    }\r\n                    : NOOP;\r\n            const c = computed({\r\n                get,\r\n                set\r\n            });\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => c.value,\r\n                set: v => (c.value = v)\r\n            });\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkDuplicateProperties(\"Computed\" /* COMPUTED */, key);\r\n            }\r\n        }\r\n    }\r\n    if (watchOptions) {\r\n        deferredWatch.push(watchOptions);\r\n    }\r\n    if (!asMixin && deferredWatch.length) {\r\n        deferredWatch.forEach(watchOptions => {\r\n            for (const key in watchOptions) {\r\n                createWatcher(watchOptions[key], ctx, publicThis, key);\r\n            }\r\n        });\r\n    }\r\n    if (provideOptions) {\r\n        const provides = isFunction(provideOptions)\r\n            ? provideOptions.call(publicThis)\r\n            : provideOptions;\r\n        for (const key in provides) {\r\n            provide(key, provides[key]);\r\n        }\r\n    }\r\n    // asset options\r\n    if (components) {\r\n        extend(instance.components, components);\r\n    }\r\n    if (directives) {\r\n        extend(instance.directives, directives);\r\n    }\r\n    // lifecycle options\r\n    if (!asMixin) {\r\n        callSyncHook('created', options, publicThis, globalMixins);\r\n    }\r\n    if (beforeMount) {\r\n        onBeforeMount(beforeMount.bind(publicThis));\r\n    }\r\n    if (mounted) {\r\n        onMounted(mounted.bind(publicThis));\r\n    }\r\n    if (beforeUpdate) {\r\n        onBeforeUpdate(beforeUpdate.bind(publicThis));\r\n    }\r\n    if (updated) {\r\n        onUpdated(updated.bind(publicThis));\r\n    }\r\n    if (activated) {\r\n        onActivated(activated.bind(publicThis));\r\n    }\r\n    if (deactivated) {\r\n        onDeactivated(deactivated.bind(publicThis));\r\n    }\r\n    if (errorCaptured) {\r\n        onErrorCaptured(errorCaptured.bind(publicThis));\r\n    }\r\n    if (renderTracked) {\r\n        onRenderTracked(renderTracked.bind(publicThis));\r\n    }\r\n    if (renderTriggered) {\r\n        onRenderTriggered(renderTriggered.bind(publicThis));\r\n    }\r\n    if (beforeUnmount) {\r\n        onBeforeUnmount(beforeUnmount.bind(publicThis));\r\n    }\r\n    if (unmounted) {\r\n        onUnmounted(unmounted.bind(publicThis));\r\n    }\r\n}\r\nfunction callSyncHook(name, options, ctx, globalMixins) {\r\n    callHookFromMixins(name, globalMixins, ctx);\r\n    const baseHook = options.extends && options.extends[name];\r\n    if (baseHook) {\r\n        baseHook.call(ctx);\r\n    }\r\n    const mixins = options.mixins;\r\n    if (mixins) {\r\n        callHookFromMixins(name, mixins, ctx);\r\n    }\r\n    const selfHook = options[name];\r\n    if (selfHook) {\r\n        selfHook.call(ctx);\r\n    }\r\n}\r\nfunction callHookFromMixins(name, mixins, ctx) {\r\n    for (let i = 0; i < mixins.length; i++) {\r\n        const fn = mixins[i][name];\r\n        if (fn) {\r\n            fn.call(ctx);\r\n        }\r\n    }\r\n}\r\nfunction applyMixins(instance, mixins, deferredData, deferredWatch) {\r\n    for (let i = 0; i < mixins.length; i++) {\r\n        applyOptions(instance, mixins[i], deferredData, deferredWatch, true);\r\n    }\r\n}\r\nfunction resolveData(instance, dataFn, publicThis) {\r\n    const data = dataFn.call(publicThis, publicThis);\r\n    if ((process.env.NODE_ENV !== 'production') && isPromise(data)) {\r\n        warn(`data() returned a Promise - note data() cannot be async; If you ` +\r\n            `intend to perform data fetching before component renders, use ` +\r\n            `async setup() + <Suspense>.`);\r\n    }\r\n    if (!isObject(data)) {\r\n        (process.env.NODE_ENV !== 'production') && warn(`data() should return an object.`);\r\n    }\r\n    else if (instance.data === EMPTY_OBJ) {\r\n        instance.data = reactive(data);\r\n    }\r\n    else {\r\n        // existing data: this is a mixin or extends.\r\n        extend(instance.data, data);\r\n    }\r\n}\r\nfunction createWatcher(raw, ctx, publicThis, key) {\r\n    const getter = () => publicThis[key];\r\n    if (isString(raw)) {\r\n        const handler = ctx[raw];\r\n        if (isFunction(handler)) {\r\n            watch(getter, handler);\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Invalid watch handler specified by key \"${raw}\"`, handler);\r\n        }\r\n    }\r\n    else if (isFunction(raw)) {\r\n        watch(getter, raw.bind(publicThis));\r\n    }\r\n    else if (isObject(raw)) {\r\n        if (isArray(raw)) {\r\n            raw.forEach(r => createWatcher(r, ctx, publicThis, key));\r\n        }\r\n        else {\r\n            watch(getter, raw.handler.bind(publicThis), raw);\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`Invalid watch option: \"${key}\"`);\r\n    }\r\n}\r\nfunction resolveMergedOptions(instance) {\r\n    const raw = instance.type;\r\n    const { __merged, mixins, extends: extendsOptions } = raw;\r\n    if (__merged)\r\n        return __merged;\r\n    const globalMixins = instance.appContext.mixins;\r\n    if (!globalMixins.length && !mixins && !extendsOptions)\r\n        return raw;\r\n    const options = {};\r\n    globalMixins.forEach(m => mergeOptions(options, m, instance));\r\n    extendsOptions && mergeOptions(options, extendsOptions, instance);\r\n    mixins && mixins.forEach(m => mergeOptions(options, m, instance));\r\n    mergeOptions(options, raw, instance);\r\n    return (raw.__merged = options);\r\n}\r\nfunction mergeOptions(to, from, instance) {\r\n    const strats = instance.appContext.config.optionMergeStrategies;\r\n    for (const key in from) {\r\n        if (strats && hasOwn(strats, key)) {\r\n            to[key] = strats[key](to[key], from[key], instance.proxy, key);\r\n        }\r\n        else if (!hasOwn(to, key)) {\r\n            to[key] = from[key];\r\n        }\r\n    }\r\n}\n\nconst publicPropertiesMap = extend(Object.create(null), {\r\n    $: i => i,\r\n    $el: i => i.vnode.el,\r\n    $data: i => i.data,\r\n    $props: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.props) : i.props),\r\n    $attrs: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.attrs) : i.attrs),\r\n    $slots: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.slots) : i.slots),\r\n    $refs: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.refs) : i.refs),\r\n    $parent: i => i.parent && i.parent.proxy,\r\n    $root: i => i.root && i.root.proxy,\r\n    $emit: i => i.emit,\r\n    $options: i => ( resolveMergedOptions(i) ),\r\n    $forceUpdate: i => () => queueJob(i.update),\r\n    $nextTick: () => nextTick,\r\n    $watch:  i => instanceWatch.bind(i) \r\n});\r\nconst PublicInstanceProxyHandlers = {\r\n    get({ _: instance }, key) {\r\n        const { ctx, setupState, data, props, accessCache, type, appContext } = instance;\r\n        // let @vue/reactivity know it should never observe Vue public instances.\r\n        if (key === \"__v_skip\" /* SKIP */) {\r\n            return true;\r\n        }\r\n        // data / props / ctx\r\n        // This getter gets called for every property access on the render context\r\n        // during render and is a major hotspot. The most expensive part of this\r\n        // is the multiple hasOwn() calls. It's much faster to do a simple property\r\n        // access on a plain object, so we use an accessCache object (with null\r\n        // prototype) to memoize what access type a key corresponds to.\r\n        let normalizedProps;\r\n        if (key[0] !== '$') {\r\n            const n = accessCache[key];\r\n            if (n !== undefined) {\r\n                switch (n) {\r\n                    case 0 /* SETUP */:\r\n                        return setupState[key];\r\n                    case 1 /* DATA */:\r\n                        return data[key];\r\n                    case 3 /* CONTEXT */:\r\n                        return ctx[key];\r\n                    case 2 /* PROPS */:\r\n                        return props[key];\r\n                    // default: just fallthrough\r\n                }\r\n            }\r\n            else if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n                accessCache[key] = 0 /* SETUP */;\r\n                return setupState[key];\r\n            }\r\n            else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n                accessCache[key] = 1 /* DATA */;\r\n                return data[key];\r\n            }\r\n            else if (\r\n            // only cache other properties when instance has declared (thus stable)\r\n            // props\r\n            (normalizedProps = normalizePropsOptions(type)[0]) &&\r\n                hasOwn(normalizedProps, key)) {\r\n                accessCache[key] = 2 /* PROPS */;\r\n                return props[key];\r\n            }\r\n            else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n                accessCache[key] = 3 /* CONTEXT */;\r\n                return ctx[key];\r\n            }\r\n            else {\r\n                accessCache[key] = 4 /* OTHER */;\r\n            }\r\n        }\r\n        const publicGetter = publicPropertiesMap[key];\r\n        let cssModule, globalProperties;\r\n        // public $xxx properties\r\n        if (publicGetter) {\r\n            if (key === '$attrs') {\r\n                track(instance, \"get\" /* GET */, key);\r\n                (process.env.NODE_ENV !== 'production') && markAttrsAccessed();\r\n            }\r\n            return publicGetter(instance);\r\n        }\r\n        else if (\r\n        // css module (injected by vue-loader)\r\n        (cssModule = type.__cssModules) &&\r\n            (cssModule = cssModule[key])) {\r\n            return cssModule;\r\n        }\r\n        else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n            // user may set custom properties to `this` that start with `$`\r\n            accessCache[key] = 3 /* CONTEXT */;\r\n            return ctx[key];\r\n        }\r\n        else if (\r\n        // global properties\r\n        ((globalProperties = appContext.config.globalProperties),\r\n            hasOwn(globalProperties, key))) {\r\n            return globalProperties[key];\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production') &&\r\n            currentRenderingInstance &&\r\n            // #1091 avoid internal isRef/isVNode checks on component instance leading\r\n            // to infinite warning loop\r\n            key.indexOf('__v') !== 0) {\r\n            if (data !== EMPTY_OBJ && key[0] === '$' && hasOwn(data, key)) {\r\n                warn(`Property ${JSON.stringify(key)} must be accessed via $data because it starts with a reserved ` +\r\n                    `character and is not proxied on the render context.`);\r\n            }\r\n            else {\r\n                warn(`Property ${JSON.stringify(key)} was accessed during render ` +\r\n                    `but is not defined on instance.`);\r\n            }\r\n        }\r\n    },\r\n    set({ _: instance }, key, value) {\r\n        const { data, setupState, ctx } = instance;\r\n        if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n            setupState[key] = value;\r\n        }\r\n        else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n            data[key] = value;\r\n        }\r\n        else if (key in instance.props) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Attempting to mutate prop \"${key}\". Props are readonly.`, instance);\r\n            return false;\r\n        }\r\n        if (key[0] === '$' && key.slice(1) in instance) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Attempting to mutate public property \"${key}\". ` +\r\n                    `Properties starting with $ are reserved and readonly.`, instance);\r\n            return false;\r\n        }\r\n        else {\r\n            if ((process.env.NODE_ENV !== 'production') && key in instance.appContext.config.globalProperties) {\r\n                Object.defineProperty(ctx, key, {\r\n                    enumerable: true,\r\n                    configurable: true,\r\n                    value\r\n                });\r\n            }\r\n            else {\r\n                ctx[key] = value;\r\n            }\r\n        }\r\n        return true;\r\n    },\r\n    has({ _: { data, setupState, accessCache, ctx, type, appContext } }, key) {\r\n        let normalizedProps;\r\n        return (accessCache[key] !== undefined ||\r\n            (data !== EMPTY_OBJ && hasOwn(data, key)) ||\r\n            (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) ||\r\n            ((normalizedProps = normalizePropsOptions(type)[0]) &&\r\n                hasOwn(normalizedProps, key)) ||\r\n            hasOwn(ctx, key) ||\r\n            hasOwn(publicPropertiesMap, key) ||\r\n            hasOwn(appContext.config.globalProperties, key));\r\n    }\r\n};\r\nif ((process.env.NODE_ENV !== 'production') && !false) {\r\n    PublicInstanceProxyHandlers.ownKeys = (target) => {\r\n        warn(`Avoid app logic that relies on enumerating keys on a component instance. ` +\r\n            `The keys will be empty in production mode to avoid performance overhead.`);\r\n        return Reflect.ownKeys(target);\r\n    };\r\n}\r\nconst RuntimeCompiledPublicInstanceProxyHandlers = extend({}, PublicInstanceProxyHandlers, {\r\n    get(target, key) {\r\n        // fast path for unscopables when using `with` block\r\n        if (key === Symbol.unscopables) {\r\n            return;\r\n        }\r\n        return PublicInstanceProxyHandlers.get(target, key, target);\r\n    },\r\n    has(_, key) {\r\n        const has = key[0] !== '_' && !isGloballyWhitelisted(key);\r\n        if ((process.env.NODE_ENV !== 'production') && !has && PublicInstanceProxyHandlers.has(_, key)) {\r\n            warn(`Property ${JSON.stringify(key)} should not start with _ which is a reserved prefix for Vue internals.`);\r\n        }\r\n        return has;\r\n    }\r\n});\r\n// In dev mode, the proxy target exposes the same properties as seen on `this`\r\n// for easier console inspection. In prod mode it will be an empty object so\r\n// these properties definitions can be skipped.\r\nfunction createRenderContext(instance) {\r\n    const target = {};\r\n    // expose internal instance for proxy handlers\r\n    Object.defineProperty(target, `_`, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        get: () => instance\r\n    });\r\n    // expose public properties\r\n    Object.keys(publicPropertiesMap).forEach(key => {\r\n        Object.defineProperty(target, key, {\r\n            configurable: true,\r\n            enumerable: false,\r\n            get: () => publicPropertiesMap[key](instance),\r\n            // intercepted by the proxy so no need for implementation,\r\n            // but needed to prevent set errors\r\n            set: NOOP\r\n        });\r\n    });\r\n    // expose global properties\r\n    const { globalProperties } = instance.appContext.config;\r\n    Object.keys(globalProperties).forEach(key => {\r\n        Object.defineProperty(target, key, {\r\n            configurable: true,\r\n            enumerable: false,\r\n            get: () => globalProperties[key],\r\n            set: NOOP\r\n        });\r\n    });\r\n    return target;\r\n}\r\n// dev only\r\nfunction exposePropsOnRenderContext(instance) {\r\n    const { ctx, type } = instance;\r\n    const propsOptions = normalizePropsOptions(type)[0];\r\n    if (propsOptions) {\r\n        Object.keys(propsOptions).forEach(key => {\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => instance.props[key],\r\n                set: NOOP\r\n            });\r\n        });\r\n    }\r\n}\r\n// dev only\r\nfunction exposeSetupStateOnRenderContext(instance) {\r\n    const { ctx, setupState } = instance;\r\n    Object.keys(toRaw(setupState)).forEach(key => {\r\n        Object.defineProperty(ctx, key, {\r\n            enumerable: true,\r\n            configurable: true,\r\n            get: () => setupState[key],\r\n            set: NOOP\r\n        });\r\n    });\r\n}\n\nconst emptyAppContext = createAppContext();\r\nlet uid = 0;\r\nfunction createComponentInstance(vnode, parent, suspense) {\r\n    // inherit parent app context - or - if root, adopt from root vnode\r\n    const appContext = (parent ? parent.appContext : vnode.appContext) || emptyAppContext;\r\n    const instance = {\r\n        uid: uid++,\r\n        vnode,\r\n        parent,\r\n        appContext,\r\n        type: vnode.type,\r\n        root: null,\r\n        next: null,\r\n        subTree: null,\r\n        update: null,\r\n        render: null,\r\n        proxy: null,\r\n        withProxy: null,\r\n        effects: null,\r\n        provides: parent ? parent.provides : Object.create(appContext.provides),\r\n        accessCache: null,\r\n        renderCache: [],\r\n        // state\r\n        ctx: EMPTY_OBJ,\r\n        data: EMPTY_OBJ,\r\n        props: EMPTY_OBJ,\r\n        attrs: EMPTY_OBJ,\r\n        slots: EMPTY_OBJ,\r\n        refs: EMPTY_OBJ,\r\n        setupState: EMPTY_OBJ,\r\n        setupContext: null,\r\n        // per-instance asset storage (mutable during options resolution)\r\n        components: Object.create(appContext.components),\r\n        directives: Object.create(appContext.directives),\r\n        // suspense related\r\n        suspense,\r\n        asyncDep: null,\r\n        asyncResolved: false,\r\n        // lifecycle hooks\r\n        // not using enums here because it results in computed properties\r\n        isMounted: false,\r\n        isUnmounted: false,\r\n        isDeactivated: false,\r\n        bc: null,\r\n        c: null,\r\n        bm: null,\r\n        m: null,\r\n        bu: null,\r\n        u: null,\r\n        um: null,\r\n        bum: null,\r\n        da: null,\r\n        a: null,\r\n        rtg: null,\r\n        rtc: null,\r\n        ec: null,\r\n        emit: null,\r\n        emitted: null\r\n    };\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        instance.ctx = createRenderContext(instance);\r\n    }\r\n    else {\r\n        instance.ctx = { _: instance };\r\n    }\r\n    instance.root = parent ? parent.root : instance;\r\n    instance.emit = emit.bind(null, instance);\r\n    (process.env.NODE_ENV !== 'production') && componentAdded(instance);\r\n    return instance;\r\n}\r\nlet currentInstance = null;\r\nconst getCurrentInstance = () => currentInstance || currentRenderingInstance;\r\nconst setCurrentInstance = (instance) => {\r\n    currentInstance = instance;\r\n};\r\nconst isBuiltInTag = /*#__PURE__*/ makeMap('slot,component');\r\nfunction validateComponentName(name, config) {\r\n    const appIsNativeTag = config.isNativeTag || NO;\r\n    if (isBuiltInTag(name) || appIsNativeTag(name)) {\r\n        warn('Do not use built-in or reserved HTML elements as component id: ' + name);\r\n    }\r\n}\r\nlet isInSSRComponentSetup = false;\r\nfunction setupComponent(instance, isSSR = false) {\r\n    isInSSRComponentSetup = isSSR;\r\n    const { props, children, shapeFlag } = instance.vnode;\r\n    const isStateful = shapeFlag & 4 /* STATEFUL_COMPONENT */;\r\n    initProps(instance, props, isStateful, isSSR);\r\n    initSlots(instance, children);\r\n    const setupResult = isStateful\r\n        ? setupStatefulComponent(instance, isSSR)\r\n        : undefined;\r\n    isInSSRComponentSetup = false;\r\n    return setupResult;\r\n}\r\nfunction setupStatefulComponent(instance, isSSR) {\r\n    const Component = instance.type;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        if (Component.name) {\r\n            validateComponentName(Component.name, instance.appContext.config);\r\n        }\r\n        if (Component.components) {\r\n            const names = Object.keys(Component.components);\r\n            for (let i = 0; i < names.length; i++) {\r\n                validateComponentName(names[i], instance.appContext.config);\r\n            }\r\n        }\r\n        if (Component.directives) {\r\n            const names = Object.keys(Component.directives);\r\n            for (let i = 0; i < names.length; i++) {\r\n                validateDirectiveName(names[i]);\r\n            }\r\n        }\r\n    }\r\n    // 0. create render proxy property access cache\r\n    instance.accessCache = {};\r\n    // 1. create public instance / render proxy\r\n    // also mark it raw so it's never observed\r\n    instance.proxy = new Proxy(instance.ctx, PublicInstanceProxyHandlers);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        exposePropsOnRenderContext(instance);\r\n    }\r\n    // 2. call setup()\r\n    const { setup } = Component;\r\n    if (setup) {\r\n        const setupContext = (instance.setupContext =\r\n            setup.length > 1 ? createSetupContext(instance) : null);\r\n        currentInstance = instance;\r\n        pauseTracking();\r\n        const setupResult = callWithErrorHandling(setup, instance, 0 /* SETUP_FUNCTION */, [(process.env.NODE_ENV !== 'production') ? shallowReadonly(instance.props) : instance.props, setupContext]);\r\n        resetTracking();\r\n        currentInstance = null;\r\n        if (isPromise(setupResult)) {\r\n            if (isSSR) {\r\n                // return the promise so server-renderer can wait on it\r\n                return setupResult.then((resolvedResult) => {\r\n                    handleSetupResult(instance, resolvedResult);\r\n                });\r\n            }\r\n            else {\r\n                // async setup returned Promise.\r\n                // bail here and wait for re-entry.\r\n                instance.asyncDep = setupResult;\r\n            }\r\n        }\r\n        else {\r\n            handleSetupResult(instance, setupResult);\r\n        }\r\n    }\r\n    else {\r\n        finishComponentSetup(instance);\r\n    }\r\n}\r\nfunction handleSetupResult(instance, setupResult, isSSR) {\r\n    if (isFunction(setupResult)) {\r\n        // setup returned an inline render function\r\n        instance.render = setupResult;\r\n    }\r\n    else if (isObject(setupResult)) {\r\n        if ((process.env.NODE_ENV !== 'production') && isVNode(setupResult)) {\r\n            warn(`setup() should not return VNodes directly - ` +\r\n                `return a render function instead.`);\r\n        }\r\n        // setup returned bindings.\r\n        // assuming a render function compiled from template is present.\r\n        instance.setupState = reactive(setupResult);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            exposeSetupStateOnRenderContext(instance);\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production') && setupResult !== undefined) {\r\n        warn(`setup() should return an object. Received: ${setupResult === null ? 'null' : typeof setupResult}`);\r\n    }\r\n    finishComponentSetup(instance);\r\n}\r\nlet compile;\r\n/**\r\n * For runtime-dom to register the compiler.\r\n * Note the exported method uses any to avoid d.ts relying on the compiler types.\r\n */\r\nfunction registerRuntimeCompiler(_compile) {\r\n    compile = _compile;\r\n}\r\nfunction finishComponentSetup(instance, isSSR) {\r\n    const Component = instance.type;\r\n    // template / render function normalization\r\n    if (!instance.render) {\r\n        if (compile && Component.template && !Component.render) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                startMeasure(instance, `compile`);\r\n            }\r\n            Component.render = compile(Component.template, {\r\n                isCustomElement: instance.appContext.config.isCustomElement || NO\r\n            });\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                endMeasure(instance, `compile`);\r\n            }\r\n            Component.render._rc = true;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && !Component.render) {\r\n            /* istanbul ignore if */\r\n            if (!compile && Component.template) {\r\n                warn(`Component provided template option but ` +\r\n                    `runtime compilation is not supported in this build of Vue.` +\r\n                    ( ` Configure your bundler to alias \"vue\" to \"vue/dist/vue.esm-bundler.js\".`\r\n                        ) /* should not happen */);\r\n            }\r\n            else {\r\n                warn(`Component is missing template or render function.`);\r\n            }\r\n        }\r\n        instance.render = (Component.render || NOOP);\r\n        // for runtime-compiled render functions using `with` blocks, the render\r\n        // proxy used needs a different `has` handler which is more performant and\r\n        // also only allows a whitelist of globals to fallthrough.\r\n        if (instance.render._rc) {\r\n            instance.withProxy = new Proxy(instance.ctx, RuntimeCompiledPublicInstanceProxyHandlers);\r\n        }\r\n    }\r\n    // support for 2.x options\r\n    {\r\n        currentInstance = instance;\r\n        applyOptions(instance, Component);\r\n        currentInstance = null;\r\n    }\r\n}\r\nconst attrHandlers = {\r\n    get: (target, key) => {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            markAttrsAccessed();\r\n        }\r\n        return target[key];\r\n    },\r\n    set: () => {\r\n        warn(`setupContext.attrs is readonly.`);\r\n        return false;\r\n    },\r\n    deleteProperty: () => {\r\n        warn(`setupContext.attrs is readonly.`);\r\n        return false;\r\n    }\r\n};\r\nfunction createSetupContext(instance) {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        // We use getters in dev in case libs like test-utils overwrite instance\r\n        // properties (overwrites should not be done in prod)\r\n        return Object.freeze({\r\n            get attrs() {\r\n                return new Proxy(instance.attrs, attrHandlers);\r\n            },\r\n            get slots() {\r\n                return shallowReadonly(instance.slots);\r\n            },\r\n            get emit() {\r\n                return (event, ...args) => instance.emit(event, ...args);\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        return {\r\n            attrs: instance.attrs,\r\n            slots: instance.slots,\r\n            emit: instance.emit\r\n        };\r\n    }\r\n}\r\n// record effects created during a component's setup() so that they can be\r\n// stopped when the component unmounts\r\nfunction recordInstanceBoundEffect(effect) {\r\n    if (currentInstance) {\r\n        (currentInstance.effects || (currentInstance.effects = [])).push(effect);\r\n    }\r\n}\r\nconst classifyRE = /(?:^|[-_])(\\w)/g;\r\nconst classify = (str) => str.replace(classifyRE, c => c.toUpperCase()).replace(/[-_]/g, '');\r\n/* istanbul ignore next */\r\nfunction formatComponentName(instance, Component, isRoot = false) {\r\n    let name = isFunction(Component)\r\n        ? Component.displayName || Component.name\r\n        : Component.name;\r\n    if (!name && Component.__file) {\r\n        const match = Component.__file.match(/([^/\\\\]+)\\.vue$/);\r\n        if (match) {\r\n            name = match[1];\r\n        }\r\n    }\r\n    if (!name && instance && instance.parent) {\r\n        // try to infer the name based on local resolution\r\n        const registry = instance.parent.components;\r\n        for (const key in registry) {\r\n            if (registry[key] === Component) {\r\n                name = key;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return name ? classify(name) : isRoot ? `App` : `Anonymous`;\r\n}\n\nfunction computed(getterOrOptions) {\r\n    const c = computed$1(getterOrOptions);\r\n    recordInstanceBoundEffect(c.effect);\r\n    return c;\r\n}\n\n// implementation, close to no-op\r\nfunction defineComponent(options) {\r\n    return isFunction(options) ? { setup: options } : options;\r\n}\n\nfunction defineAsyncComponent(source) {\r\n    if (isFunction(source)) {\r\n        source = { loader: source };\r\n    }\r\n    const { loader, loadingComponent: loadingComponent, errorComponent: errorComponent, delay = 200, timeout, // undefined = never times out\r\n    suspensible = true, onError: userOnError } = source;\r\n    let pendingRequest = null;\r\n    let resolvedComp;\r\n    let retries = 0;\r\n    const retry = () => {\r\n        retries++;\r\n        pendingRequest = null;\r\n        return load();\r\n    };\r\n    const load = () => {\r\n        let thisRequest;\r\n        return (pendingRequest ||\r\n            (thisRequest = pendingRequest = loader()\r\n                .catch(err => {\r\n                err = err instanceof Error ? err : new Error(String(err));\r\n                if (userOnError) {\r\n                    return new Promise((resolve, reject) => {\r\n                        const userRetry = () => resolve(retry());\r\n                        const userFail = () => reject(err);\r\n                        userOnError(err, userRetry, userFail, retries + 1);\r\n                    });\r\n                }\r\n                else {\r\n                    throw err;\r\n                }\r\n            })\r\n                .then((comp) => {\r\n                if (thisRequest !== pendingRequest && pendingRequest) {\r\n                    return pendingRequest;\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && !comp) {\r\n                    warn(`Async component loader resolved to undefined. ` +\r\n                        `If you are using retry(), make sure to return its return value.`);\r\n                }\r\n                // interop module default\r\n                if (comp &&\r\n                    (comp.__esModule || comp[Symbol.toStringTag] === 'Module')) {\r\n                    comp = comp.default;\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && comp && !isObject(comp) && !isFunction(comp)) {\r\n                    throw new Error(`Invalid async component load result: ${comp}`);\r\n                }\r\n                resolvedComp = comp;\r\n                return comp;\r\n            })));\r\n    };\r\n    return defineComponent({\r\n        __asyncLoader: load,\r\n        name: 'AsyncComponentWrapper',\r\n        setup() {\r\n            const instance = currentInstance;\r\n            // already resolved\r\n            if (resolvedComp) {\r\n                return () => createInnerComp(resolvedComp, instance);\r\n            }\r\n            const onError = (err) => {\r\n                pendingRequest = null;\r\n                handleError(err, instance, 13 /* ASYNC_COMPONENT_LOADER */);\r\n            };\r\n            // suspense-controlled or SSR.\r\n            if (( suspensible && instance.suspense) ||\r\n                (false )) {\r\n                return load()\r\n                    .then(comp => {\r\n                    return () => createInnerComp(comp, instance);\r\n                })\r\n                    .catch(err => {\r\n                    onError(err);\r\n                    return () => errorComponent\r\n                        ? createVNode(errorComponent, { error: err })\r\n                        : null;\r\n                });\r\n            }\r\n            const loaded = ref(false);\r\n            const error = ref();\r\n            const delayed = ref(!!delay);\r\n            if (delay) {\r\n                setTimeout(() => {\r\n                    delayed.value = false;\r\n                }, delay);\r\n            }\r\n            if (timeout != null) {\r\n                setTimeout(() => {\r\n                    if (!loaded.value) {\r\n                        const err = new Error(`Async component timed out after ${timeout}ms.`);\r\n                        onError(err);\r\n                        error.value = err;\r\n                    }\r\n                }, timeout);\r\n            }\r\n            load()\r\n                .then(() => {\r\n                loaded.value = true;\r\n            })\r\n                .catch(err => {\r\n                onError(err);\r\n                error.value = err;\r\n            });\r\n            return () => {\r\n                if (loaded.value && resolvedComp) {\r\n                    return createInnerComp(resolvedComp, instance);\r\n                }\r\n                else if (error.value && errorComponent) {\r\n                    return createVNode(errorComponent, {\r\n                        error: error.value\r\n                    });\r\n                }\r\n                else if (loadingComponent && !delayed.value) {\r\n                    return createVNode(loadingComponent);\r\n                }\r\n            };\r\n        }\r\n    });\r\n}\r\nfunction createInnerComp(comp, { vnode: { props, children } }) {\r\n    return createVNode(comp, props, children);\r\n}\n\n// Actual implementation\r\nfunction h(type, propsOrChildren, children) {\r\n    if (arguments.length === 2) {\r\n        if (isObject(propsOrChildren) && !isArray(propsOrChildren)) {\r\n            // single vnode without props\r\n            if (isVNode(propsOrChildren)) {\r\n                return createVNode(type, null, [propsOrChildren]);\r\n            }\r\n            // props without children\r\n            return createVNode(type, propsOrChildren);\r\n        }\r\n        else {\r\n            // omit props\r\n            return createVNode(type, null, propsOrChildren);\r\n        }\r\n    }\r\n    else {\r\n        if (isVNode(children)) {\r\n            children = [children];\r\n        }\r\n        return createVNode(type, propsOrChildren, children);\r\n    }\r\n}\n\nconst ssrContextKey = Symbol((process.env.NODE_ENV !== 'production') ? `ssrContext` : ``);\r\nconst useSSRContext = () => {\r\n    {\r\n        const ctx = inject(ssrContextKey);\r\n        if (!ctx) {\r\n            warn(`Server rendering context not provided. Make sure to only call ` +\r\n                `useSsrContext() conditionally in the server build.`);\r\n        }\r\n        return ctx;\r\n    }\r\n};\n\n/**\r\n * Actual implementation\r\n */\r\nfunction renderList(source, renderItem) {\r\n    let ret;\r\n    if (isArray(source) || isString(source)) {\r\n        ret = new Array(source.length);\r\n        for (let i = 0, l = source.length; i < l; i++) {\r\n            ret[i] = renderItem(source[i], i);\r\n        }\r\n    }\r\n    else if (typeof source === 'number') {\r\n        ret = new Array(source);\r\n        for (let i = 0; i < source; i++) {\r\n            ret[i] = renderItem(i + 1, i);\r\n        }\r\n    }\r\n    else if (isObject(source)) {\r\n        if (source[Symbol.iterator]) {\r\n            ret = Array.from(source, renderItem);\r\n        }\r\n        else {\r\n            const keys = Object.keys(source);\r\n            ret = new Array(keys.length);\r\n            for (let i = 0, l = keys.length; i < l; i++) {\r\n                const key = keys[i];\r\n                ret[i] = renderItem(source[key], key, i);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        ret = [];\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * For prefixing keys in v-on=\"obj\" with \"on\"\r\n * @private\r\n */\r\nfunction toHandlers(obj) {\r\n    const ret = {};\r\n    if ((process.env.NODE_ENV !== 'production') && !isObject(obj)) {\r\n        warn(`v-on with no argument expects an object value.`);\r\n        return ret;\r\n    }\r\n    for (const key in obj) {\r\n        ret[`on${capitalize(key)}`] = obj[key];\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * Compiler runtime helper for rendering `<slot/>`\r\n * @private\r\n */\r\nfunction renderSlot(slots, name, props = {}, \r\n// this is not a user-facing function, so the fallback is always generated by\r\n// the compiler and guaranteed to be a function returning an array\r\nfallback) {\r\n    let slot = slots[name];\r\n    if ((process.env.NODE_ENV !== 'production') && slot && slot.length > 1) {\r\n        warn(`SSR-optimized slot function detected in a non-SSR-optimized render ` +\r\n            `function. You need to mark this component with $dynamic-slots in the ` +\r\n            `parent template.`);\r\n        slot = () => [];\r\n    }\r\n    return (openBlock(),\r\n        createBlock(Fragment, { key: props.key }, slot ? slot(props) : fallback ? fallback() : [], slots._ === 1 /* STABLE */\r\n            ? 64 /* STABLE_FRAGMENT */\r\n            : -2 /* BAIL */));\r\n}\n\n/**\r\n * Compiler runtime helper for creating dynamic slots object\r\n * @private\r\n */\r\nfunction createSlots(slots, dynamicSlots) {\r\n    for (let i = 0; i < dynamicSlots.length; i++) {\r\n        const slot = dynamicSlots[i];\r\n        // array of dynamic slot generated by <template v-for=\"...\" #[...]>\r\n        if (isArray(slot)) {\r\n            for (let j = 0; j < slot.length; j++) {\r\n                slots[slot[j].name] = slot[j].fn;\r\n            }\r\n        }\r\n        else if (slot) {\r\n            // conditional single slot generated by <template v-if=\"...\" #foo>\r\n            slots[slot.name] = slot.fn;\r\n        }\r\n    }\r\n    return slots;\r\n}\n\n// Core API ------------------------------------------------------------------\r\nconst version = \"3.0.0-rc.2\";\r\n/**\r\n * SSR utils for \\@vue/server-renderer. Only exposed in cjs builds.\r\n * @internal\r\n */\r\nconst ssrUtils = ( null);\n\nexport { BaseTransition, Comment, Fragment, KeepAlive, Static, Suspense, Teleport, Text, callWithAsyncErrorHandling, callWithErrorHandling, cloneVNode, computed, createBlock, createCommentVNode, createHydrationRenderer, createRenderer, createSlots, createStaticVNode, createTextVNode, createVNode, defineAsyncComponent, defineComponent, devtools, getCurrentInstance, getTransitionRawChildren, h, handleError, inject, isVNode, mergeProps, nextTick, onActivated, onBeforeMount, onBeforeUnmount, onBeforeUpdate, onDeactivated, onErrorCaptured, onMounted, onRenderTracked, onRenderTriggered, onUnmounted, onUpdated, openBlock, popScopeId, provide, pushScopeId, queuePostFlushCb, registerRuntimeCompiler, renderList, renderSlot, resolveComponent, resolveDirective, resolveDynamicComponent, resolveTransitionHooks, setBlockTracking, setDevtoolsHook, setTransitionHooks, ssrContextKey, ssrUtils, toHandlers, transformVNodeArgs, useSSRContext, useTransitionState, version, warn, watch, watchEffect, withCtx, withDirectives, withScopeId };\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import { camelize, warn, callWithAsyncErrorHandling, getCurrentInstance, onMounted, watchEffect, unref, Fragment, h, BaseTransition, useTransitionState, onUpdated, getTransitionRawChildren, setTransitionHooks, resolveTransitionHooks, createVNode, createRenderer, createHydrationRenderer } from '@vue/runtime-core';\nexport * from '@vue/runtime-core';\nimport { isString, hyphenate, capitalize, isSpecialBooleanAttr, isArray, isOn, isFunction, EMPTY_OBJ, extend, isObject, toNumber, invokeArrayFns, looseIndexOf, looseEqual, isHTMLTag, isSVGTag } from '@vue/shared';\n\nconst svgNS = 'http://www.w3.org/2000/svg';\r\nconst doc = (typeof document !== 'undefined' ? document : null);\r\nlet tempContainer;\r\nlet tempSVGContainer;\r\nconst nodeOps = {\r\n    insert: (child, parent, anchor) => {\r\n        parent.insertBefore(child, anchor || null);\r\n    },\r\n    remove: child => {\r\n        const parent = child.parentNode;\r\n        if (parent) {\r\n            parent.removeChild(child);\r\n        }\r\n    },\r\n    createElement: (tag, isSVG, is) => isSVG\r\n        ? doc.createElementNS(svgNS, tag)\r\n        : doc.createElement(tag, is ? { is } : undefined),\r\n    createText: text => doc.createTextNode(text),\r\n    createComment: text => doc.createComment(text),\r\n    setText: (node, text) => {\r\n        node.nodeValue = text;\r\n    },\r\n    setElementText: (el, text) => {\r\n        el.textContent = text;\r\n    },\r\n    parentNode: node => node.parentNode,\r\n    nextSibling: node => node.nextSibling,\r\n    querySelector: selector => doc.querySelector(selector),\r\n    setScopeId(el, id) {\r\n        el.setAttribute(id, '');\r\n    },\r\n    cloneNode(el) {\r\n        return el.cloneNode(true);\r\n    },\r\n    // __UNSAFE__\r\n    // Reason: innerHTML.\r\n    // Static content here can only come from compiled templates.\r\n    // As long as the user only uses trusted templates, this is safe.\r\n    insertStaticContent(content, parent, anchor, isSVG) {\r\n        const temp = isSVG\r\n            ? tempSVGContainer ||\r\n                (tempSVGContainer = doc.createElementNS(svgNS, 'svg'))\r\n            : tempContainer || (tempContainer = doc.createElement('div'));\r\n        temp.innerHTML = content;\r\n        const first = temp.firstChild;\r\n        let node = first;\r\n        let last = node;\r\n        while (node) {\r\n            last = node;\r\n            nodeOps.insert(node, parent, anchor);\r\n            node = temp.firstChild;\r\n        }\r\n        return [first, last];\r\n    }\r\n};\n\n// compiler should normalize class + :class bindings on the same element\r\n// into a single binding ['staticClass', dynamic]\r\nfunction patchClass(el, value, isSVG) {\r\n    if (value == null) {\r\n        value = '';\r\n    }\r\n    if (isSVG) {\r\n        el.setAttribute('class', value);\r\n    }\r\n    else {\r\n        // directly setting className should be faster than setAttribute in theory\r\n        // if this is an element during a transition, take the temporary transition\r\n        // classes into account.\r\n        const transitionClasses = el._vtc;\r\n        if (transitionClasses) {\r\n            value = (value\r\n                ? [value, ...transitionClasses]\r\n                : [...transitionClasses]).join(' ');\r\n        }\r\n        el.className = value;\r\n    }\r\n}\n\nfunction patchStyle(el, prev, next) {\r\n    const style = el.style;\r\n    if (!next) {\r\n        el.removeAttribute('style');\r\n    }\r\n    else if (isString(next)) {\r\n        if (prev !== next) {\r\n            style.cssText = next;\r\n        }\r\n    }\r\n    else {\r\n        for (const key in next) {\r\n            setStyle(style, key, next[key]);\r\n        }\r\n        if (prev && !isString(prev)) {\r\n            for (const key in prev) {\r\n                if (next[key] == null) {\r\n                    setStyle(style, key, '');\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nconst importantRE = /\\s*!important$/;\r\nfunction setStyle(style, name, val) {\r\n    if (name.startsWith('--')) {\r\n        // custom property definition\r\n        style.setProperty(name, val);\r\n    }\r\n    else {\r\n        const prefixed = autoPrefix(style, name);\r\n        if (importantRE.test(val)) {\r\n            // !important\r\n            style.setProperty(hyphenate(prefixed), val.replace(importantRE, ''), 'important');\r\n        }\r\n        else {\r\n            style[prefixed] = val;\r\n        }\r\n    }\r\n}\r\nconst prefixes = ['Webkit', 'Moz', 'ms'];\r\nconst prefixCache = {};\r\nfunction autoPrefix(style, rawName) {\r\n    const cached = prefixCache[rawName];\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    let name = camelize(rawName);\r\n    if (name !== 'filter' && name in style) {\r\n        return (prefixCache[rawName] = name);\r\n    }\r\n    name = capitalize(name);\r\n    for (let i = 0; i < prefixes.length; i++) {\r\n        const prefixed = prefixes[i] + name;\r\n        if (prefixed in style) {\r\n            return (prefixCache[rawName] = prefixed);\r\n        }\r\n    }\r\n    return rawName;\r\n}\n\nconst xlinkNS = 'http://www.w3.org/1999/xlink';\r\nfunction patchAttr(el, key, value, isSVG) {\r\n    if (isSVG && key.startsWith('xlink:')) {\r\n        if (value == null) {\r\n            el.removeAttributeNS(xlinkNS, key.slice(6, key.length));\r\n        }\r\n        else {\r\n            el.setAttributeNS(xlinkNS, key, value);\r\n        }\r\n    }\r\n    else {\r\n        // note we are only checking boolean attributes that don't have a\r\n        // corresponding dom prop of the same name here.\r\n        const isBoolean = isSpecialBooleanAttr(key);\r\n        if (value == null || (isBoolean && value === false)) {\r\n            el.removeAttribute(key);\r\n        }\r\n        else {\r\n            el.setAttribute(key, isBoolean ? '' : value);\r\n        }\r\n    }\r\n}\n\n// __UNSAFE__\r\n// functions. The user is responsible for using them with only trusted content.\r\nfunction patchDOMProp(el, key, value, \r\n// the following args are passed only due to potential innerHTML/textContent\r\n// overriding existing VNodes, in which case the old tree must be properly\r\n// unmounted.\r\nprevChildren, parentComponent, parentSuspense, unmountChildren) {\r\n    if (key === 'innerHTML' || key === 'textContent') {\r\n        if (prevChildren) {\r\n            unmountChildren(prevChildren, parentComponent, parentSuspense);\r\n        }\r\n        el[key] = value == null ? '' : value;\r\n        return;\r\n    }\r\n    if (key === 'value' && el.tagName !== 'PROGRESS') {\r\n        // store value as _value as well since\r\n        // non-string values will be stringified.\r\n        el._value = value;\r\n        el.value = value == null ? '' : value;\r\n        return;\r\n    }\r\n    if (value === '' && typeof el[key] === 'boolean') {\r\n        // e.g. <select multiple> compiles to { multiple: '' }\r\n        el[key] = true;\r\n    }\r\n    else if (value == null && typeof el[key] === 'string') {\r\n        // e.g. <div :id=\"null\">\r\n        el[key] = '';\r\n        el.removeAttribute(key);\r\n    }\r\n    else {\r\n        // some properties perform value validation and throw\r\n        try {\r\n            el[key] = value;\r\n        }\r\n        catch (e) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Failed setting prop \"${key}\" on <${el.tagName.toLowerCase()}>: ` +\r\n                    `value ${value} is invalid.`, e);\r\n            }\r\n        }\r\n    }\r\n}\n\n// Async edge case fix requires storing an event listener's attach timestamp.\r\nlet _getNow = Date.now;\r\n// Determine what event timestamp the browser is using. Annoyingly, the\r\n// timestamp can either be hi-res (relative to page load) or low-res\r\n// (relative to UNIX epoch), so in order to compare time we have to use the\r\n// same timestamp type when saving the flush timestamp.\r\nif (typeof document !== 'undefined' &&\r\n    _getNow() > document.createEvent('Event').timeStamp) {\r\n    // if the low-res timestamp which is bigger than the event timestamp\r\n    // (which is evaluated AFTER) it means the event is using a hi-res timestamp,\r\n    // and we need to use the hi-res version for event listeners as well.\r\n    _getNow = () => performance.now();\r\n}\r\n// To avoid the overhead of repeatedly calling performance.now(), we cache\r\n// and use the same timestamp for all event listeners attached in the same tick.\r\nlet cachedNow = 0;\r\nconst p = Promise.resolve();\r\nconst reset = () => {\r\n    cachedNow = 0;\r\n};\r\nconst getNow = () => cachedNow || (p.then(reset), (cachedNow = _getNow()));\r\nfunction addEventListener(el, event, handler, options) {\r\n    el.addEventListener(event, handler, options);\r\n}\r\nfunction removeEventListener(el, event, handler, options) {\r\n    el.removeEventListener(event, handler, options);\r\n}\r\nfunction patchEvent(el, rawName, prevValue, nextValue, instance = null) {\r\n    const invoker = prevValue && prevValue.invoker;\r\n    if (nextValue && invoker) {\r\n        prevValue.invoker = null;\r\n        invoker.value = nextValue;\r\n        nextValue.invoker = invoker;\r\n    }\r\n    else {\r\n        const [name, options] = parseName(rawName);\r\n        if (nextValue) {\r\n            addEventListener(el, name, createInvoker(nextValue, instance), options);\r\n        }\r\n        else if (invoker) {\r\n            // remove\r\n            removeEventListener(el, name, invoker, options);\r\n        }\r\n    }\r\n}\r\nconst optionsModifierRE = /(?:Once|Passive|Capture)$/;\r\nfunction parseName(name) {\r\n    let options;\r\n    if (optionsModifierRE.test(name)) {\r\n        options = {};\r\n        let m;\r\n        while ((m = name.match(optionsModifierRE))) {\r\n            name = name.slice(0, name.length - m[0].length);\r\n            options[m[0].toLowerCase()] = true;\r\n        }\r\n    }\r\n    return [name.slice(2).toLowerCase(), options];\r\n}\r\nfunction createInvoker(initialValue, instance) {\r\n    const invoker = (e) => {\r\n        // async edge case #6566: inner click event triggers patch, event handler\r\n        // attached to outer element during patch, and triggered again. This\r\n        // happens because browsers fire microtask ticks between event propagation.\r\n        // the solution is simple: we save the timestamp when a handler is attached,\r\n        // and the handler would only fire if the event passed to it was fired\r\n        // AFTER it was attached.\r\n        const timeStamp = e.timeStamp || _getNow();\r\n        if (timeStamp >= invoker.attached - 1) {\r\n            callWithAsyncErrorHandling(patchStopImmediatePropagation(e, invoker.value), instance, 5 /* NATIVE_EVENT_HANDLER */, [e]);\r\n        }\r\n    };\r\n    invoker.value = initialValue;\r\n    initialValue.invoker = invoker;\r\n    invoker.attached = getNow();\r\n    return invoker;\r\n}\r\nfunction patchStopImmediatePropagation(e, value) {\r\n    if (isArray(value)) {\r\n        const originalStop = e.stopImmediatePropagation;\r\n        e.stopImmediatePropagation = () => {\r\n            originalStop.call(e);\r\n            e._stopped = true;\r\n        };\r\n        return value.map(fn => (e) => !e._stopped && fn(e));\r\n    }\r\n    else {\r\n        return value;\r\n    }\r\n}\n\nconst nativeOnRE = /^on[a-z]/;\r\nconst forcePatchProp = (_, key) => key === 'value';\r\nconst patchProp = (el, key, prevValue, nextValue, isSVG = false, prevChildren, parentComponent, parentSuspense, unmountChildren) => {\r\n    switch (key) {\r\n        // special\r\n        case 'class':\r\n            patchClass(el, nextValue, isSVG);\r\n            break;\r\n        case 'style':\r\n            patchStyle(el, prevValue, nextValue);\r\n            break;\r\n        default:\r\n            if (isOn(key)) {\r\n                // ignore v-model listeners\r\n                if (!key.startsWith('onUpdate:')) {\r\n                    patchEvent(el, key, prevValue, nextValue, parentComponent);\r\n                }\r\n            }\r\n            else if (shouldSetAsProp(el, key, nextValue, isSVG)) {\r\n                patchDOMProp(el, key, nextValue, prevChildren, parentComponent, parentSuspense, unmountChildren);\r\n            }\r\n            else {\r\n                // special case for <input v-model type=\"checkbox\"> with\r\n                // :true-value & :false-value\r\n                // store value as dom properties since non-string values will be\r\n                // stringified.\r\n                if (key === 'true-value') {\r\n                    el._trueValue = nextValue;\r\n                }\r\n                else if (key === 'false-value') {\r\n                    el._falseValue = nextValue;\r\n                }\r\n                patchAttr(el, key, nextValue, isSVG);\r\n            }\r\n            break;\r\n    }\r\n};\r\nfunction shouldSetAsProp(el, key, value, isSVG) {\r\n    if (isSVG) {\r\n        // most keys must be set as attribute on svg elements to work\r\n        // ...except innerHTML\r\n        if (key === 'innerHTML') {\r\n            return true;\r\n        }\r\n        // or native onclick with function values\r\n        if (key in el && nativeOnRE.test(key) && isFunction(value)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    // spellcheck and draggable are numerated attrs, however their\r\n    // corresponding DOM properties are actually booleans - this leads to\r\n    // setting it with a string \"false\" value leading it to be coerced to\r\n    // `true`, so we need to always treat them as attributes.\r\n    // Note that `contentEditable` doesn't have this problem: its DOM\r\n    // property is also enumerated string values.\r\n    if (key === 'spellcheck' || key === 'draggable') {\r\n        return false;\r\n    }\r\n    // #1526 <input list> must be set as attribute\r\n    if (key === 'list' && el.tagName === 'INPUT') {\r\n        return false;\r\n    }\r\n    // native onclick with string value, must be set as attribute\r\n    if (nativeOnRE.test(key) && isString(value)) {\r\n        return false;\r\n    }\r\n    return key in el;\r\n}\n\nfunction useCssModule(name = '$style') {\r\n    /* istanbul ignore else */\r\n    {\r\n        const instance = getCurrentInstance();\r\n        if (!instance) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`useCssModule must be called inside setup()`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        const modules = instance.type.__cssModules;\r\n        if (!modules) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`Current instance does not have CSS modules injected.`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        const mod = modules[name];\r\n        if (!mod) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Current instance does not have CSS module named \"${name}\".`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        return mod;\r\n    }\r\n}\n\nfunction useCssVars(getter, scoped = false) {\r\n    const instance = getCurrentInstance();\r\n    /* istanbul ignore next */\r\n    if (!instance) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`useCssVars is called without current active component instance.`);\r\n        return;\r\n    }\r\n    const prefix = scoped && instance.type.__scopeId\r\n        ? `${instance.type.__scopeId.replace(/^data-v-/, '')}-`\r\n        : ``;\r\n    onMounted(() => {\r\n        watchEffect(() => {\r\n            setVarsOnVNode(instance.subTree, getter(instance.proxy), prefix);\r\n        });\r\n    });\r\n}\r\nfunction setVarsOnVNode(vnode, vars, prefix) {\r\n    // drill down HOCs until it's a non-component vnode\r\n    while (vnode.component) {\r\n        vnode = vnode.component.subTree;\r\n    }\r\n    if (vnode.shapeFlag & 1 /* ELEMENT */ && vnode.el) {\r\n        const style = vnode.el.style;\r\n        for (const key in vars) {\r\n            style.setProperty(`--${prefix}${key}`, unref(vars[key]));\r\n        }\r\n    }\r\n    else if (vnode.type === Fragment) {\r\n        vnode.children.forEach(c => setVarsOnVNode(c, vars, prefix));\r\n    }\r\n}\n\nconst TRANSITION = 'transition';\r\nconst ANIMATION = 'animation';\r\n// DOM Transition is a higher-order-component based on the platform-agnostic\r\n// base Transition component, with DOM-specific logic.\r\nconst Transition = (props, { slots }) => h(BaseTransition, resolveTransitionProps(props), slots);\r\nTransition.displayName = 'Transition';\r\nconst DOMTransitionPropsValidators = {\r\n    name: String,\r\n    type: String,\r\n    css: {\r\n        type: Boolean,\r\n        default: true\r\n    },\r\n    duration: [String, Number, Object],\r\n    enterFromClass: String,\r\n    enterActiveClass: String,\r\n    enterToClass: String,\r\n    appearFromClass: String,\r\n    appearActiveClass: String,\r\n    appearToClass: String,\r\n    leaveFromClass: String,\r\n    leaveActiveClass: String,\r\n    leaveToClass: String\r\n};\r\nconst TransitionPropsValidators = (Transition.props = extend({}, BaseTransition.props, DOMTransitionPropsValidators));\r\nfunction resolveTransitionProps(rawProps) {\r\n    let { name = 'v', type, css = true, duration, enterFromClass = `${name}-enter-from`, enterActiveClass = `${name}-enter-active`, enterToClass = `${name}-enter-to`, appearFromClass = enterFromClass, appearActiveClass = enterActiveClass, appearToClass = enterToClass, leaveFromClass = `${name}-leave-from`, leaveActiveClass = `${name}-leave-active`, leaveToClass = `${name}-leave-to` } = rawProps;\r\n    const baseProps = {};\r\n    for (const key in rawProps) {\r\n        if (!(key in DOMTransitionPropsValidators)) {\r\n            baseProps[key] = rawProps[key];\r\n        }\r\n    }\r\n    if (!css) {\r\n        return baseProps;\r\n    }\r\n    const durations = normalizeDuration(duration);\r\n    const enterDuration = durations && durations[0];\r\n    const leaveDuration = durations && durations[1];\r\n    const { onBeforeEnter, onEnter, onEnterCancelled, onLeave, onLeaveCancelled, onBeforeAppear = onBeforeEnter, onAppear = onEnter, onAppearCancelled = onEnterCancelled } = baseProps;\r\n    const finishEnter = (el, isAppear, done) => {\r\n        removeTransitionClass(el, isAppear ? appearToClass : enterToClass);\r\n        removeTransitionClass(el, isAppear ? appearActiveClass : enterActiveClass);\r\n        done && done();\r\n    };\r\n    const finishLeave = (el, done) => {\r\n        removeTransitionClass(el, leaveToClass);\r\n        removeTransitionClass(el, leaveActiveClass);\r\n        done && done();\r\n    };\r\n    const makeEnterHook = (isAppear) => {\r\n        return (el, done) => {\r\n            const hook = isAppear ? onAppear : onEnter;\r\n            const resolve = () => finishEnter(el, isAppear, done);\r\n            hook && hook(el, resolve);\r\n            nextFrame(() => {\r\n                removeTransitionClass(el, isAppear ? appearFromClass : enterFromClass);\r\n                addTransitionClass(el, isAppear ? appearToClass : enterToClass);\r\n                if (!(hook && hook.length > 1)) {\r\n                    if (enterDuration) {\r\n                        setTimeout(resolve, enterDuration);\r\n                    }\r\n                    else {\r\n                        whenTransitionEnds(el, type, resolve);\r\n                    }\r\n                }\r\n            });\r\n        };\r\n    };\r\n    return extend(baseProps, {\r\n        onBeforeEnter(el) {\r\n            onBeforeEnter && onBeforeEnter(el);\r\n            addTransitionClass(el, enterActiveClass);\r\n            addTransitionClass(el, enterFromClass);\r\n        },\r\n        onBeforeAppear(el) {\r\n            onBeforeAppear && onBeforeAppear(el);\r\n            addTransitionClass(el, appearActiveClass);\r\n            addTransitionClass(el, appearFromClass);\r\n        },\r\n        onEnter: makeEnterHook(false),\r\n        onAppear: makeEnterHook(true),\r\n        onLeave(el, done) {\r\n            const resolve = () => finishLeave(el, done);\r\n            addTransitionClass(el, leaveActiveClass);\r\n            addTransitionClass(el, leaveFromClass);\r\n            nextFrame(() => {\r\n                removeTransitionClass(el, leaveFromClass);\r\n                addTransitionClass(el, leaveToClass);\r\n                if (!(onLeave && onLeave.length > 1)) {\r\n                    if (leaveDuration) {\r\n                        setTimeout(resolve, leaveDuration);\r\n                    }\r\n                    else {\r\n                        whenTransitionEnds(el, type, resolve);\r\n                    }\r\n                }\r\n            });\r\n            onLeave && onLeave(el, resolve);\r\n        },\r\n        onEnterCancelled(el) {\r\n            finishEnter(el, false);\r\n            onEnterCancelled && onEnterCancelled(el);\r\n        },\r\n        onAppearCancelled(el) {\r\n            finishEnter(el, true);\r\n            onAppearCancelled && onAppearCancelled(el);\r\n        },\r\n        onLeaveCancelled(el) {\r\n            finishLeave(el);\r\n            onLeaveCancelled && onLeaveCancelled(el);\r\n        }\r\n    });\r\n}\r\nfunction normalizeDuration(duration) {\r\n    if (duration == null) {\r\n        return null;\r\n    }\r\n    else if (isObject(duration)) {\r\n        return [NumberOf(duration.enter), NumberOf(duration.leave)];\r\n    }\r\n    else {\r\n        const n = NumberOf(duration);\r\n        return [n, n];\r\n    }\r\n}\r\nfunction NumberOf(val) {\r\n    const res = toNumber(val);\r\n    if ((process.env.NODE_ENV !== 'production'))\r\n        validateDuration(res);\r\n    return res;\r\n}\r\nfunction validateDuration(val) {\r\n    if (typeof val !== 'number') {\r\n        warn(`<transition> explicit duration is not a valid number - ` +\r\n            `got ${JSON.stringify(val)}.`);\r\n    }\r\n    else if (isNaN(val)) {\r\n        warn(`<transition> explicit duration is NaN - ` +\r\n            'the duration expression might be incorrect.');\r\n    }\r\n}\r\nfunction addTransitionClass(el, cls) {\r\n    cls.split(/\\s+/).forEach(c => c && el.classList.add(c));\r\n    (el._vtc ||\r\n        (el._vtc = new Set())).add(cls);\r\n}\r\nfunction removeTransitionClass(el, cls) {\r\n    cls.split(/\\s+/).forEach(c => c && el.classList.remove(c));\r\n    const { _vtc } = el;\r\n    if (_vtc) {\r\n        _vtc.delete(cls);\r\n        if (!_vtc.size) {\r\n            el._vtc = undefined;\r\n        }\r\n    }\r\n}\r\nfunction nextFrame(cb) {\r\n    requestAnimationFrame(() => {\r\n        requestAnimationFrame(cb);\r\n    });\r\n}\r\nfunction whenTransitionEnds(el, expectedType, cb) {\r\n    const { type, timeout, propCount } = getTransitionInfo(el, expectedType);\r\n    if (!type) {\r\n        return cb();\r\n    }\r\n    const endEvent = type + 'end';\r\n    let ended = 0;\r\n    const end = () => {\r\n        el.removeEventListener(endEvent, onEnd);\r\n        cb();\r\n    };\r\n    const onEnd = (e) => {\r\n        if (e.target === el) {\r\n            if (++ended >= propCount) {\r\n                end();\r\n            }\r\n        }\r\n    };\r\n    setTimeout(() => {\r\n        if (ended < propCount) {\r\n            end();\r\n        }\r\n    }, timeout + 1);\r\n    el.addEventListener(endEvent, onEnd);\r\n}\r\nfunction getTransitionInfo(el, expectedType) {\r\n    const styles = window.getComputedStyle(el);\r\n    // JSDOM may return undefined for transition properties\r\n    const getStyleProperties = (key) => (styles[key] || '').split(', ');\r\n    const transitionDelays = getStyleProperties(TRANSITION + 'Delay');\r\n    const transitionDurations = getStyleProperties(TRANSITION + 'Duration');\r\n    const transitionTimeout = getTimeout(transitionDelays, transitionDurations);\r\n    const animationDelays = getStyleProperties(ANIMATION + 'Delay');\r\n    const animationDurations = getStyleProperties(ANIMATION + 'Duration');\r\n    const animationTimeout = getTimeout(animationDelays, animationDurations);\r\n    let type = null;\r\n    let timeout = 0;\r\n    let propCount = 0;\r\n    /* istanbul ignore if */\r\n    if (expectedType === TRANSITION) {\r\n        if (transitionTimeout > 0) {\r\n            type = TRANSITION;\r\n            timeout = transitionTimeout;\r\n            propCount = transitionDurations.length;\r\n        }\r\n    }\r\n    else if (expectedType === ANIMATION) {\r\n        if (animationTimeout > 0) {\r\n            type = ANIMATION;\r\n            timeout = animationTimeout;\r\n            propCount = animationDurations.length;\r\n        }\r\n    }\r\n    else {\r\n        timeout = Math.max(transitionTimeout, animationTimeout);\r\n        type =\r\n            timeout > 0\r\n                ? transitionTimeout > animationTimeout\r\n                    ? TRANSITION\r\n                    : ANIMATION\r\n                : null;\r\n        propCount = type\r\n            ? type === TRANSITION\r\n                ? transitionDurations.length\r\n                : animationDurations.length\r\n            : 0;\r\n    }\r\n    const hasTransform = type === TRANSITION &&\r\n        /\\b(transform|all)(,|$)/.test(styles[TRANSITION + 'Property']);\r\n    return {\r\n        type,\r\n        timeout,\r\n        propCount,\r\n        hasTransform\r\n    };\r\n}\r\nfunction getTimeout(delays, durations) {\r\n    while (delays.length < durations.length) {\r\n        delays = delays.concat(delays);\r\n    }\r\n    return Math.max(...durations.map((d, i) => toMs(d) + toMs(delays[i])));\r\n}\r\n// Old versions of Chromium (below 61.0.3163.100) formats floating pointer\r\n// numbers in a locale-dependent way, using a comma instead of a dot.\r\n// If comma is not replaced with a dot, the input will be rounded down\r\n// (i.e. acting as a floor function) causing unexpected behaviors\r\nfunction toMs(s) {\r\n    return Number(s.slice(0, -1).replace(',', '.')) * 1000;\r\n}\n\nfunction toRaw(observed) {\r\n    return ((observed && toRaw(observed[\"__v_raw\" /* RAW */])) || observed);\r\n}\n\nconst positionMap = new WeakMap();\r\nconst newPositionMap = new WeakMap();\r\nconst TransitionGroupImpl = {\r\n    name: 'TransitionGroup',\r\n    props: extend({}, TransitionPropsValidators, {\r\n        tag: String,\r\n        moveClass: String\r\n    }),\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        const state = useTransitionState();\r\n        let prevChildren;\r\n        let children;\r\n        onUpdated(() => {\r\n            // children is guaranteed to exist after initial render\r\n            if (!prevChildren.length) {\r\n                return;\r\n            }\r\n            const moveClass = props.moveClass || `${props.name || 'v'}-move`;\r\n            if (!hasCSSTransform(prevChildren[0].el, instance.vnode.el, moveClass)) {\r\n                return;\r\n            }\r\n            // we divide the work into three loops to avoid mixing DOM reads and writes\r\n            // in each iteration - which helps prevent layout thrashing.\r\n            prevChildren.forEach(callPendingCbs);\r\n            prevChildren.forEach(recordPosition);\r\n            const movedChildren = prevChildren.filter(applyTranslation);\r\n            // force reflow to put everything in position\r\n            forceReflow();\r\n            movedChildren.forEach(c => {\r\n                const el = c.el;\r\n                const style = el.style;\r\n                addTransitionClass(el, moveClass);\r\n                style.transform = style.webkitTransform = style.transitionDuration = '';\r\n                const cb = (el._moveCb = (e) => {\r\n                    if (e && e.target !== el) {\r\n                        return;\r\n                    }\r\n                    if (!e || /transform$/.test(e.propertyName)) {\r\n                        el.removeEventListener('transitionend', cb);\r\n                        el._moveCb = null;\r\n                        removeTransitionClass(el, moveClass);\r\n                    }\r\n                });\r\n                el.addEventListener('transitionend', cb);\r\n            });\r\n        });\r\n        return () => {\r\n            const rawProps = toRaw(props);\r\n            const cssTransitionProps = resolveTransitionProps(rawProps);\r\n            const tag = rawProps.tag || Fragment;\r\n            prevChildren = children;\r\n            children = slots.default ? getTransitionRawChildren(slots.default()) : [];\r\n            for (let i = 0; i < children.length; i++) {\r\n                const child = children[i];\r\n                if (child.key != null) {\r\n                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`<TransitionGroup> children must be keyed.`);\r\n                }\r\n            }\r\n            if (prevChildren) {\r\n                for (let i = 0; i < prevChildren.length; i++) {\r\n                    const child = prevChildren[i];\r\n                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\r\n                    positionMap.set(child, child.el.getBoundingClientRect());\r\n                }\r\n            }\r\n            return createVNode(tag, null, children);\r\n        };\r\n    }\r\n};\r\n// remove mode props as TransitionGroup doesn't support it\r\ndelete TransitionGroupImpl.props.mode;\r\nconst TransitionGroup = TransitionGroupImpl;\r\nfunction callPendingCbs(c) {\r\n    const el = c.el;\r\n    if (el._moveCb) {\r\n        el._moveCb();\r\n    }\r\n    if (el._enterCb) {\r\n        el._enterCb();\r\n    }\r\n}\r\nfunction recordPosition(c) {\r\n    newPositionMap.set(c, c.el.getBoundingClientRect());\r\n}\r\nfunction applyTranslation(c) {\r\n    const oldPos = positionMap.get(c);\r\n    const newPos = newPositionMap.get(c);\r\n    const dx = oldPos.left - newPos.left;\r\n    const dy = oldPos.top - newPos.top;\r\n    if (dx || dy) {\r\n        const s = c.el.style;\r\n        s.transform = s.webkitTransform = `translate(${dx}px,${dy}px)`;\r\n        s.transitionDuration = '0s';\r\n        return c;\r\n    }\r\n}\r\n// this is put in a dedicated function to avoid the line from being treeshaken\r\nfunction forceReflow() {\r\n    return document.body.offsetHeight;\r\n}\r\nfunction hasCSSTransform(el, root, moveClass) {\r\n    // Detect whether an element with the move class applied has\r\n    // CSS transitions. Since the element may be inside an entering\r\n    // transition at this very moment, we make a clone of it and remove\r\n    // all other transition classes applied to ensure only the move class\r\n    // is applied.\r\n    const clone = el.cloneNode();\r\n    if (el._vtc) {\r\n        el._vtc.forEach(cls => {\r\n            cls.split(/\\s+/).forEach(c => c && clone.classList.remove(c));\r\n        });\r\n    }\r\n    moveClass.split(/\\s+/).forEach(c => c && clone.classList.add(c));\r\n    clone.style.display = 'none';\r\n    const container = (root.nodeType === 1\r\n        ? root\r\n        : root.parentNode);\r\n    container.appendChild(clone);\r\n    const { hasTransform } = getTransitionInfo(clone);\r\n    container.removeChild(clone);\r\n    return hasTransform;\r\n}\n\nconst getModelAssigner = (vnode) => {\r\n    const fn = vnode.props['onUpdate:modelValue'];\r\n    return isArray(fn) ? value => invokeArrayFns(fn, value) : fn;\r\n};\r\nfunction onCompositionStart(e) {\r\n    e.target.composing = true;\r\n}\r\nfunction onCompositionEnd(e) {\r\n    const target = e.target;\r\n    if (target.composing) {\r\n        target.composing = false;\r\n        trigger(target, 'input');\r\n    }\r\n}\r\nfunction trigger(el, type) {\r\n    const e = document.createEvent('HTMLEvents');\r\n    e.initEvent(type, true, true);\r\n    el.dispatchEvent(e);\r\n}\r\n// We are exporting the v-model runtime directly as vnode hooks so that it can\r\n// be tree-shaken in case v-model is never used.\r\nconst vModelText = {\r\n    beforeMount(el, { value, modifiers: { lazy, trim, number } }, vnode) {\r\n        el.value = value == null ? '' : value;\r\n        el._assign = getModelAssigner(vnode);\r\n        const castToNumber = number || el.type === 'number';\r\n        addEventListener(el, lazy ? 'change' : 'input', e => {\r\n            if (e.target.composing)\r\n                return;\r\n            let domValue = el.value;\r\n            if (trim) {\r\n                domValue = domValue.trim();\r\n            }\r\n            else if (castToNumber) {\r\n                domValue = toNumber(domValue);\r\n            }\r\n            el._assign(domValue);\r\n        });\r\n        if (trim) {\r\n            addEventListener(el, 'change', () => {\r\n                el.value = el.value.trim();\r\n            });\r\n        }\r\n        if (!lazy) {\r\n            addEventListener(el, 'compositionstart', onCompositionStart);\r\n            addEventListener(el, 'compositionend', onCompositionEnd);\r\n            // Safari < 10.2 & UIWebView doesn't fire compositionend when\r\n            // switching focus before confirming composition choice\r\n            // this also fixes the issue where some browsers e.g. iOS Chrome\r\n            // fires \"change\" instead of \"input\" on autocomplete.\r\n            addEventListener(el, 'change', onCompositionEnd);\r\n        }\r\n    },\r\n    beforeUpdate(el, { value, modifiers: { trim, number } }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        if (document.activeElement === el) {\r\n            if (trim && el.value.trim() === value) {\r\n                return;\r\n            }\r\n            if ((number || el.type === 'number') && toNumber(el.value) === value) {\r\n                return;\r\n            }\r\n        }\r\n        el.value = value == null ? '' : value;\r\n    }\r\n};\r\nconst vModelCheckbox = {\r\n    beforeMount(el, binding, vnode) {\r\n        setChecked(el, binding, vnode);\r\n        el._assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            const modelValue = el._modelValue;\r\n            const elementValue = getValue(el);\r\n            const checked = el.checked;\r\n            const assign = el._assign;\r\n            if (isArray(modelValue)) {\r\n                const index = looseIndexOf(modelValue, elementValue);\r\n                const found = index !== -1;\r\n                if (checked && !found) {\r\n                    assign(modelValue.concat(elementValue));\r\n                }\r\n                else if (!checked && found) {\r\n                    const filtered = [...modelValue];\r\n                    filtered.splice(index, 1);\r\n                    assign(filtered);\r\n                }\r\n            }\r\n            else {\r\n                assign(getCheckboxValue(el, checked));\r\n            }\r\n        });\r\n    },\r\n    beforeUpdate(el, binding, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        setChecked(el, binding, vnode);\r\n    }\r\n};\r\nfunction setChecked(el, { value, oldValue }, vnode) {\r\n    el._modelValue = value;\r\n    if (isArray(value)) {\r\n        el.checked = looseIndexOf(value, vnode.props.value) > -1;\r\n    }\r\n    else if (value !== oldValue) {\r\n        el.checked = looseEqual(value, getCheckboxValue(el, true));\r\n    }\r\n}\r\nconst vModelRadio = {\r\n    beforeMount(el, { value }, vnode) {\r\n        el.checked = looseEqual(value, vnode.props.value);\r\n        el._assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            el._assign(getValue(el));\r\n        });\r\n    },\r\n    beforeUpdate(el, { value, oldValue }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        if (value !== oldValue) {\r\n            el.checked = looseEqual(value, vnode.props.value);\r\n        }\r\n    }\r\n};\r\nconst vModelSelect = {\r\n    // use mounted & updated because <select> relies on its children <option>s.\r\n    mounted(el, { value }, vnode) {\r\n        setSelected(el, value);\r\n        el._assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            const selectedVal = Array.prototype.filter\r\n                .call(el.options, (o) => o.selected)\r\n                .map(getValue);\r\n            el._assign(el.multiple ? selectedVal : selectedVal[0]);\r\n        });\r\n    },\r\n    beforeUpdate(el, _binding, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n    },\r\n    updated(el, { value }) {\r\n        setSelected(el, value);\r\n    }\r\n};\r\nfunction setSelected(el, value) {\r\n    const isMultiple = el.multiple;\r\n    if (isMultiple && !isArray(value)) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`<select multiple v-model> expects an Array value for its binding, ` +\r\n                `but got ${Object.prototype.toString.call(value).slice(8, -1)}.`);\r\n        return;\r\n    }\r\n    for (let i = 0, l = el.options.length; i < l; i++) {\r\n        const option = el.options[i];\r\n        const optionValue = getValue(option);\r\n        if (isMultiple) {\r\n            option.selected = looseIndexOf(value, optionValue) > -1;\r\n        }\r\n        else {\r\n            if (looseEqual(getValue(option), value)) {\r\n                el.selectedIndex = i;\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    if (!isMultiple) {\r\n        el.selectedIndex = -1;\r\n    }\r\n}\r\n// retrieve raw value set via :value bindings\r\nfunction getValue(el) {\r\n    return '_value' in el ? el._value : el.value;\r\n}\r\n// retrieve raw value for true-value and false-value set via :true-value or :false-value bindings\r\nfunction getCheckboxValue(el, checked) {\r\n    const key = checked ? '_trueValue' : '_falseValue';\r\n    return key in el ? el[key] : checked;\r\n}\r\nconst vModelDynamic = {\r\n    beforeMount(el, binding, vnode) {\r\n        callModelHook(el, binding, vnode, null, 'beforeMount');\r\n    },\r\n    mounted(el, binding, vnode) {\r\n        callModelHook(el, binding, vnode, null, 'mounted');\r\n    },\r\n    beforeUpdate(el, binding, vnode, prevVNode) {\r\n        callModelHook(el, binding, vnode, prevVNode, 'beforeUpdate');\r\n    },\r\n    updated(el, binding, vnode, prevVNode) {\r\n        callModelHook(el, binding, vnode, prevVNode, 'updated');\r\n    }\r\n};\r\nfunction callModelHook(el, binding, vnode, prevVNode, hook) {\r\n    let modelToUse;\r\n    switch (el.tagName) {\r\n        case 'SELECT':\r\n            modelToUse = vModelSelect;\r\n            break;\r\n        case 'TEXTAREA':\r\n            modelToUse = vModelText;\r\n            break;\r\n        default:\r\n            switch (el.type) {\r\n                case 'checkbox':\r\n                    modelToUse = vModelCheckbox;\r\n                    break;\r\n                case 'radio':\r\n                    modelToUse = vModelRadio;\r\n                    break;\r\n                default:\r\n                    modelToUse = vModelText;\r\n            }\r\n    }\r\n    const fn = modelToUse[hook];\r\n    fn && fn(el, binding, vnode, prevVNode);\r\n}\n\nconst systemModifiers = ['ctrl', 'shift', 'alt', 'meta'];\r\nconst modifierGuards = {\r\n    stop: e => e.stopPropagation(),\r\n    prevent: e => e.preventDefault(),\r\n    self: e => e.target !== e.currentTarget,\r\n    ctrl: e => !e.ctrlKey,\r\n    shift: e => !e.shiftKey,\r\n    alt: e => !e.altKey,\r\n    meta: e => !e.metaKey,\r\n    left: e => 'button' in e && e.button !== 0,\r\n    middle: e => 'button' in e && e.button !== 1,\r\n    right: e => 'button' in e && e.button !== 2,\r\n    exact: (e, modifiers) => systemModifiers.some(m => e[`${m}Key`] && !modifiers.includes(m))\r\n};\r\n/**\r\n * @private\r\n */\r\nconst withModifiers = (fn, modifiers) => {\r\n    return (event, ...args) => {\r\n        for (let i = 0; i < modifiers.length; i++) {\r\n            const guard = modifierGuards[modifiers[i]];\r\n            if (guard && guard(event, modifiers))\r\n                return;\r\n        }\r\n        return fn(event, ...args);\r\n    };\r\n};\r\n// Kept for 2.x compat.\r\n// Note: IE11 compat for `spacebar` and `del` is removed for now.\r\nconst keyNames = {\r\n    esc: 'escape',\r\n    space: ' ',\r\n    up: 'arrow-up',\r\n    left: 'arrow-left',\r\n    right: 'arrow-right',\r\n    down: 'arrow-down',\r\n    delete: 'backspace'\r\n};\r\n/**\r\n * @private\r\n */\r\nconst withKeys = (fn, modifiers) => {\r\n    return (event) => {\r\n        if (!('key' in event))\r\n            return;\r\n        const eventKey = hyphenate(event.key);\r\n        if (\r\n        // None of the provided key modifiers match the current event key\r\n        !modifiers.some(k => k === eventKey || keyNames[k] === eventKey)) {\r\n            return;\r\n        }\r\n        return fn(event);\r\n    };\r\n};\n\nconst vShow = {\r\n    beforeMount(el, { value }, { transition }) {\r\n        el._vod = el.style.display === 'none' ? '' : el.style.display;\r\n        if (transition && value) {\r\n            transition.beforeEnter(el);\r\n        }\r\n        else {\r\n            setDisplay(el, value);\r\n        }\r\n    },\r\n    mounted(el, { value }, { transition }) {\r\n        if (transition && value) {\r\n            transition.enter(el);\r\n        }\r\n    },\r\n    updated(el, { value, oldValue }, { transition }) {\r\n        if (!value === !oldValue)\r\n            return;\r\n        if (transition) {\r\n            if (value) {\r\n                transition.beforeEnter(el);\r\n                setDisplay(el, true);\r\n                transition.enter(el);\r\n            }\r\n            else {\r\n                transition.leave(el, () => {\r\n                    setDisplay(el, false);\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            setDisplay(el, value);\r\n        }\r\n    },\r\n    beforeUnmount(el, { value }) {\r\n        setDisplay(el, value);\r\n    }\r\n};\r\nfunction setDisplay(el, value) {\r\n    el.style.display = value ? el._vod : 'none';\r\n}\n\nconst rendererOptions = extend({ patchProp, forcePatchProp }, nodeOps);\r\n// lazy create the renderer - this makes core renderer logic tree-shakable\r\n// in case the user only imports reactivity utilities from Vue.\r\nlet renderer;\r\nlet enabledHydration = false;\r\nfunction ensureRenderer() {\r\n    return renderer || (renderer = createRenderer(rendererOptions));\r\n}\r\nfunction ensureHydrationRenderer() {\r\n    renderer = enabledHydration\r\n        ? renderer\r\n        : createHydrationRenderer(rendererOptions);\r\n    enabledHydration = true;\r\n    return renderer;\r\n}\r\n// use explicit type casts here to avoid import() calls in rolled-up d.ts\r\nconst render = ((...args) => {\r\n    ensureRenderer().render(...args);\r\n});\r\nconst hydrate = ((...args) => {\r\n    ensureHydrationRenderer().hydrate(...args);\r\n});\r\nconst createApp = ((...args) => {\r\n    const app = ensureRenderer().createApp(...args);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        injectNativeTagCheck(app);\r\n    }\r\n    const { mount } = app;\r\n    app.mount = (containerOrSelector) => {\r\n        const container = normalizeContainer(containerOrSelector);\r\n        if (!container)\r\n            return;\r\n        const component = app._component;\r\n        if (!isFunction(component) && !component.render && !component.template) {\r\n            component.template = container.innerHTML;\r\n        }\r\n        // clear content before mounting\r\n        container.innerHTML = '';\r\n        const proxy = mount(container);\r\n        container.removeAttribute('v-cloak');\r\n        return proxy;\r\n    };\r\n    return app;\r\n});\r\nconst createSSRApp = ((...args) => {\r\n    const app = ensureHydrationRenderer().createApp(...args);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        injectNativeTagCheck(app);\r\n    }\r\n    const { mount } = app;\r\n    app.mount = (containerOrSelector) => {\r\n        const container = normalizeContainer(containerOrSelector);\r\n        if (container) {\r\n            return mount(container, true);\r\n        }\r\n    };\r\n    return app;\r\n});\r\nfunction injectNativeTagCheck(app) {\r\n    // Inject `isNativeTag`\r\n    // this is used for component name validation (dev only)\r\n    Object.defineProperty(app.config, 'isNativeTag', {\r\n        value: (tag) => isHTMLTag(tag) || isSVGTag(tag),\r\n        writable: false\r\n    });\r\n}\r\nfunction normalizeContainer(container) {\r\n    if (isString(container)) {\r\n        const res = document.querySelector(container);\r\n        if ((process.env.NODE_ENV !== 'production') && !res) {\r\n            warn(`Failed to mount app: mount target selector returned null.`);\r\n        }\r\n        return res;\r\n    }\r\n    return container;\r\n}\n\nexport { Transition, TransitionGroup, createApp, createSSRApp, hydrate, render, useCssModule, useCssVars, vModelCheckbox, vModelDynamic, vModelRadio, vModelSelect, vModelText, vShow, withKeys, withModifiers };\n","/*!\n  * vue-router v4.0.0-beta.1\n  * (c) 2020 Eduardo San Martin Morote\n  * @license MIT\n  */\nimport { getCurrentInstance, warn as warn$1, inject, computed, unref, defineComponent, reactive, h, provide, ref, shallowRef, nextTick } from 'vue';\n\nconst hasSymbol = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\r\nconst PolySymbol = (name) => \r\n// vr = vue router\r\nhasSymbol\r\n    ? Symbol( '[vue-router]: ' + name )\r\n    : ( '[vue-router]: ' ) + name;\r\n// rvlm = Router View Location Matched\r\nconst matchedRouteKey = PolySymbol( 'router view location matched' );\r\n// rvd = Router View Depth\r\nconst viewDepthKey = PolySymbol( 'router view depth' );\r\n// r = router\r\nconst routerKey = PolySymbol( 'router' );\r\n// rt = route location\r\nconst routeLocationKey = PolySymbol( 'route location' );\n\nconst isBrowser = typeof window !== 'undefined';\n\nfunction isESModule(obj) {\r\n    return obj.__esModule || (hasSymbol && obj[Symbol.toStringTag] === 'Module');\r\n}\r\nconst assign = Object.assign;\r\nfunction applyToParams(fn, params) {\r\n    const newParams = {};\r\n    for (const key in params) {\r\n        const value = params[key];\r\n        newParams[key] = Array.isArray(value) ? value.map(fn) : fn(value);\r\n    }\r\n    return newParams;\r\n}\r\nlet noop = () => { };\n\nconst TRAILING_SLASH_RE = /\\/$/;\r\nconst removeTrailingSlash = (path) => path.replace(TRAILING_SLASH_RE, '');\r\n/**\r\n * Transforms an URI into a normalized history location\r\n *\r\n * @param parseQuery\r\n * @param location - URI to normalize\r\n * @param currentLocation - current absolute location. Allows resolving relative\r\n * paths. Must start with `/`. Defaults to `/`\r\n * @returns a normalized history location\r\n */\r\nfunction parseURL(parseQuery, location, currentLocation = '/') {\r\n    let path, query = {}, searchString = '', hash = '';\r\n    // Could use URL and URLSearchParams but IE 11 doesn't support it\r\n    const searchPos = location.indexOf('?');\r\n    const hashPos = location.indexOf('#', searchPos > -1 ? searchPos : 0);\r\n    if (searchPos > -1) {\r\n        path = location.slice(0, searchPos);\r\n        searchString = location.slice(searchPos + 1, hashPos > -1 ? hashPos : location.length);\r\n        query = parseQuery(searchString);\r\n    }\r\n    if (hashPos > -1) {\r\n        path = path || location.slice(0, hashPos);\r\n        // keep the # character\r\n        hash = location.slice(hashPos, location.length);\r\n    }\r\n    // no search and no query\r\n    path = path != null ? path : location;\r\n    // empty path means a relative query or hash `?foo=f`, `#thing`\r\n    if (!path) {\r\n        path = currentLocation + path;\r\n    }\r\n    else if (path[0] !== '/') {\r\n        // relative to current location. Currently we only support simple relative\r\n        // but no `..`, `.`, or complex like `../.././..`. We will always leave the\r\n        // leading slash so we can safely append path\r\n        path = currentLocation.replace(/[^\\/]*$/, '') + path;\r\n    }\r\n    return {\r\n        fullPath: path + (searchString && '?') + searchString + hash,\r\n        path,\r\n        query,\r\n        hash,\r\n    };\r\n}\r\n/**\r\n * Stringifies a URL object\r\n *\r\n * @param stringifyQuery\r\n * @param location\r\n */\r\nfunction stringifyURL(stringifyQuery, location) {\r\n    let query = location.query ? stringifyQuery(location.query) : '';\r\n    return location.path + (query && '?') + query + (location.hash || '');\r\n}\r\n/**\r\n * Strips off the base from the beginning of a location.pathname in a non\r\n * case-sensitive way.\r\n *\r\n * @param pathname - location.pathname\r\n * @param base - base to strip off\r\n */\r\nfunction stripBase(pathname, base) {\r\n    // no base or base is not found at the beginning\r\n    if (!base || pathname.toLowerCase().indexOf(base.toLowerCase()))\r\n        return pathname;\r\n    return pathname.slice(base.length) || '/';\r\n}\r\n/**\r\n * Checks if two RouteLocation are equal. This means that both locations are\r\n * pointing towards the same {@link RouteRecord} and that all `params`, `query`\r\n * parameters and `hash` are the same\r\n *\r\n * @param a first {@link RouteLocation}\r\n * @param b second {@link RouteLocation}\r\n */\r\nfunction isSameRouteLocation(stringifyQuery, a, b) {\r\n    let aLastIndex = a.matched.length - 1;\r\n    let bLastIndex = b.matched.length - 1;\r\n    return (aLastIndex > -1 &&\r\n        aLastIndex === bLastIndex &&\r\n        isSameRouteRecord(a.matched[aLastIndex], b.matched[bLastIndex]) &&\r\n        isSameRouteLocationParams(a.params, b.params) &&\r\n        stringifyQuery(a.query) === stringifyQuery(b.query) &&\r\n        a.hash === b.hash);\r\n}\r\n/**\r\n * Check if two `RouteRecords` are equal. Takes into account aliases: they are\r\n * considered equal to the `RouteRecord` they are aliasing.\r\n *\r\n * @param a first {@link RouteRecord}\r\n * @param b second {@link RouteRecord}\r\n */\r\nfunction isSameRouteRecord(a, b) {\r\n    // since the original record has an undefined value for aliasOf\r\n    // but all aliases point to the original record, this will always compare\r\n    // the original record\r\n    return (a.aliasOf || a) === (b.aliasOf || b);\r\n}\r\nfunction isSameRouteLocationParams(a, b) {\r\n    if (Object.keys(a).length !== Object.keys(b).length)\r\n        return false;\r\n    for (let key in a) {\r\n        if (!isSameRouteLocationParamsValue(a[key], b[key]))\r\n            return false;\r\n    }\r\n    return true;\r\n}\r\nfunction isSameRouteLocationParamsValue(a, b) {\r\n    return Array.isArray(a)\r\n        ? isEquivalentArray(a, b)\r\n        : Array.isArray(b)\r\n            ? isEquivalentArray(b, a)\r\n            : a === b;\r\n}\r\n/**\r\n * Check if two arrays are the same or if an array with one single entry is the\r\n * same as another primitive value. Used to check query and parameters\r\n *\r\n * @param a array of values\r\n * @param b array of values or a single value\r\n */\r\nfunction isEquivalentArray(a, b) {\r\n    return Array.isArray(b)\r\n        ? a.length === b.length && a.every((value, i) => value === b[i])\r\n        : a.length === 1 && a[0] === b;\r\n}\n\nvar NavigationType;\r\n(function (NavigationType) {\r\n    NavigationType[\"pop\"] = \"pop\";\r\n    NavigationType[\"push\"] = \"push\";\r\n})(NavigationType || (NavigationType = {}));\r\nvar NavigationDirection;\r\n(function (NavigationDirection) {\r\n    NavigationDirection[\"back\"] = \"back\";\r\n    NavigationDirection[\"forward\"] = \"forward\";\r\n    NavigationDirection[\"unknown\"] = \"\";\r\n})(NavigationDirection || (NavigationDirection = {}));\r\n/**\r\n * Starting location for Histories\r\n */\r\nconst START = '';\r\n// Generic utils\r\n/**\r\n * Normalizes a base by removing any trailing slash and reading the base tag if\r\n * present.\r\n *\r\n * @param base - base to normalize\r\n */\r\nfunction normalizeBase(base) {\r\n    if (!base) {\r\n        if (isBrowser) {\r\n            // respect <base> tag\r\n            const baseEl = document.querySelector('base');\r\n            base = (baseEl && baseEl.getAttribute('href')) || '/';\r\n            // strip full URL origin\r\n            base = base.replace(/^\\w+:\\/\\/[^\\/]+/, '');\r\n        }\r\n        else {\r\n            base = '/';\r\n        }\r\n    }\r\n    // ensure leading slash when it was removed by the regex above avoid leading\r\n    // slash with hash because the file could be read from the disk like file://\r\n    // and the leading slash would cause problems\r\n    if (base[0] !== '/' && base[0] !== '#')\r\n        base = '/' + base;\r\n    // remove the trailing slash so all other method can just do `base + fullPath`\r\n    // to build an href\r\n    return removeTrailingSlash(base);\r\n}\r\n// remove any character before the hash\r\nconst BEFORE_HASH_RE = /^[^#]+#/;\r\nfunction createHref(base, location) {\r\n    return base.replace(BEFORE_HASH_RE, '#') + location;\r\n}\n\nfunction warn(msg, ...args) {\r\n    console.warn('[Vue Router warn]: ' + msg, ...args);\r\n}\n\nfunction getElementPosition(el, offset) {\r\n    const docRect = document.documentElement.getBoundingClientRect();\r\n    const elRect = el.getBoundingClientRect();\r\n    return {\r\n        behavior: offset.behavior,\r\n        left: elRect.left - docRect.left - (offset.left || 0),\r\n        top: elRect.top - docRect.top - (offset.top || 0),\r\n    };\r\n}\r\nconst computeScrollPosition = () => ({\r\n    left: window.pageXOffset,\r\n    top: window.pageYOffset,\r\n});\r\nfunction scrollToPosition(position) {\r\n    let scrollToOptions;\r\n    if ('el' in position) {\r\n        let positionEl = position.el;\r\n        const isIdSelector = typeof positionEl === 'string' && positionEl.startsWith('#');\r\n        /**\r\n         * `id`s can accept pretty much any characters, including CSS combinators\r\n         * like `>` or `~`. It's still possible to retrieve elements using\r\n         * `document.getElementById('~')` but it needs to be escaped when using\r\n         * `document.querySelector('#\\\\~')` for it to be valid. The only\r\n         * requirements for `id`s are them to be unique on the page and to not be\r\n         * empty (`id=\"\"`). Because of that, when passing an id selector, it should\r\n         * be properly escaped for it to work with `querySelector`. We could check\r\n         * for the id selector to be simple (no CSS combinators `+ >~`) but that\r\n         * would make things inconsistent since they are valid characters for an\r\n         * `id` but would need to be escaped when using `querySelector`, breaking\r\n         * their usage and ending up in no selector returned. Selectors need to be\r\n         * escaped:\r\n         *\r\n         * - `#1-thing` becomes `#\\31 -thing`\r\n         * - `#with~symbols` becomes `#with\\\\~symbols`\r\n         *\r\n         * - More information about  the topic can be found at\r\n         *   https://mathiasbynens.be/notes/html5-id-class.\r\n         * - Practical example: https://mathiasbynens.be/demo/html5-id\r\n         */\r\n        if ( typeof position.el === 'string') {\r\n            if (!isIdSelector || !document.getElementById(position.el.slice(1))) {\r\n                try {\r\n                    let foundEl = document.querySelector(position.el);\r\n                    if (isIdSelector && foundEl) {\r\n                        warn(`The selector \"${position.el}\" should be passed as \"el: document.querySelector('${position.el}')\" because it starts with \"#\".`);\r\n                        // return to avoid other warnings\r\n                        return;\r\n                    }\r\n                }\r\n                catch {\r\n                    warn(`The selector \"${position.el}\" is invalid. If you are using an id selector, make sure to escape it. You can find more information about escaping characters in selectors at https://mathiasbynens.be/notes/css-escapes or use CSS.escape (https://developer.mozilla.org/en-US/docs/Web/API/CSS/escape).`);\r\n                    // return to avoid other warnings\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        const el = typeof positionEl === 'string'\r\n            ? isIdSelector\r\n                ? document.getElementById(positionEl.slice(1))\r\n                : document.querySelector(positionEl)\r\n            : positionEl;\r\n        if (!el) {\r\n             warn(`Couldn't find element using selector \"${position.el}\"`);\r\n            return;\r\n        }\r\n        scrollToOptions = getElementPosition(el, position);\r\n    }\r\n    else {\r\n        scrollToOptions = position;\r\n    }\r\n    if ('scrollBehavior' in document.documentElement.style)\r\n        window.scrollTo(scrollToOptions);\r\n    else {\r\n        window.scrollTo(scrollToOptions.left != null ? scrollToOptions.left : window.pageXOffset, scrollToOptions.top != null ? scrollToOptions.top : window.pageYOffset);\r\n    }\r\n}\r\nfunction getScrollKey(path, delta) {\r\n    const position = history.state ? history.state.position - delta : -1;\r\n    return position + path;\r\n}\r\nconst scrollPositions = new Map();\r\nfunction saveScrollPosition(key, scrollPosition) {\r\n    scrollPositions.set(key, scrollPosition);\r\n}\r\nfunction getSavedScrollPosition(key) {\r\n    const scroll = scrollPositions.get(key);\r\n    // consume it so it's not used again\r\n    scrollPositions.delete(key);\r\n    return scroll;\r\n}\r\n// TODO: RFC about how to save scroll position\r\n/**\r\n * ScrollBehavior instance used by the router to compute and restore the scroll\r\n * position when navigating.\r\n */\r\n// export interface ScrollHandler<ScrollPositionEntry extends HistoryStateValue, ScrollPosition extends ScrollPositionEntry> {\r\n//   // returns a scroll position that can be saved in history\r\n//   compute(): ScrollPositionEntry\r\n//   // can take an extended ScrollPositionEntry\r\n//   scroll(position: ScrollPosition): void\r\n// }\r\n// export const scrollHandler: ScrollHandler<ScrollPosition> = {\r\n//   compute: computeScroll,\r\n//   scroll: scrollToPosition,\r\n// }\n\nlet createBaseLocation = () => location.protocol + '//' + location.host;\r\n/**\r\n * Creates a normalized history location from a window.location object\r\n * @param location\r\n */\r\nfunction createCurrentLocation(base, location) {\r\n    const { pathname, search, hash } = location;\r\n    // allows hash based url\r\n    const hashPos = base.indexOf('#');\r\n    if (hashPos > -1) {\r\n        // prepend the starting slash to hash so the url starts with /#\r\n        let pathFromHash = hash.slice(1);\r\n        if (pathFromHash[0] !== '/')\r\n            pathFromHash = '/' + pathFromHash;\r\n        return stripBase(pathFromHash, '');\r\n    }\r\n    const path = stripBase(pathname, base);\r\n    return path + search + hash;\r\n}\r\nfunction useHistoryListeners(base, historyState, location, replace) {\r\n    let listeners = [];\r\n    let teardowns = [];\r\n    // TODO: should it be a stack? a Dict. Check if the popstate listener\r\n    // can trigger twice\r\n    let pauseState = null;\r\n    const popStateHandler = ({ state, }) => {\r\n        const to = createCurrentLocation(base, window.location);\r\n        const from = location.value;\r\n        const fromState = historyState.value;\r\n        let delta = 0;\r\n        if (state) {\r\n            location.value = to;\r\n            historyState.value = state;\r\n            // ignore the popstate and reset the pauseState\r\n            if (pauseState && pauseState === from) {\r\n                pauseState = null;\r\n                return;\r\n            }\r\n            delta = fromState ? state.position - fromState.position : 0;\r\n        }\r\n        else {\r\n            replace(to);\r\n        }\r\n        // console.log({ deltaFromCurrent })\r\n        // Here we could also revert the navigation by calling history.go(-delta)\r\n        // this listener will have to be adapted to not trigger again and to wait for the url\r\n        // to be updated before triggering the listeners. Some kind of validation function would also\r\n        // need to be passed to the listeners so the navigation can be accepted\r\n        // call all listeners\r\n        listeners.forEach(listener => {\r\n            listener(location.value, from, {\r\n                delta,\r\n                type: NavigationType.pop,\r\n                direction: delta\r\n                    ? delta > 0\r\n                        ? NavigationDirection.forward\r\n                        : NavigationDirection.back\r\n                    : NavigationDirection.unknown,\r\n            });\r\n        });\r\n    };\r\n    function pauseListeners() {\r\n        pauseState = location.value;\r\n    }\r\n    function listen(callback) {\r\n        // setup the listener and prepare teardown callbacks\r\n        listeners.push(callback);\r\n        const teardown = () => {\r\n            const index = listeners.indexOf(callback);\r\n            if (index > -1)\r\n                listeners.splice(index, 1);\r\n        };\r\n        teardowns.push(teardown);\r\n        return teardown;\r\n    }\r\n    function beforeUnloadListener() {\r\n        const { history } = window;\r\n        if (!history.state)\r\n            return;\r\n        history.replaceState(assign({}, history.state, { scroll: computeScrollPosition() }), '');\r\n    }\r\n    function destroy() {\r\n        for (const teardown of teardowns)\r\n            teardown();\r\n        teardowns = [];\r\n        window.removeEventListener('popstate', popStateHandler);\r\n        window.removeEventListener('beforeunload', beforeUnloadListener);\r\n    }\r\n    // setup the listeners and prepare teardown callbacks\r\n    window.addEventListener('popstate', popStateHandler);\r\n    window.addEventListener('beforeunload', beforeUnloadListener);\r\n    return {\r\n        pauseListeners,\r\n        listen,\r\n        destroy,\r\n    };\r\n}\r\n/**\r\n * Creates a state object\r\n */\r\nfunction buildState(back, current, forward, replaced = false, computeScroll = false) {\r\n    return {\r\n        back,\r\n        current,\r\n        forward,\r\n        replaced,\r\n        position: window.history.length,\r\n        scroll: computeScroll ? computeScrollPosition() : null,\r\n    };\r\n}\r\nfunction useHistoryStateNavigation(base) {\r\n    const { history } = window;\r\n    // private variables\r\n    let location = {\r\n        value: createCurrentLocation(base, window.location),\r\n    };\r\n    let historyState = { value: history.state };\r\n    // build current history entry as this is a fresh navigation\r\n    if (!historyState.value) {\r\n        changeLocation(location.value, {\r\n            back: null,\r\n            current: location.value,\r\n            forward: null,\r\n            // the length is off by one, we need to decrease it\r\n            position: history.length - 1,\r\n            replaced: true,\r\n            // don't add a scroll as the user may have an anchor and we want\r\n            // scrollBehavior to be triggered without a saved position\r\n            scroll: null,\r\n        }, true);\r\n    }\r\n    function changeLocation(to, state, replace) {\r\n        const url = createBaseLocation() + base + to;\r\n        try {\r\n            // BROWSER QUIRK\r\n            // NOTE: Safari throws a SecurityError when calling this function 100 times in 30 seconds\r\n            history[replace ? 'replaceState' : 'pushState'](state, '', url);\r\n            historyState.value = state;\r\n        }\r\n        catch (err) {\r\n            warn('Error with push/replace State', err);\r\n            // Force the navigation, this also resets the call count\r\n            window.location[replace ? 'replace' : 'assign'](url);\r\n        }\r\n    }\r\n    function replace(to, data) {\r\n        const state = assign({}, history.state, buildState(historyState.value.back, \r\n        // keep back and forward entries but override current position\r\n        to, historyState.value.forward, true), data, { position: historyState.value.position });\r\n        changeLocation(to, state, true);\r\n        location.value = to;\r\n    }\r\n    function push(to, data) {\r\n        // Add to current entry the information of where we are going\r\n        // as well as saving the current position\r\n        const currentState = assign({}, history.state, {\r\n            forward: to,\r\n            scroll: computeScrollPosition(),\r\n        });\r\n        changeLocation(currentState.current, currentState, true);\r\n        const state = assign({}, buildState(location.value, to, null), {\r\n            position: currentState.position + 1,\r\n        }, data);\r\n        changeLocation(to, state, false);\r\n        location.value = to;\r\n    }\r\n    return {\r\n        location,\r\n        state: historyState,\r\n        push,\r\n        replace,\r\n    };\r\n}\r\nfunction createWebHistory(base) {\r\n    base = normalizeBase(base);\r\n    const historyNavigation = useHistoryStateNavigation(base);\r\n    const historyListeners = useHistoryListeners(base, historyNavigation.state, historyNavigation.location, historyNavigation.replace);\r\n    function go(delta, triggerListeners = true) {\r\n        if (!triggerListeners)\r\n            historyListeners.pauseListeners();\r\n        history.go(delta);\r\n    }\r\n    const routerHistory = assign({\r\n        // it's overridden right after\r\n        location: '',\r\n        base,\r\n        go,\r\n        createHref: createHref.bind(null, base),\r\n    }, historyNavigation, historyListeners);\r\n    Object.defineProperty(routerHistory, 'location', {\r\n        get: () => historyNavigation.location.value,\r\n    });\r\n    Object.defineProperty(routerHistory, 'state', {\r\n        get: () => historyNavigation.state.value,\r\n    });\r\n    return routerHistory;\r\n}\n\n// TODO: verify base is working for SSR\r\n/**\r\n * Creates a in-memory based history. The main purpose of this history is to handle SSR. It starts in a special location that is nowhere.\r\n * It's up to the user to replace that location with the starter location.\r\n * @param base - Base applied to all urls, defaults to '/'\r\n * @returns a history object that can be passed to the router constructor\r\n */\r\nfunction createMemoryHistory(base = '') {\r\n    let listeners = [];\r\n    let queue = [START];\r\n    let position = 0;\r\n    function setLocation(location) {\r\n        position++;\r\n        if (position === queue.length) {\r\n            // we are at the end, we can simply append a new entry\r\n            queue.push(location);\r\n        }\r\n        else {\r\n            // we are in the middle, we remove everything from here in the queue\r\n            queue.splice(position);\r\n            queue.push(location);\r\n        }\r\n    }\r\n    function triggerListeners(to, from, { direction, delta }) {\r\n        const info = {\r\n            direction,\r\n            delta,\r\n            type: NavigationType.pop,\r\n        };\r\n        for (let callback of listeners) {\r\n            callback(to, from, info);\r\n        }\r\n    }\r\n    const routerHistory = {\r\n        // rewritten by Object.defineProperty\r\n        location: START,\r\n        state: {},\r\n        base,\r\n        createHref: createHref.bind(null, base),\r\n        replace(to) {\r\n            // remove current entry and decrement position\r\n            queue.splice(position--, 1);\r\n            setLocation(to);\r\n        },\r\n        push(to, data) {\r\n            setLocation(to);\r\n        },\r\n        listen(callback) {\r\n            listeners.push(callback);\r\n            return () => {\r\n                const index = listeners.indexOf(callback);\r\n                if (index > -1)\r\n                    listeners.splice(index, 1);\r\n            };\r\n        },\r\n        destroy() {\r\n            listeners = [];\r\n        },\r\n        go(delta, shouldTrigger = true) {\r\n            const from = this.location;\r\n            const direction = \r\n            // we are considering delta === 0 going forward, but in abstract mode\r\n            // using 0 for the delta doesn't make sense like it does in html5 where\r\n            // it reloads the page\r\n            delta < 0 ? NavigationDirection.back : NavigationDirection.forward;\r\n            position = Math.max(0, Math.min(position + delta, queue.length - 1));\r\n            if (shouldTrigger) {\r\n                triggerListeners(this.location, from, {\r\n                    direction,\r\n                    delta,\r\n                });\r\n            }\r\n        },\r\n    };\r\n    Object.defineProperty(routerHistory, 'location', {\r\n        get: () => queue[position],\r\n    });\r\n    return routerHistory;\r\n}\n\n/**\r\n * Creates a hash history.\r\n *\r\n * @param base - optional base to provide. Defaults to `location.pathname` or\r\n * `/` if at root. If there is a `base` tag in the `head`, its value will be\r\n * **ignored**.\r\n *\r\n * @example\r\n * ```js\r\n * // at https://example.com/folder\r\n * createWebHashHistory() // gives a url of `https://example.com/folder#`\r\n * createWebHashHistory('/folder/') // gives a url of `https://example.com/folder/#`\r\n * // if the `#` is provided in the base, it won't be added by `createWebHashHistory`\r\n * createWebHashHistory('/folder/#/app/') // gives a url of `https://example.com/folder/#/app/`\r\n * // you should avoid doing this because it changes the original url and breaks copying urls\r\n * createWebHashHistory('/other-folder/') // gives a url of `https://example.com/other-folder/#`\r\n *\r\n * // at file:///usr/etc/folder/index.html\r\n * // for locations with no `host`, the base is ignored\r\n * createWebHashHistory('/iAmIgnored') // gives a url of `file:///usr/etc/folder/index.html#`\r\n * ```\r\n */\r\nfunction createWebHashHistory(base) {\r\n    // Make sure this implementation is fine in terms of encoding, specially for IE11\r\n    // for `file://`, directly use the pathname and ignore the base\r\n    // location.pathname contains an initial `/` even at the root: `https://example.com`\r\n    base = location.host ? base || location.pathname : location.pathname;\r\n    // allow the user to provide a `#` in the middle: `/base/#/app`\r\n    if (base.indexOf('#') < 0)\r\n        base += '#';\r\n    return createWebHistory(base);\r\n}\n\n/**\r\n * Encoding Rules ␣ = Space Path: ␣ \" < > # ? { } Query: ␣ \" < > # & = Hash: ␣ \"\r\n * < > `\r\n *\r\n * On top of that, the RFC3986 (https://tools.ietf.org/html/rfc3986#section-2.2)\r\n * defines some extra characters to be encoded. Most browsers do not encode them\r\n * in encodeURI https://github.com/whatwg/url/issues/369, so it may be safer to\r\n * also encode `!'()*`. Leaving unencoded only ASCII alphanumeric(`a-zA-Z0-9`)\r\n * plus `-._~`. This extra safety should be applied to query by patching the\r\n * string returned by encodeURIComponent encodeURI also encodes `[\\]^`. `\\`\r\n * should be encoded to avoid ambiguity. Browsers (IE, FF, C) transform a `\\`\r\n * into a `/` if directly typed in. The _backtick_ (`````) should also be\r\n * encoded everywhere because some browsers like FF encode it when directly\r\n * written while others don't. Safari and IE don't encode ``\"<>{}``` in hash.\r\n */\r\n// const EXTRA_RESERVED_RE = /[!'()*]/g\r\n// const encodeReservedReplacer = (c: string) => '%' + c.charCodeAt(0).toString(16)\r\nconst HASH_RE = /#/g; // %23\r\nconst AMPERSAND_RE = /&/g; // %26\r\nconst SLASH_RE = /\\//g; // %2F\r\nconst EQUAL_RE = /=/g; // %3D\r\nconst IM_RE = /\\?/g; // %3F\r\nconst ENC_BRACKET_OPEN_RE = /%5B/g; // [\r\nconst ENC_BRACKET_CLOSE_RE = /%5D/g; // ]\r\nconst ENC_CARET_RE = /%5E/g; // ^\r\nconst ENC_BACKTICK_RE = /%60/g; // `\r\nconst ENC_CURLY_OPEN_RE = /%7B/g; // {\r\nconst ENC_PIPE_RE = /%7C/g; // |\r\nconst ENC_CURLY_CLOSE_RE = /%7D/g; // }\r\n/**\r\n * Encode characters that need to be encoded on the path, search and hash\r\n * sections of the URL.\r\n *\r\n * @internal\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction commonEncode(text) {\r\n    return encodeURI('' + text)\r\n        .replace(ENC_PIPE_RE, '|')\r\n        .replace(ENC_BRACKET_OPEN_RE, '[')\r\n        .replace(ENC_BRACKET_CLOSE_RE, ']');\r\n}\r\n/**\r\n * Encode characters that need to be encoded on the hash section of the URL.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodeHash(text) {\r\n    return commonEncode(text)\r\n        .replace(ENC_CURLY_OPEN_RE, '{')\r\n        .replace(ENC_CURLY_CLOSE_RE, '}')\r\n        .replace(ENC_CARET_RE, '^');\r\n}\r\n/**\r\n * Encode characters that need to be encoded query keys and values on the query\r\n * section of the URL.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodeQueryProperty(text) {\r\n    return commonEncode(text)\r\n        .replace(HASH_RE, '%23')\r\n        .replace(AMPERSAND_RE, '%26')\r\n        .replace(EQUAL_RE, '%3D')\r\n        .replace(ENC_BACKTICK_RE, '`')\r\n        .replace(ENC_CURLY_OPEN_RE, '{')\r\n        .replace(ENC_CURLY_CLOSE_RE, '}')\r\n        .replace(ENC_CARET_RE, '^');\r\n}\r\n/**\r\n * Encode characters that need to be encoded on the path section of the URL.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodePath(text) {\r\n    return commonEncode(text).replace(HASH_RE, '%23').replace(IM_RE, '%3F');\r\n}\r\n/**\r\n * Encode characters that need to be encoded on the path section of the URL as a\r\n * param. This function encodes everything {@link encodePath} does plus the\r\n * slash (`/`) character.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodeParam(text) {\r\n    return encodePath(text).replace(SLASH_RE, '%2F');\r\n}\r\n/**\r\n * Decode text using `decodeURIComponent`. Returns the original text if it\r\n * fails.\r\n *\r\n * @param text - string to decode\r\n * @returns decoded string\r\n */\r\nfunction decode(text) {\r\n    try {\r\n        return decodeURIComponent('' + text);\r\n    }\r\n    catch (err) {\r\n         warn(`Error decoding \"${text}\". Using original value`);\r\n    }\r\n    return '' + text;\r\n}\n\n/**\r\n * Transforms a queryString into a {@link LocationQuery} object. Accept both, a\r\n * version with the leading `?` and without Should work as URLSearchParams\r\n *\r\n * @param search - search string to parse\r\n * @returns a query object\r\n */\r\nfunction parseQuery(search) {\r\n    const query = {};\r\n    // avoid creating an object with an empty key and empty value\r\n    // because of split('&')\r\n    if (search === '' || search === '?')\r\n        return query;\r\n    const hasLeadingIM = search[0] === '?';\r\n    const searchParams = (hasLeadingIM ? search.slice(1) : search).split('&');\r\n    for (let i = 0; i < searchParams.length; ++i) {\r\n        let [key, rawValue] = searchParams[i].split('=');\r\n        key = decode(key);\r\n        // avoid decoding null\r\n        let value = rawValue == null ? null : decode(rawValue);\r\n        if (key in query) {\r\n            // an extra variable for ts types\r\n            let currentValue = query[key];\r\n            if (!Array.isArray(currentValue)) {\r\n                currentValue = query[key] = [currentValue];\r\n            }\r\n            currentValue.push(value);\r\n        }\r\n        else {\r\n            query[key] = value;\r\n        }\r\n    }\r\n    return query;\r\n}\r\n/**\r\n * Stringifies a {@link LocationQueryRaw} object. Like `URLSearchParams`, it\r\n * doesn't prepend a `?`\r\n *\r\n * @param query - query object to stringify\r\n * @returns string version of the query without the leading `?`\r\n */\r\nfunction stringifyQuery(query) {\r\n    let search = '';\r\n    for (let key in query) {\r\n        if (search.length)\r\n            search += '&';\r\n        const value = query[key];\r\n        key = encodeQueryProperty(key);\r\n        if (value == null) {\r\n            // only null adds the value\r\n            if (value !== undefined)\r\n                search += key;\r\n            continue;\r\n        }\r\n        // keep null values\r\n        let values = Array.isArray(value)\r\n            ? value.map(v => v && encodeQueryProperty(v))\r\n            : [value && encodeQueryProperty(value)];\r\n        for (let i = 0; i < values.length; i++) {\r\n            // only append & with i > 0\r\n            search += (i ? '&' : '') + key;\r\n            if (values[i] != null)\r\n                search += ('=' + values[i]);\r\n        }\r\n    }\r\n    return search;\r\n}\r\n/**\r\n * Transforms a {@link LocationQueryRaw} into a {@link LocationQuery} by casting\r\n * numbers into strings, removing keys with an undefined value and replacing\r\n * undefined with null in arrays\r\n *\r\n * @param query - query object to normalize\r\n * @returns a normalized query object\r\n */\r\nfunction normalizeQuery(query) {\r\n    const normalizedQuery = {};\r\n    for (let key in query) {\r\n        let value = query[key];\r\n        if (value !== undefined) {\r\n            normalizedQuery[key] = Array.isArray(value)\r\n                ? value.map(v => (v == null ? null : '' + v))\r\n                : value == null\r\n                    ? value\r\n                    : '' + value;\r\n        }\r\n    }\r\n    return normalizedQuery;\r\n}\n\nfunction isRouteLocation(route) {\r\n    return typeof route === 'string' || (route && typeof route === 'object');\r\n}\r\nfunction isRouteName(name) {\r\n    return typeof name === 'string' || typeof name === 'symbol';\r\n}\n\nconst START_LOCATION_NORMALIZED = {\r\n    path: '/',\r\n    name: undefined,\r\n    params: {},\r\n    query: {},\r\n    hash: '',\r\n    fullPath: '/',\r\n    matched: [],\r\n    meta: {},\r\n    redirectedFrom: undefined,\r\n};\n\nconst NavigationFailureSymbol = PolySymbol( 'navigation failure' );\r\nvar NavigationFailureType;\r\n(function (NavigationFailureType) {\r\n    NavigationFailureType[NavigationFailureType[\"aborted\"] = 4] = \"aborted\";\r\n    NavigationFailureType[NavigationFailureType[\"cancelled\"] = 8] = \"cancelled\";\r\n    NavigationFailureType[NavigationFailureType[\"duplicated\"] = 16] = \"duplicated\";\r\n})(NavigationFailureType || (NavigationFailureType = {}));\r\n// DEV only debug messages\r\nconst ErrorTypeMessages = {\r\n    [1 /* MATCHER_NOT_FOUND */]({ location, currentLocation }) {\r\n        return `No match for\\n ${JSON.stringify(location)}${currentLocation\r\n            ? '\\nwhile being at\\n' + JSON.stringify(currentLocation)\r\n            : ''}`;\r\n    },\r\n    [2 /* NAVIGATION_GUARD_REDIRECT */]({ from, to, }) {\r\n        return `Redirected from \"${from.fullPath}\" to \"${stringifyRoute(to)}\" via a navigation guard.`;\r\n    },\r\n    [4 /* NAVIGATION_ABORTED */]({ from, to }) {\r\n        return `Navigation aborted from \"${from.fullPath}\" to \"${to.fullPath}\" via a navigation guard.`;\r\n    },\r\n    [8 /* NAVIGATION_CANCELLED */]({ from, to }) {\r\n        return `Navigation cancelled from \"${from.fullPath}\" to \"${to.fullPath}\" with a new navigation.`;\r\n    },\r\n    [16 /* NAVIGATION_DUPLICATED */]({ from, to }) {\r\n        return `Avoided redundant navigation to current location: \"${from.fullPath}\".`;\r\n    },\r\n};\r\nfunction createRouterError(type, params) {\r\n    {\r\n        return assign(new Error(ErrorTypeMessages[type](params)), {\r\n            type,\r\n            [NavigationFailureSymbol]: true,\r\n        }, params);\r\n    }\r\n}\r\nfunction isNavigationFailure(error, type) {\r\n    return (error instanceof Error &&\r\n        NavigationFailureSymbol in error &&\r\n        (type == null || !!(error.type & type)));\r\n}\r\nconst propertiesToLog = ['params', 'query', 'hash'];\r\nfunction stringifyRoute(to) {\r\n    if (typeof to === 'string')\r\n        return to;\r\n    if ('path' in to)\r\n        return to.path;\r\n    const location = {};\r\n    for (const key of propertiesToLog) {\r\n        if (key in to)\r\n            location[key] = to[key];\r\n    }\r\n    return JSON.stringify(location, null, 2);\r\n}\n\n// default pattern for a param: non greedy everything but /\r\nconst BASE_PARAM_PATTERN = '[^/]+?';\r\nconst BASE_PATH_PARSER_OPTIONS = {\r\n    sensitive: false,\r\n    strict: false,\r\n    start: true,\r\n    end: true,\r\n};\r\n// Special Regex characters that must be escaped in static tokens\r\nconst REGEX_CHARS_RE = /[.+*?^${}()[\\]/\\\\]/g;\r\n/**\r\n * Creates a path parser from an array of Segments (a segment is an array of Tokens)\r\n *\r\n * @param segments - array of segments returned by tokenizePath\r\n * @param extraOptions - optional options for the regexp\r\n * @returns a PathParser\r\n */\r\nfunction tokensToParser(segments, extraOptions) {\r\n    const options = assign({}, BASE_PATH_PARSER_OPTIONS, extraOptions);\r\n    // the amount of scores is the same as the length of segments except for the root segment \"/\"\r\n    let score = [];\r\n    // the regexp as a string\r\n    let pattern = options.start ? '^' : '';\r\n    // extracted keys\r\n    const keys = [];\r\n    for (const segment of segments) {\r\n        // the root segment needs special treatment\r\n        const segmentScores = segment.length ? [] : [90 /* Root */];\r\n        // allow trailing slash\r\n        if (options.strict && !segment.length)\r\n            pattern += '/';\r\n        for (let tokenIndex = 0; tokenIndex < segment.length; tokenIndex++) {\r\n            const token = segment[tokenIndex];\r\n            // resets the score if we are inside a sub segment /:a-other-:b\r\n            let subSegmentScore = 40 /* Segment */ +\r\n                (options.sensitive ? 0.25 /* BonusCaseSensitive */ : 0);\r\n            if (token.type === 0 /* Static */) {\r\n                // prepend the slash if we are starting a new segment\r\n                if (!tokenIndex)\r\n                    pattern += '/';\r\n                pattern += token.value.replace(REGEX_CHARS_RE, '\\\\$&');\r\n                subSegmentScore += 40 /* Static */;\r\n            }\r\n            else if (token.type === 1 /* Param */) {\r\n                const { value, repeatable, optional, regexp } = token;\r\n                keys.push({\r\n                    name: value,\r\n                    repeatable,\r\n                    optional,\r\n                });\r\n                const re = regexp ? regexp : BASE_PARAM_PATTERN;\r\n                // the user provided a custom regexp /:id(\\\\d+)\r\n                if (re !== BASE_PARAM_PATTERN) {\r\n                    subSegmentScore += 10 /* BonusCustomRegExp */;\r\n                    // make sure the regexp is valid before using it\r\n                    try {\r\n                        new RegExp(`(${re})`);\r\n                    }\r\n                    catch (err) {\r\n                        throw new Error(`Invalid custom RegExp for param \"${value}\" (${re}): ` +\r\n                            err.message);\r\n                    }\r\n                }\r\n                // when we repeat we must take care of the repeating leading slash\r\n                let subPattern = repeatable ? `((?:${re})(?:/(?:${re}))*)` : `(${re})`;\r\n                // prepend the slash if we are starting a new segment\r\n                if (!tokenIndex)\r\n                    subPattern = optional ? `(?:/${subPattern})` : '/' + subPattern;\r\n                if (optional)\r\n                    subPattern += '?';\r\n                pattern += subPattern;\r\n                subSegmentScore += 20 /* Dynamic */;\r\n                if (optional)\r\n                    subSegmentScore += -8 /* BonusOptional */;\r\n                if (repeatable)\r\n                    subSegmentScore += -20 /* BonusRepeatable */;\r\n                if (re === '.*')\r\n                    subSegmentScore += -50 /* BonusWildcard */;\r\n            }\r\n            segmentScores.push(subSegmentScore);\r\n        }\r\n        // an empty array like /home/ -> [[{home}], []]\r\n        // if (!segment.length) pattern += '/'\r\n        score.push(segmentScores);\r\n    }\r\n    // only apply the strict bonus to the last score\r\n    if (options.strict && options.end) {\r\n        const i = score.length - 1;\r\n        score[i][score[i].length - 1] += 0.7000000000000001 /* BonusStrict */;\r\n    }\r\n    // TODO: dev only warn double trailing slash\r\n    if (!options.strict)\r\n        pattern += '/?';\r\n    if (options.end)\r\n        pattern += '$';\r\n    // allow paths like /dynamic to only match dynamic or dynamic/... but not dynamic_something_else\r\n    else if (options.strict)\r\n        pattern += '(?:/|$)';\r\n    const re = new RegExp(pattern, options.sensitive ? '' : 'i');\r\n    function parse(path) {\r\n        const match = path.match(re);\r\n        const params = {};\r\n        if (!match)\r\n            return null;\r\n        for (let i = 1; i < match.length; i++) {\r\n            const value = match[i] || '';\r\n            const key = keys[i - 1];\r\n            params[key.name] = value && key.repeatable ? value.split('/') : value;\r\n        }\r\n        return params;\r\n    }\r\n    function stringify(params) {\r\n        let path = '';\r\n        // for optional parameters to allow to be empty\r\n        let avoidDuplicatedSlash = false;\r\n        for (const segment of segments) {\r\n            if (!avoidDuplicatedSlash || path[path.length - 1] !== '/')\r\n                path += '/';\r\n            avoidDuplicatedSlash = false;\r\n            for (const token of segment) {\r\n                if (token.type === 0 /* Static */) {\r\n                    path += token.value;\r\n                }\r\n                else if (token.type === 1 /* Param */) {\r\n                    const { value, repeatable, optional } = token;\r\n                    const param = value in params ? params[value] : '';\r\n                    if (Array.isArray(param) && !repeatable)\r\n                        throw new Error(`Provided param \"${value}\" is an array but it is not repeatable (* or + modifiers)`);\r\n                    const text = Array.isArray(param) ? param.join('/') : param;\r\n                    if (!text) {\r\n                        // do not append a slash on the next iteration\r\n                        if (optional)\r\n                            avoidDuplicatedSlash = true;\r\n                        else\r\n                            throw new Error(`Missing required param \"${value}\"`);\r\n                    }\r\n                    path += text;\r\n                }\r\n            }\r\n        }\r\n        return path;\r\n    }\r\n    return {\r\n        re,\r\n        score,\r\n        keys,\r\n        parse,\r\n        stringify,\r\n    };\r\n}\r\n/**\r\n * Compares an array of numbers as used in PathParser.score and returns a\r\n * number. This function can be used to `sort` an array\r\n * @param a - first array of numbers\r\n * @param b - second array of numbers\r\n * @returns 0 if both are equal, < 0 if a should be sorted first, > 0 if b\r\n * should be sorted first\r\n */\r\nfunction compareScoreArray(a, b) {\r\n    let i = 0;\r\n    while (i < a.length && i < b.length) {\r\n        const diff = b[i] - a[i];\r\n        // only keep going if diff === 0\r\n        if (diff)\r\n            return diff;\r\n        i++;\r\n    }\r\n    // if the last subsegment was Static, the shorter segments should be sorted first\r\n    // otherwise sort the longest segment first\r\n    if (a.length < b.length) {\r\n        return a.length === 1 && a[0] === 40 /* Static */ + 40 /* Segment */\r\n            ? -1\r\n            : 1;\r\n    }\r\n    else if (a.length > b.length) {\r\n        return b.length === 1 && b[0] === 40 /* Static */ + 40 /* Segment */\r\n            ? 1\r\n            : -1;\r\n    }\r\n    return 0;\r\n}\r\n/**\r\n * Compare function that can be used with `sort` to sort an array of PathParser\r\n * @param a - first PathParser\r\n * @param b - second PathParser\r\n * @returns 0 if both are equal, < 0 if a should be sorted first, > 0 if b\r\n */\r\nfunction comparePathParserScore(a, b) {\r\n    let i = 0;\r\n    const aScore = a.score;\r\n    const bScore = b.score;\r\n    while (i < aScore.length && i < bScore.length) {\r\n        const comp = compareScoreArray(aScore[i], bScore[i]);\r\n        // do not return if both are equal\r\n        if (comp)\r\n            return comp;\r\n        i++;\r\n    }\r\n    // if a and b share the same score entries but b has more, sort b first\r\n    return bScore.length - aScore.length;\r\n    // this is the ternary version\r\n    // return aScore.length < bScore.length\r\n    //   ? 1\r\n    //   : aScore.length > bScore.length\r\n    //   ? -1\r\n    //   : 0\r\n}\n\nconst ROOT_TOKEN = {\r\n    type: 0 /* Static */,\r\n    value: '',\r\n};\r\nconst VALID_PARAM_RE = /[a-zA-Z0-9_]/;\r\n// After some profiling, the cache seems to be unnecessary because tokenizePath\r\n// (the slowest part of adding a route) is very fast\r\n// const tokenCache = new Map<string, Token[][]>()\r\nfunction tokenizePath(path) {\r\n    if (!path)\r\n        return [[]];\r\n    if (path === '/')\r\n        return [[ROOT_TOKEN]];\r\n    // remove the leading slash\r\n    if (path[0] !== '/')\r\n        throw new Error('A non-empty path must start with \"/\"');\r\n    // if (tokenCache.has(path)) return tokenCache.get(path)!\r\n    function crash(message) {\r\n        throw new Error(`ERR (${state})/\"${buffer}\": ${message}`);\r\n    }\r\n    let state = 0 /* Static */;\r\n    let previousState = state;\r\n    const tokens = [];\r\n    // the segment will always be valid because we get into the initial state\r\n    // with the leading /\r\n    let segment;\r\n    function finalizeSegment() {\r\n        if (segment)\r\n            tokens.push(segment);\r\n        segment = [];\r\n    }\r\n    // index on the path\r\n    let i = 0;\r\n    // char at index\r\n    let char;\r\n    // buffer of the value read\r\n    let buffer = '';\r\n    // custom regexp for a param\r\n    let customRe = '';\r\n    function consumeBuffer() {\r\n        if (!buffer)\r\n            return;\r\n        if (state === 0 /* Static */) {\r\n            segment.push({\r\n                type: 0 /* Static */,\r\n                value: buffer,\r\n            });\r\n        }\r\n        else if (state === 1 /* Param */ ||\r\n            state === 2 /* ParamRegExp */ ||\r\n            state === 3 /* ParamRegExpEnd */) {\r\n            if (segment.length > 1 && (char === '*' || char === '+'))\r\n                crash(`A repeatable param (${buffer}) must be alone in its segment. eg: '/:ids+.`);\r\n            segment.push({\r\n                type: 1 /* Param */,\r\n                value: buffer,\r\n                regexp: customRe,\r\n                repeatable: char === '*' || char === '+',\r\n                optional: char === '*' || char === '?',\r\n            });\r\n        }\r\n        else {\r\n            crash('Invalid state to consume buffer');\r\n        }\r\n        buffer = '';\r\n    }\r\n    function addCharToBuffer() {\r\n        buffer += char;\r\n    }\r\n    while (i < path.length) {\r\n        char = path[i++];\r\n        if (char === '\\\\' && state !== 2 /* ParamRegExp */) {\r\n            previousState = state;\r\n            state = 4 /* EscapeNext */;\r\n            continue;\r\n        }\r\n        switch (state) {\r\n            case 0 /* Static */:\r\n                if (char === '/') {\r\n                    if (buffer) {\r\n                        consumeBuffer();\r\n                    }\r\n                    finalizeSegment();\r\n                }\r\n                else if (char === ':') {\r\n                    consumeBuffer();\r\n                    state = 1 /* Param */;\r\n                }\r\n                else {\r\n                    addCharToBuffer();\r\n                }\r\n                break;\r\n            case 4 /* EscapeNext */:\r\n                addCharToBuffer();\r\n                state = previousState;\r\n                break;\r\n            case 1 /* Param */:\r\n                if (char === '(') {\r\n                    state = 2 /* ParamRegExp */;\r\n                    customRe = '';\r\n                }\r\n                else if (VALID_PARAM_RE.test(char)) {\r\n                    addCharToBuffer();\r\n                }\r\n                else {\r\n                    consumeBuffer();\r\n                    state = 0 /* Static */;\r\n                    // go back one character if we were not modifying\r\n                    if (char !== '*' && char !== '?' && char !== '+')\r\n                        i--;\r\n                }\r\n                break;\r\n            case 2 /* ParamRegExp */:\r\n                if (char === ')') {\r\n                    // handle the escaped )\r\n                    if (customRe[customRe.length - 1] == '\\\\')\r\n                        customRe = customRe.slice(0, -1) + char;\r\n                    else\r\n                        state = 3 /* ParamRegExpEnd */;\r\n                }\r\n                else {\r\n                    customRe += char;\r\n                }\r\n                break;\r\n            case 3 /* ParamRegExpEnd */:\r\n                // same as finalizing a param\r\n                consumeBuffer();\r\n                state = 0 /* Static */;\r\n                // go back one character if we were not modifying\r\n                if (char !== '*' && char !== '?' && char !== '+')\r\n                    i--;\r\n                break;\r\n            default:\r\n                crash('Unknown state');\r\n                break;\r\n        }\r\n    }\r\n    if (state === 2 /* ParamRegExp */)\r\n        crash(`Unfinished custom RegExp for param \"${buffer}\"`);\r\n    consumeBuffer();\r\n    finalizeSegment();\r\n    // tokenCache.set(path, tokens)\r\n    return tokens;\r\n}\n\nfunction createRouteRecordMatcher(record, parent, options) {\r\n    const parser = tokensToParser(tokenizePath(record.path), options);\r\n    // warn against params with the same name\r\n    {\r\n        const existingKeys = new Set();\r\n        for (const key of parser.keys) {\r\n            if (existingKeys.has(key.name))\r\n                warn(`Found duplicated params with name \"${key.name}\" for path \"${record.path}\". Only the last one will be available on \"$route.params\".`);\r\n            existingKeys.add(key.name);\r\n        }\r\n    }\r\n    const matcher = assign(parser, {\r\n        record,\r\n        parent,\r\n        // these needs to be populated by the parent\r\n        children: [],\r\n        alias: [],\r\n    });\r\n    if (parent) {\r\n        // both are aliases or both are not aliases\r\n        // we don't want to mix them because the order is used when\r\n        // passing originalRecord in Matcher.addRoute\r\n        if (!matcher.record.aliasOf === !parent.record.aliasOf)\r\n            parent.children.push(matcher);\r\n    }\r\n    return matcher;\r\n}\n\nfunction createRouterMatcher(routes, globalOptions) {\r\n    // normalized ordered array of matchers\r\n    const matchers = [];\r\n    const matcherMap = new Map();\r\n    globalOptions = mergeOptions({ strict: false, end: true, sensitive: false }, globalOptions);\r\n    function getRecordMatcher(name) {\r\n        return matcherMap.get(name);\r\n    }\r\n    function addRoute(record, parent, originalRecord) {\r\n        // used later on to remove by name\r\n        let isRootAdd = !originalRecord;\r\n        let mainNormalizedRecord = normalizeRouteRecord(record);\r\n        // we might be the child of an alias\r\n        mainNormalizedRecord.aliasOf = originalRecord && originalRecord.record;\r\n        const options = mergeOptions(globalOptions, record);\r\n        // generate an array of records to correctly handle aliases\r\n        const normalizedRecords = [\r\n            mainNormalizedRecord,\r\n        ];\r\n        if ('alias' in record) {\r\n            const aliases = typeof record.alias === 'string' ? [record.alias] : record.alias;\r\n            for (const alias of aliases) {\r\n                normalizedRecords.push(assign({}, mainNormalizedRecord, {\r\n                    // this allows us to hold a copy of the `components` option\r\n                    // so that async components cache is hold on the original record\r\n                    components: originalRecord\r\n                        ? originalRecord.record.components\r\n                        : mainNormalizedRecord.components,\r\n                    path: alias,\r\n                    // we might be the child of an alias\r\n                    aliasOf: originalRecord\r\n                        ? originalRecord.record\r\n                        : mainNormalizedRecord,\r\n                }));\r\n            }\r\n        }\r\n        let matcher;\r\n        let originalMatcher;\r\n        for (const normalizedRecord of normalizedRecords) {\r\n            let { path } = normalizedRecord;\r\n            // Build up the path for nested routes if the child isn't an absolute\r\n            // route. Only add the / delimiter if the child path isn't empty and if the\r\n            // parent path doesn't have a trailing slash\r\n            if (parent && path[0] !== '/') {\r\n                let parentPath = parent.record.path;\r\n                let connectingSlash = parentPath[parentPath.length - 1] === '/' ? '' : '/';\r\n                normalizedRecord.path =\r\n                    parent.record.path + (path && connectingSlash + path);\r\n            }\r\n            // create the object before hand so it can be passed to children\r\n            matcher = createRouteRecordMatcher(normalizedRecord, parent, options);\r\n            if ( parent && path[0] === '/')\r\n                checkMissingParamsInAbsolutePath(matcher, parent);\r\n            // if we are an alias we must tell the original record that we exist\r\n            // so we can be removed\r\n            if (originalRecord) {\r\n                originalRecord.alias.push(matcher);\r\n                {\r\n                    checkSameParams(originalRecord, matcher);\r\n                }\r\n            }\r\n            else {\r\n                // otherwise, the first record is the original and others are aliases\r\n                originalMatcher = originalMatcher || matcher;\r\n                if (originalMatcher !== matcher)\r\n                    originalMatcher.alias.push(matcher);\r\n                // remove the route if named and only for the top record (avoid in nested calls)\r\n                // this works because the original record is the first one\r\n                if (isRootAdd && record.name && !isAliasRecord(matcher))\r\n                    removeRoute(record.name);\r\n            }\r\n            if ('children' in mainNormalizedRecord) {\r\n                let children = mainNormalizedRecord.children;\r\n                for (let i = 0; i < children.length; i++) {\r\n                    addRoute(children[i], matcher, originalRecord && originalRecord.children[i]);\r\n                }\r\n            }\r\n            // if there was no original record, then the first one was not an alias and all\r\n            // other alias (if any) need to reference this record when adding children\r\n            originalRecord = originalRecord || matcher;\r\n            insertMatcher(matcher);\r\n        }\r\n        return originalMatcher\r\n            ? () => {\r\n                // since other matchers are aliases, they should be removed by the original matcher\r\n                removeRoute(originalMatcher);\r\n            }\r\n            : noop;\r\n    }\r\n    function removeRoute(matcherRef) {\r\n        if (isRouteName(matcherRef)) {\r\n            const matcher = matcherMap.get(matcherRef);\r\n            if (matcher) {\r\n                matcherMap.delete(matcherRef);\r\n                matchers.splice(matchers.indexOf(matcher), 1);\r\n                matcher.children.forEach(removeRoute);\r\n                matcher.alias.forEach(removeRoute);\r\n            }\r\n        }\r\n        else {\r\n            let index = matchers.indexOf(matcherRef);\r\n            if (index > -1) {\r\n                matchers.splice(index, 1);\r\n                if (matcherRef.record.name)\r\n                    matcherMap.delete(matcherRef.record.name);\r\n                matcherRef.children.forEach(removeRoute);\r\n                matcherRef.alias.forEach(removeRoute);\r\n            }\r\n        }\r\n    }\r\n    function getRoutes() {\r\n        return matchers;\r\n    }\r\n    function insertMatcher(matcher) {\r\n        let i = 0;\r\n        // console.log('i is', { i })\r\n        while (i < matchers.length &&\r\n            comparePathParserScore(matcher, matchers[i]) >= 0)\r\n            i++;\r\n        // console.log('END i is', { i })\r\n        // while (i < matchers.length && matcher.score <= matchers[i].score) i++\r\n        matchers.splice(i, 0, matcher);\r\n        // only add the original record to the name map\r\n        if (matcher.record.name && !isAliasRecord(matcher))\r\n            matcherMap.set(matcher.record.name, matcher);\r\n    }\r\n    /**\r\n     * Resolves a location. Gives access to the route record that corresponds to the actual path as well as filling the corresponding params objects\r\n     *\r\n     * @param location - MatcherLocationRaw to resolve to a url\r\n     * @param currentLocation - MatcherLocation of the current location\r\n     */\r\n    function resolve(location, currentLocation) {\r\n        let matcher;\r\n        let params = {};\r\n        let path;\r\n        let name;\r\n        if ('name' in location && location.name) {\r\n            matcher = matcherMap.get(location.name);\r\n            if (!matcher)\r\n                throw createRouterError(1 /* MATCHER_NOT_FOUND */, {\r\n                    location,\r\n                });\r\n            name = matcher.record.name;\r\n            params = assign(\r\n            // paramsFromLocation is a new object\r\n            paramsFromLocation(currentLocation.params, matcher.keys.map(k => k.name)), location.params);\r\n            // throws if cannot be stringified\r\n            path = matcher.stringify(params);\r\n        }\r\n        else if ('path' in location) {\r\n            // no need to resolve the path with the matcher as it was provided\r\n            // this also allows the user to control the encoding\r\n            path = location.path;\r\n            if ( path[0] !== '/') {\r\n                warn(`The Matcher cannot resolve relative paths but received \"${path}\". Unless you directly called \\`matcher.resolve(\"${path}\")\\`, this is probably a bug in vue-router. Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/vue-router-next.`);\r\n            }\r\n            matcher = matchers.find(m => m.re.test(path));\r\n            // matcher should have a value after the loop\r\n            if (matcher) {\r\n                // TODO: dev warning of unused params if provided\r\n                params = matcher.parse(path);\r\n                name = matcher.record.name;\r\n            }\r\n            // location is a relative path\r\n        }\r\n        else {\r\n            // match by name or path of current route\r\n            matcher = currentLocation.name\r\n                ? matcherMap.get(currentLocation.name)\r\n                : matchers.find(m => m.re.test(currentLocation.path));\r\n            if (!matcher)\r\n                throw createRouterError(1 /* MATCHER_NOT_FOUND */, {\r\n                    location,\r\n                    currentLocation,\r\n                });\r\n            name = matcher.record.name;\r\n            // since we are navigating to the same location, we don't need to pick the\r\n            // params like when `name` is provided\r\n            params = assign({}, currentLocation.params, location.params);\r\n            path = matcher.stringify(params);\r\n        }\r\n        const matched = [];\r\n        let parentMatcher = matcher;\r\n        while (parentMatcher) {\r\n            // reversed order so parents are at the beginning\r\n            matched.unshift(parentMatcher.record);\r\n            parentMatcher = parentMatcher.parent;\r\n        }\r\n        return {\r\n            name,\r\n            path,\r\n            params,\r\n            matched,\r\n            meta: mergeMetaFields(matched),\r\n        };\r\n    }\r\n    // add initial routes\r\n    routes.forEach(route => addRoute(route));\r\n    return { addRoute, resolve, removeRoute, getRoutes, getRecordMatcher };\r\n}\r\nfunction paramsFromLocation(params, keys) {\r\n    let newParams = {};\r\n    for (let key of keys) {\r\n        if (key in params)\r\n            newParams[key] = params[key];\r\n    }\r\n    return newParams;\r\n}\r\n/**\r\n * Normalizes a RouteRecordRaw. Creates a copy\r\n *\r\n * @param record\r\n * @returns the normalized version\r\n */\r\nfunction normalizeRouteRecord(record) {\r\n    return {\r\n        path: record.path,\r\n        redirect: record.redirect,\r\n        name: record.name,\r\n        meta: record.meta || {},\r\n        aliasOf: undefined,\r\n        beforeEnter: record.beforeEnter,\r\n        props: normalizeRecordProps(record),\r\n        children: record.children || [],\r\n        instances: {},\r\n        leaveGuards: [],\r\n        updateGuards: [],\r\n        enterCallbacks: [],\r\n        components: 'components' in record\r\n            ? record.components || {}\r\n            : { default: record.component },\r\n    };\r\n}\r\n/**\r\n * Normalize the optional `props` in a record to always be an object similar to\r\n * components. Also accept a boolean for components.\r\n * @param record\r\n */\r\nfunction normalizeRecordProps(record) {\r\n    const propsObject = {};\r\n    // props does not exist on redirect records but we can set false directly\r\n    const props = record.props || false;\r\n    if ('component' in record) {\r\n        propsObject.default = props;\r\n    }\r\n    else {\r\n        // NOTE: we could also allow a function to be applied to every component.\r\n        // Would need user feedback for use cases\r\n        for (let name in record.components)\r\n            propsObject[name] = typeof props === 'boolean' ? props : props[name];\r\n    }\r\n    return propsObject;\r\n}\r\n/**\r\n * Checks if a record or any of its parent is an alias\r\n * @param record\r\n */\r\nfunction isAliasRecord(record) {\r\n    while (record) {\r\n        if (record.record.aliasOf)\r\n            return true;\r\n        record = record.parent;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Merge meta fields of an array of records\r\n *\r\n * @param matched array of matched records\r\n */\r\nfunction mergeMetaFields(matched) {\r\n    return matched.reduce((meta, record) => assign(meta, record.meta), {});\r\n}\r\nfunction mergeOptions(defaults, partialOptions) {\r\n    let options = {};\r\n    for (let key in defaults) {\r\n        options[key] =\r\n            key in partialOptions ? partialOptions[key] : defaults[key];\r\n    }\r\n    return options;\r\n}\r\nfunction isSameParam(a, b) {\r\n    return (a.name === b.name &&\r\n        a.optional === b.optional &&\r\n        a.repeatable === b.repeatable);\r\n}\r\nfunction checkSameParams(a, b) {\r\n    for (let key of a.keys) {\r\n        if (!b.keys.find(isSameParam.bind(null, key)))\r\n            return warn(`Alias \"${b.record.path}\" and the original record: \"${a.record.path}\" should have the exact same param named \"${key.name}\"`);\r\n    }\r\n    for (let key of b.keys) {\r\n        if (!a.keys.find(isSameParam.bind(null, key)))\r\n            return warn(`Alias \"${b.record.path}\" and the original record: \"${a.record.path}\" should have the exact same param named \"${key.name}\"`);\r\n    }\r\n}\r\nfunction checkMissingParamsInAbsolutePath(record, parent) {\r\n    for (let key of parent.keys) {\r\n        if (!record.keys.find(isSameParam.bind(null, key)))\r\n            return warn(`Absolute path \"${record.record.path}\" should have the exact same param named \"${key.name}\" as its parent \"${parent.record.path}\".`);\r\n    }\r\n}\n\n/**\r\n * Create a list of callbacks that can be reset. Used to create before and after navigation guards list\r\n */\r\nfunction useCallbacks() {\r\n    let handlers = [];\r\n    function add(handler) {\r\n        handlers.push(handler);\r\n        return () => {\r\n            const i = handlers.indexOf(handler);\r\n            if (i > -1)\r\n                handlers.splice(i, 1);\r\n        };\r\n    }\r\n    function reset() {\r\n        handlers = [];\r\n    }\r\n    return {\r\n        add,\r\n        list: () => handlers,\r\n        reset,\r\n    };\r\n}\n\n/**\r\n * Add a navigation guard that triggers whenever the current location is\r\n * left. Similarly to {@link beforeRouteLeave}, it has access to the\r\n * component instance as `this`.\r\n *\r\n * @param leaveGuard - {@link NavigationGuard}\r\n */\r\nfunction onBeforeRouteLeave(leaveGuard) {\r\n    const instance = getCurrentInstance();\r\n    if (!instance) {\r\n        \r\n            warn$1('onBeforeRouteLeave must be called at the top of a setup function');\r\n        return;\r\n    }\r\n    const activeRecord = inject(matchedRouteKey, {}).value;\r\n    if (!activeRecord) {\r\n        \r\n            warn$1('onBeforeRouteLeave must be called at the top of a setup function');\r\n        return;\r\n    }\r\n    activeRecord.leaveGuards.push(\r\n    // @ts-ignore do we even want to allow that? Passing the context in a composition api hook doesn't make sense\r\n    leaveGuard.bind(instance.proxy));\r\n}\r\n/**\r\n * Add a navigation guard that triggers whenever the current location is\r\n * updated. Similarly to {@link beforeRouteUpdate}, it has access to the\r\n * component instance as `this`.\r\n *\r\n * @param updateGuard - {@link NavigationGuard}\r\n */\r\nfunction onBeforeRouteUpdate(updateGuard) {\r\n    const instance = getCurrentInstance();\r\n    if (!instance) {\r\n        \r\n            warn$1('onBeforeRouteUpdate must be called at the top of a setup function');\r\n        return;\r\n    }\r\n    const activeRecord = inject(matchedRouteKey, {}).value;\r\n    if (!activeRecord) {\r\n        \r\n            warn$1('onBeforeRouteUpdate must be called at the top of a setup function');\r\n        return;\r\n    }\r\n    activeRecord.updateGuards.push(\r\n    // @ts-ignore do we even want to allow that? Passing the context in a composition api hook doesn't make sense\r\n    updateGuard.bind(instance.proxy));\r\n}\r\nfunction guardToPromiseFn(guard, to, from, instance, record) {\r\n    // keep a reference to the enterCallbackArray to prevent pushing callbacks if a new navigation took place\r\n    const enterCallbackArray = record && record.enterCallbacks;\r\n    return () => new Promise((resolve, reject) => {\r\n        const next = (valid) => {\r\n            if (valid === false)\r\n                reject(createRouterError(4 /* NAVIGATION_ABORTED */, {\r\n                    from,\r\n                    to,\r\n                }));\r\n            else if (valid instanceof Error) {\r\n                reject(valid);\r\n            }\r\n            else if (isRouteLocation(valid)) {\r\n                reject(createRouterError(2 /* NAVIGATION_GUARD_REDIRECT */, {\r\n                    from: to,\r\n                    to: valid,\r\n                }));\r\n            }\r\n            else {\r\n                if (record &&\r\n                    record.enterCallbacks === enterCallbackArray &&\r\n                    typeof valid === 'function')\r\n                    enterCallbackArray.push(valid);\r\n                resolve();\r\n            }\r\n        };\r\n        // wrapping with Promise.resolve allows it to work with both async and sync guards\r\n        Promise.resolve(guard.call(instance, to, from,  canOnlyBeCalledOnce(next, to, from) )).catch(err => reject(err));\r\n    });\r\n}\r\nfunction canOnlyBeCalledOnce(next, to, from) {\r\n    let called = 0;\r\n    return function () {\r\n        if (called++ === 1)\r\n            warn$1(`The \"next\" callback was called more than once in one navigation guard when going from \"${from.fullPath}\" to \"${to.fullPath}\". It should be called exactly one time in each navigation guard. This will fail in production.`);\r\n        if (called === 1)\r\n            next.apply(null, arguments);\r\n    };\r\n}\r\nfunction extractComponentsGuards(matched, guardType, to, from) {\r\n    const guards = [];\r\n    for (const record of matched) {\r\n        for (const name in record.components) {\r\n            let rawComponent = record.components[name];\r\n            // warn if user wrote import('/component.vue') instead of () => import('./component.vue')\r\n            if ( 'then' in rawComponent) {\r\n                warn$1(`Component \"${name}\" in record with path \"${record.path}\" is a Promise instead of a function that returns a Promise. Did you write \"import('./MyPage.vue')\" instead of \"() => import('./MyPage.vue')\"? This will break in production if not fixed.`);\r\n                let promise = rawComponent;\r\n                rawComponent = () => promise;\r\n            }\r\n            if (isRouteComponent(rawComponent)) {\r\n                // __vccOpts is added by vue-class-component and contain the regular options\r\n                let options = rawComponent.__vccOpts || rawComponent;\r\n                const guard = options[guardType];\r\n                guard &&\r\n                    guards.push(guardToPromiseFn(guard, to, from, record.instances[name], record));\r\n            }\r\n            else {\r\n                // start requesting the chunk already\r\n                let componentPromise = rawComponent();\r\n                if ( !('catch' in componentPromise)) {\r\n                    warn$1(`Component \"${name}\" in record with path \"${record.path}\" is a function that does not return a Promise. If you were passing a functional component, make sure to add a \"displayName\" to the component. This will break in production if not fixed.`);\r\n                    componentPromise = Promise.resolve(componentPromise);\r\n                }\r\n                else {\r\n                    componentPromise = componentPromise.catch(() => null);\r\n                }\r\n                guards.push(() => componentPromise.then(resolved => {\r\n                    if (!resolved)\r\n                        return Promise.reject(new Error(`Couldn't resolve component \"${name}\" for the following record with path \"${record.path}\"`));\r\n                    const resolvedComponent = isESModule(resolved)\r\n                        ? resolved.default\r\n                        : resolved;\r\n                    // replace the function with the resolved component\r\n                    record.components[name] = resolvedComponent;\r\n                    // @ts-ignore: the options types are not propagated to Component\r\n                    const guard = resolvedComponent[guardType];\r\n                    return (guard &&\r\n                        guardToPromiseFn(guard, to, from, record.instances[name], record)());\r\n                }));\r\n            }\r\n        }\r\n    }\r\n    return guards;\r\n}\r\n/**\r\n * Allows differentiating lazy components from functional components and vue-class-component\r\n * @param component\r\n */\r\nfunction isRouteComponent(component) {\r\n    return (typeof component === 'object' ||\r\n        'displayName' in component ||\r\n        'props' in component ||\r\n        '__vccOpts' in component);\r\n}\n\n// TODO: we could allow currentRoute as a prop to expose `isActive` and\r\n// `isExactActive` behavior should go through an RFC\r\nfunction useLink(props) {\r\n    const router = inject(routerKey);\r\n    const currentRoute = inject(routeLocationKey);\r\n    const route = computed(() => router.resolve(unref(props.to)));\r\n    const activeRecordIndex = computed(() => {\r\n        let { matched } = route.value;\r\n        let { length } = matched;\r\n        const routeMatched = matched[length - 1];\r\n        let currentMatched = currentRoute.matched;\r\n        if (!routeMatched || !currentMatched.length)\r\n            return -1;\r\n        let index = currentMatched.findIndex(isSameRouteRecord.bind(null, routeMatched));\r\n        if (index > -1)\r\n            return index;\r\n        // possible parent record\r\n        let parentRecordPath = getOriginalPath(matched[length - 2]);\r\n        return (\r\n        // we are dealing with nested routes\r\n        length > 1 &&\r\n            // if the have the same path, this link is referring to the empty child\r\n            // are we currently are on a different child of the same parent\r\n            getOriginalPath(routeMatched) === parentRecordPath &&\r\n            // avoid comparing the child with its parent\r\n            currentMatched[currentMatched.length - 1].path !== parentRecordPath\r\n            ? currentMatched.findIndex(isSameRouteRecord.bind(null, matched[length - 2]))\r\n            : index);\r\n    });\r\n    const isActive = computed(() => activeRecordIndex.value > -1 &&\r\n        includesParams(currentRoute.params, route.value.params));\r\n    const isExactActive = computed(() => activeRecordIndex.value > -1 &&\r\n        activeRecordIndex.value === currentRoute.matched.length - 1 &&\r\n        isSameRouteLocationParams(currentRoute.params, route.value.params));\r\n    function navigate(e = {}) {\r\n        if (guardEvent(e))\r\n            return router[unref(props.replace) ? 'replace' : 'push'](unref(props.to));\r\n        return Promise.resolve();\r\n    }\r\n    return {\r\n        route,\r\n        href: computed(() => route.value.href),\r\n        isActive,\r\n        isExactActive,\r\n        navigate,\r\n    };\r\n}\r\nconst RouterLinkImpl = defineComponent({\r\n    name: 'RouterLink',\r\n    props: {\r\n        to: {\r\n            type: [String, Object],\r\n            required: true,\r\n        },\r\n        activeClass: String,\r\n        // inactiveClass: String,\r\n        exactActiveClass: String,\r\n        custom: Boolean,\r\n    },\r\n    setup(props, { slots, attrs }) {\r\n        const link = reactive(useLink(props));\r\n        const { options } = inject(routerKey);\r\n        const elClass = computed(() => ({\r\n            [getLinkClass(props.activeClass, options.linkActiveClass, 'router-link-active')]: link.isActive,\r\n            // [getLinkClass(\r\n            //   props.inactiveClass,\r\n            //   options.linkInactiveClass,\r\n            //   'router-link-inactive'\r\n            // )]: !link.isExactActive,\r\n            [getLinkClass(props.exactActiveClass, options.linkExactActiveClass, 'router-link-exact-active')]: link.isExactActive,\r\n        }));\r\n        return () => {\r\n            const children = slots.default && slots.default(link);\r\n            return props.custom\r\n                ? children\r\n                : h('a', assign({\r\n                    'aria-current': link.isExactActive ? 'page' : null,\r\n                    onClick: link.navigate,\r\n                    href: link.href,\r\n                }, attrs, {\r\n                    class: elClass.value,\r\n                }), children);\r\n        };\r\n    },\r\n});\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst RouterLink = RouterLinkImpl;\r\nfunction guardEvent(e) {\r\n    // don't redirect with control keys\r\n    if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey)\r\n        return;\r\n    // don't redirect when preventDefault called\r\n    if (e.defaultPrevented)\r\n        return;\r\n    // don't redirect on right click\r\n    if (e.button !== undefined && e.button !== 0)\r\n        return;\r\n    // don't redirect if `target=\"_blank\"`\r\n    // @ts-ignore getAttribute does exist\r\n    if (e.currentTarget && e.currentTarget.getAttribute) {\r\n        // @ts-ignore getAttribute exists\r\n        const target = e.currentTarget.getAttribute('target');\r\n        if (/\\b_blank\\b/i.test(target))\r\n            return;\r\n    }\r\n    // this may be a Weex event which doesn't have this method\r\n    if (e.preventDefault)\r\n        e.preventDefault();\r\n    return true;\r\n}\r\nfunction includesParams(outer, inner) {\r\n    for (let key in inner) {\r\n        let innerValue = inner[key];\r\n        let outerValue = outer[key];\r\n        if (typeof innerValue === 'string') {\r\n            if (innerValue !== outerValue)\r\n                return false;\r\n        }\r\n        else {\r\n            if (!Array.isArray(outerValue) ||\r\n                outerValue.length !== innerValue.length ||\r\n                innerValue.some((value, i) => value !== outerValue[i]))\r\n                return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Get the original path value of a record by following its aliasOf\r\n * @param record\r\n */\r\nfunction getOriginalPath(record) {\r\n    return record ? (record.aliasOf ? record.aliasOf.path : record.path) : '';\r\n}\r\n/**\r\n * Utility class to get the active class based on defaults.\r\n * @param propClass\r\n * @param globalClass\r\n * @param defaultClass\r\n */\r\nlet getLinkClass = (propClass, globalClass, defaultClass) => propClass != null\r\n    ? propClass\r\n    : globalClass != null\r\n        ? globalClass\r\n        : defaultClass;\n\nconst RouterViewImpl = defineComponent({\r\n    name: 'RouterView',\r\n    props: {\r\n        name: {\r\n            type: String,\r\n            default: 'default',\r\n        },\r\n        route: Object,\r\n    },\r\n    setup(props, { attrs, slots }) {\r\n         warnDeprecatedUsage();\r\n        const route = inject(routeLocationKey);\r\n        const depth = inject(viewDepthKey, 0);\r\n        const matchedRouteRef = computed(() => (props.route || route).matched[depth]);\r\n        provide(viewDepthKey, depth + 1);\r\n        provide(matchedRouteKey, matchedRouteRef);\r\n        const viewRef = ref();\r\n        return () => {\r\n            const matchedRoute = matchedRouteRef.value;\r\n            if (!matchedRoute) {\r\n                return null;\r\n            }\r\n            const ViewComponent = matchedRoute.components[props.name];\r\n            if (!ViewComponent) {\r\n                return null;\r\n            }\r\n            // props from route configration\r\n            const routePropsOption = matchedRoute.props[props.name];\r\n            const routeProps = routePropsOption\r\n                ? routePropsOption === true\r\n                    ? route.params\r\n                    : typeof routePropsOption === 'function'\r\n                        ? routePropsOption(route)\r\n                        : routePropsOption\r\n                : null;\r\n            // we nee the value at the time we render because when we unmount, we\r\n            // navigated to a different location so the value is different\r\n            const currentName = props.name;\r\n            const onVnodeMounted = () => {\r\n                matchedRoute.instances[currentName] = viewRef.value;\r\n                matchedRoute.enterCallbacks.forEach(callback => callback(viewRef.value));\r\n            };\r\n            const onVnodeUnmounted = () => {\r\n                // remove the instance reference to prevent leak\r\n                matchedRoute.instances[currentName] = null;\r\n            };\r\n            const component = h(ViewComponent, assign({}, routeProps, attrs, {\r\n                onVnodeMounted,\r\n                onVnodeUnmounted,\r\n                ref: viewRef,\r\n            }));\r\n            return (\r\n            // pass the vnode to the slot as a prop.\r\n            // h and <component :is=\"...\"> both accept vnodes\r\n            slots.default\r\n                ? slots.default({ Component: component, route: matchedRoute })\r\n                : component);\r\n        };\r\n    },\r\n});\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst RouterView = RouterViewImpl;\r\n// warn against deprecated usage with <transition> & <keep-alive>\r\n// due to functional component being no longer eager in Vue 3\r\nfunction warnDeprecatedUsage() {\r\n    const instance = getCurrentInstance();\r\n    const parentName = instance.parent && instance.parent.type.name;\r\n    if (parentName &&\r\n        (parentName === 'KeepAlive' || parentName.includes('Transition'))) {\r\n        const comp = parentName === 'KeepAlive' ? 'keep-alive' : 'transition';\r\n        warn(`<router-view> can no longer be used directly inside <transition> or <keep-alive>.\\n` +\r\n            `Use slot props instead:\\n\\n` +\r\n            `<router-view v-slot=\"{ Component }\">\\n` +\r\n            `  <${comp}>\\n` +\r\n            `    <component :is=\"Component\" />\\n` +\r\n            `  </${comp}>\\n` +\r\n            `</router-view>`);\r\n    }\r\n}\n\n/**\r\n * Create a Router instance that can be used on a Vue app.\r\n *\r\n * @param options - {@link RouterOptions}\r\n */\r\nfunction createRouter(options) {\r\n    const matcher = createRouterMatcher(options.routes, options);\r\n    let parseQuery$1 = options.parseQuery || parseQuery;\r\n    let stringifyQuery$1 = options.stringifyQuery || stringifyQuery;\r\n    let { scrollBehavior } = options;\r\n    let routerHistory = options.history;\r\n    const beforeGuards = useCallbacks();\r\n    const beforeResolveGuards = useCallbacks();\r\n    const afterGuards = useCallbacks();\r\n    const currentRoute = shallowRef(START_LOCATION_NORMALIZED);\r\n    let pendingLocation = START_LOCATION_NORMALIZED;\r\n    // leave the scrollRestoration if no scrollBehavior is provided\r\n    if (isBrowser && scrollBehavior && 'scrollRestoration' in history) {\r\n        history.scrollRestoration = 'manual';\r\n    }\r\n    const normalizeParams = applyToParams.bind(null, paramValue => '' + paramValue);\r\n    const encodeParams = applyToParams.bind(null, encodeParam);\r\n    const decodeParams = applyToParams.bind(null, decode);\r\n    function addRoute(parentOrRoute, route) {\r\n        let parent;\r\n        let record;\r\n        if (isRouteName(parentOrRoute)) {\r\n            parent = matcher.getRecordMatcher(parentOrRoute);\r\n            record = route;\r\n        }\r\n        else {\r\n            record = parentOrRoute;\r\n        }\r\n        return matcher.addRoute(record, parent);\r\n    }\r\n    function removeRoute(name) {\r\n        let recordMatcher = matcher.getRecordMatcher(name);\r\n        if (recordMatcher) {\r\n            matcher.removeRoute(recordMatcher);\r\n        }\r\n        else {\r\n            warn(`Cannot remove non-existent route \"${String(name)}\"`);\r\n        }\r\n    }\r\n    function getRoutes() {\r\n        return matcher.getRoutes().map(routeMatcher => routeMatcher.record);\r\n    }\r\n    function hasRoute(name) {\r\n        return !!matcher.getRecordMatcher(name);\r\n    }\r\n    function resolve(rawLocation, currentLocation) {\r\n        // const objectLocation = routerLocationAsObject(rawLocation)\r\n        currentLocation = currentLocation || currentRoute.value;\r\n        if (typeof rawLocation === 'string') {\r\n            let locationNormalized = parseURL(parseQuery$1, rawLocation, currentLocation.path);\r\n            let matchedRoute = matcher.resolve({ path: locationNormalized.path }, currentLocation);\r\n            let href = routerHistory.createHref(locationNormalized.fullPath);\r\n            {\r\n                if (href.startsWith('//'))\r\n                    warn(`Location \"${rawLocation}\" resolved to \"${href}\". A resolved location cannot start with multiple slashes.`);\r\n                else if (!matchedRoute.matched.length) {\r\n                    warn(`No match found for location with path \"${rawLocation}\"`);\r\n                }\r\n            }\r\n            // locationNormalized is always a new object\r\n            return assign(locationNormalized, matchedRoute, {\r\n                params: decodeParams(matchedRoute.params),\r\n                redirectedFrom: undefined,\r\n                href,\r\n            });\r\n        }\r\n        let matcherLocation;\r\n        // path could be relative in object as well\r\n        if ('path' in rawLocation) {\r\n            if (\r\n                'params' in rawLocation &&\r\n                !('name' in rawLocation) &&\r\n                Object.keys(rawLocation.params).length) {\r\n                warn(`Path \"${rawLocation.path}\" was passed with params but they will be ignored. Use a named route alongside params instead.`);\r\n            }\r\n            matcherLocation = assign({}, rawLocation, {\r\n                path: parseURL(parseQuery$1, rawLocation.path, currentLocation.path).path,\r\n            });\r\n        }\r\n        else {\r\n            matcherLocation = assign({}, rawLocation, {\r\n                params: encodeParams(rawLocation.params),\r\n            });\r\n        }\r\n        let matchedRoute = matcher.resolve(matcherLocation, currentLocation);\r\n        const hash = encodeHash(rawLocation.hash || '');\r\n        if ( hash && !hash.startsWith('#')) {\r\n            warn(`A \\`hash\\` should always start with the character \"#\". Replace \"${hash}\" with \"#${hash}\".`);\r\n        }\r\n        // put back the unencoded params as given by the user (avoid the cost of decoding them)\r\n        matchedRoute.params =\r\n            'params' in rawLocation\r\n                ? normalizeParams(rawLocation.params)\r\n                : decodeParams(matchedRoute.params);\r\n        const fullPath = stringifyURL(stringifyQuery$1, assign({}, rawLocation, {\r\n            hash,\r\n            path: matchedRoute.path,\r\n        }));\r\n        let href = routerHistory.createHref(fullPath);\r\n        {\r\n            if (href.startsWith('//'))\r\n                warn(`Location \"${rawLocation}\" resolved to \"${href}\". A resolved location cannot start with multiple slashes.`);\r\n            else if (!matchedRoute.matched.length) {\r\n                warn(`No match found for location with path \"${'path' in rawLocation ? rawLocation.path : rawLocation}\"`);\r\n            }\r\n        }\r\n        return assign({\r\n            fullPath,\r\n            // keep the hash encoded so fullPath is effectively path + encodedQuery +\r\n            // hash\r\n            hash,\r\n            query: \r\n            // if the user is using a custom query lib like qs, we might have\r\n            // nested objects, so we keep the query as is, meaning it can contain\r\n            // numbers at `$route.query`, but at the point, the user will have to\r\n            // use their own type anyway.\r\n            // https://github.com/vuejs/vue-router-next/issues/328#issuecomment-649481567\r\n            stringifyQuery$1 === stringifyQuery\r\n                ? normalizeQuery(rawLocation.query)\r\n                : rawLocation.query,\r\n        }, matchedRoute, {\r\n            redirectedFrom: undefined,\r\n            href,\r\n        });\r\n    }\r\n    function locationAsObject(to) {\r\n        return typeof to === 'string' ? { path: to } : assign({}, to);\r\n    }\r\n    function checkCanceledNavigation(to, from) {\r\n        if (pendingLocation !== to) {\r\n            return createRouterError(8 /* NAVIGATION_CANCELLED */, {\r\n                from,\r\n                to,\r\n            });\r\n        }\r\n    }\r\n    function push(to) {\r\n        return pushWithRedirect(to);\r\n    }\r\n    function replace(to) {\r\n        return push(assign(locationAsObject(to), { replace: true }));\r\n    }\r\n    function pushWithRedirect(to, redirectedFrom) {\r\n        const targetLocation = (pendingLocation = resolve(to));\r\n        const from = currentRoute.value;\r\n        const data = to.state;\r\n        const force = to.force;\r\n        // to could be a string where `replace` is a function\r\n        const replace = to.replace === true;\r\n        const lastMatched = targetLocation.matched[targetLocation.matched.length - 1];\r\n        if (lastMatched && lastMatched.redirect) {\r\n            const { redirect } = lastMatched;\r\n            // transform it into an object to pass the original RouteLocaleOptions\r\n            let newTargetLocation = locationAsObject(typeof redirect === 'function' ? redirect(targetLocation) : redirect);\r\n            if (\r\n                !('path' in newTargetLocation) &&\r\n                !('name' in newTargetLocation)) {\r\n                warn(`Invalid redirect found:\\n${JSON.stringify(newTargetLocation, null, 2)}\\n when navigating to \"${targetLocation.fullPath}\". A redirect must contain a name or path. This will break in production.`);\r\n                return Promise.reject(new Error('Invalid redirect'));\r\n            }\r\n            return pushWithRedirect(assign({}, \r\n            // having a path here would be a problem with relative locations but\r\n            // at the same time it doesn't make sense for a redirect to be\r\n            // relative (no name, no path) because it would create an infinite\r\n            // loop. Since newTargetLocation must either have a `path` or a\r\n            // `name`, this will never happen\r\n            targetLocation, newTargetLocation, {\r\n                state: data,\r\n                force,\r\n                replace,\r\n            }), \r\n            // keep original redirectedFrom if it exists\r\n            redirectedFrom || targetLocation);\r\n        }\r\n        // if it was a redirect we already called `pushWithRedirect` above\r\n        const toLocation = targetLocation;\r\n        toLocation.redirectedFrom = redirectedFrom;\r\n        let failure;\r\n        if (!force && isSameRouteLocation(stringifyQuery$1, from, targetLocation)) {\r\n            failure = createRouterError(16 /* NAVIGATION_DUPLICATED */, { to: toLocation, from });\r\n            // trigger scroll to allow scrolling to the same anchor\r\n            handleScroll(from, from, \r\n            // this is a push, the only way for it to be triggered from a\r\n            // history.listen is with a redirect, which makes it become a pus\r\n            true, \r\n            // This cannot be the first navigation because the initial location\r\n            // cannot be manually navigated to\r\n            false);\r\n        }\r\n        return (failure ? Promise.resolve(failure) : navigate(toLocation, from))\r\n            .catch((error) => {\r\n            if (isNavigationFailure(error, 4 /* NAVIGATION_ABORTED */ |\r\n                8 /* NAVIGATION_CANCELLED */ |\r\n                2 /* NAVIGATION_GUARD_REDIRECT */)) {\r\n                return error;\r\n            }\r\n            // unknown error, rejects\r\n            return triggerError(error);\r\n        })\r\n            .then((failure) => {\r\n            if (failure) {\r\n                if (isNavigationFailure(failure, 2 /* NAVIGATION_GUARD_REDIRECT */))\r\n                    // preserve the original redirectedFrom if any\r\n                    return pushWithRedirect(\r\n                    // keep options\r\n                    assign(locationAsObject(failure.to), {\r\n                        state: data,\r\n                        force,\r\n                        replace,\r\n                    }), redirectedFrom || toLocation);\r\n            }\r\n            else {\r\n                // if we fail we don't finalize the navigation\r\n                failure = finalizeNavigation(toLocation, from, true, replace, data);\r\n            }\r\n            triggerAfterEach(toLocation, from, failure);\r\n            return failure;\r\n        });\r\n    }\r\n    /**\r\n     * Helper to reject and skip all navigation guards if a new navigation happened\r\n     * @param to\r\n     * @param from\r\n     */\r\n    function checkCanceledNavigationAndReject(to, from) {\r\n        const error = checkCanceledNavigation(to, from);\r\n        return error ? Promise.reject(error) : Promise.resolve();\r\n    }\r\n    // TODO: refactor the whole before guards by internally using router.beforeEach\r\n    function navigate(to, from) {\r\n        let guards;\r\n        // all components here have been resolved once because we are leaving\r\n        guards = extractComponentsGuards(from.matched.filter(record => to.matched.indexOf(record) < 0).reverse(), 'beforeRouteLeave', to, from);\r\n        const [leavingRecords, updatingRecords,] = extractChangingRecords(to, from);\r\n        for (const record of leavingRecords) {\r\n            for (const guard of record.leaveGuards) {\r\n                guards.push(guardToPromiseFn(guard, to, from));\r\n            }\r\n        }\r\n        const canceledNavigationCheck = checkCanceledNavigationAndReject.bind(null, to, from);\r\n        guards.push(canceledNavigationCheck);\r\n        // run the queue of per route beforeRouteLeave guards\r\n        return (runGuardQueue(guards)\r\n            .then(() => {\r\n            // check global guards beforeEach\r\n            guards = [];\r\n            for (const guard of beforeGuards.list()) {\r\n                guards.push(guardToPromiseFn(guard, to, from));\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // check in components beforeRouteUpdate\r\n            guards = extractComponentsGuards(to.matched.filter(record => from.matched.indexOf(record) > -1), 'beforeRouteUpdate', to, from);\r\n            for (const record of updatingRecords) {\r\n                for (const guard of record.updateGuards) {\r\n                    guards.push(guardToPromiseFn(guard, to, from));\r\n                }\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            // run the queue of per route beforeEnter guards\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // check the route beforeEnter\r\n            guards = [];\r\n            for (const record of to.matched) {\r\n                // do not trigger beforeEnter on reused views\r\n                if (record.beforeEnter && from.matched.indexOf(record) < 0) {\r\n                    if (Array.isArray(record.beforeEnter)) {\r\n                        for (const beforeEnter of record.beforeEnter)\r\n                            guards.push(guardToPromiseFn(beforeEnter, to, from));\r\n                    }\r\n                    else {\r\n                        guards.push(guardToPromiseFn(record.beforeEnter, to, from));\r\n                    }\r\n                }\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            // run the queue of per route beforeEnter guards\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // NOTE: at this point to.matched is normalized and does not contain any () => Promise<Component>\r\n            // clear existing enterCallbacks, these are added by extractComponentsGuards\r\n            to.matched.forEach(record => (record.enterCallbacks = []));\r\n            // check in-component beforeRouteEnter\r\n            guards = extractComponentsGuards(\r\n            // the type doesn't matter as we are comparing an object per reference\r\n            to.matched.filter(record => from.matched.indexOf(record) < 0), 'beforeRouteEnter', to, from);\r\n            guards.push(canceledNavigationCheck);\r\n            // run the queue of per route beforeEnter guards\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // check global guards beforeResolve\r\n            guards = [];\r\n            for (const guard of beforeResolveGuards.list()) {\r\n                guards.push(guardToPromiseFn(guard, to, from));\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            return runGuardQueue(guards);\r\n        })\r\n            // catch any navigation canceled\r\n            .catch(err => isNavigationFailure(err, 8 /* NAVIGATION_CANCELLED */)\r\n            ? err\r\n            : Promise.reject(err)));\r\n    }\r\n    function triggerAfterEach(to, from, failure) {\r\n        // navigation is confirmed, call afterGuards\r\n        // TODO: wrap with error handlers\r\n        for (const guard of afterGuards.list())\r\n            guard(to, from, failure);\r\n    }\r\n    /**\r\n     * - Cleans up any navigation guards\r\n     * - Changes the url if necessary\r\n     * - Calls the scrollBehavior\r\n     */\r\n    function finalizeNavigation(toLocation, from, isPush, replace, data) {\r\n        // a more recent navigation took place\r\n        const error = checkCanceledNavigation(toLocation, from);\r\n        if (error)\r\n            return error;\r\n        const [leavingRecords] = extractChangingRecords(toLocation, from);\r\n        for (const record of leavingRecords) {\r\n            // remove registered guards from removed matched records\r\n            record.leaveGuards = [];\r\n            // free the references\r\n            record.instances = {};\r\n        }\r\n        // only consider as push if it's not the first navigation\r\n        const isFirstNavigation = from === START_LOCATION_NORMALIZED;\r\n        const state = !isBrowser ? {} : history.state;\r\n        // change URL only if the user did a push/replace and if it's not the initial navigation because\r\n        // it's just reflecting the url\r\n        if (isPush) {\r\n            // on the initial navigation, we want to reuse the scroll position from\r\n            // history state if it exists\r\n            if (replace || isFirstNavigation)\r\n                routerHistory.replace(toLocation.fullPath, assign({\r\n                    scroll: isFirstNavigation && state && state.scroll,\r\n                }, data));\r\n            else\r\n                routerHistory.push(toLocation.fullPath, data);\r\n        }\r\n        // accept current navigation\r\n        currentRoute.value = toLocation;\r\n        handleScroll(toLocation, from, isPush, isFirstNavigation);\r\n        markAsReady();\r\n    }\r\n    let removeHistoryListener;\r\n    // attach listener to history to trigger navigations\r\n    function setupListeners() {\r\n        removeHistoryListener = routerHistory.listen((to, _from, info) => {\r\n            // cannot be a redirect route because it was in history\r\n            const toLocation = resolve(to);\r\n            pendingLocation = toLocation;\r\n            const from = currentRoute.value;\r\n            // TODO: should be moved to web history?\r\n            if (isBrowser) {\r\n                saveScrollPosition(getScrollKey(from.fullPath, info.delta), computeScrollPosition());\r\n            }\r\n            navigate(toLocation, from)\r\n                .catch((error) => {\r\n                if (isNavigationFailure(error, 4 /* NAVIGATION_ABORTED */ | 8 /* NAVIGATION_CANCELLED */)) {\r\n                    return error;\r\n                }\r\n                if (isNavigationFailure(error, 2 /* NAVIGATION_GUARD_REDIRECT */)) {\r\n                    // do not restore history on unknown direction\r\n                    if (info.delta)\r\n                        routerHistory.go(-info.delta, false);\r\n                    // the error is already handled by router.push we just want to avoid\r\n                    // logging the error\r\n                    pushWithRedirect(error.to, toLocation\r\n                    // avoid an uncaught rejection\r\n                    ).catch(noop);\r\n                    // avoid the then branch\r\n                    return Promise.reject();\r\n                }\r\n                // do not restore history on unknown direction\r\n                if (info.delta)\r\n                    routerHistory.go(-info.delta, false);\r\n                // unrecognized error, transfer to the global handler\r\n                return triggerError(error);\r\n            })\r\n                .then((failure) => {\r\n                failure =\r\n                    failure ||\r\n                        finalizeNavigation(\r\n                        // after navigation, all matched components are resolved\r\n                        toLocation, from, false);\r\n                // revert the navigation\r\n                if (failure && info.delta)\r\n                    routerHistory.go(-info.delta, false);\r\n                triggerAfterEach(toLocation, from, failure);\r\n            })\r\n                .catch(noop);\r\n        });\r\n    }\r\n    // Initialization and Errors\r\n    let readyHandlers = useCallbacks();\r\n    let errorHandlers = useCallbacks();\r\n    let ready;\r\n    /**\r\n     * Trigger errorHandlers added via onError and throws the error as well\r\n     * @param error - error to throw\r\n     * @returns the error as a rejected promise\r\n     */\r\n    function triggerError(error) {\r\n        markAsReady(error);\r\n        errorHandlers.list().forEach(handler => handler(error));\r\n        return Promise.reject(error);\r\n    }\r\n    /**\r\n     * Returns a Promise that resolves or reject when the router has finished its\r\n     * initial navigation. This will be automatic on client but requires an\r\n     * explicit `router.push` call on the server. This behavior can change\r\n     * depending on the history implementation used e.g. the defaults history\r\n     * implementation (client only) triggers this automatically but the memory one\r\n     * (should be used on server) doesn't\r\n     */\r\n    function isReady() {\r\n        if (ready && currentRoute.value !== START_LOCATION_NORMALIZED)\r\n            return Promise.resolve();\r\n        return new Promise((resolve, reject) => {\r\n            readyHandlers.add([resolve, reject]);\r\n        });\r\n    }\r\n    /**\r\n     * Mark the router as ready, resolving the promised returned by isReady(). Can\r\n     * only be called once, otherwise does nothing.\r\n     * @param err - optional error\r\n     */\r\n    function markAsReady(err) {\r\n        if (ready)\r\n            return;\r\n        ready = true;\r\n        setupListeners();\r\n        readyHandlers\r\n            .list()\r\n            .forEach(([resolve, reject]) => (err ? reject(err) : resolve()));\r\n        readyHandlers.reset();\r\n    }\r\n    // Scroll behavior\r\n    function handleScroll(to, from, isPush, isFirstNavigation) {\r\n        if (!isBrowser || !scrollBehavior)\r\n            return Promise.resolve();\r\n        let scrollPosition = (!isPush && getSavedScrollPosition(getScrollKey(to.fullPath, 0))) ||\r\n            ((isFirstNavigation || !isPush) &&\r\n                history.state &&\r\n                history.state.scroll) ||\r\n            null;\r\n        return nextTick()\r\n            .then(() => scrollBehavior(to, from, scrollPosition))\r\n            .then(position => position && scrollToPosition(position))\r\n            .catch(triggerError);\r\n    }\r\n    function go(delta) {\r\n        return new Promise((resolve, reject) => {\r\n            let removeError = errorHandlers.add(err => {\r\n                removeError();\r\n                removeAfterEach();\r\n                reject(err);\r\n            });\r\n            let removeAfterEach = afterGuards.add((_to, _from, failure) => {\r\n                removeError();\r\n                removeAfterEach();\r\n                resolve(failure);\r\n            });\r\n            routerHistory.go(delta);\r\n        });\r\n    }\r\n    let started;\r\n    const installedApps = new Set();\r\n    const router = {\r\n        currentRoute,\r\n        addRoute,\r\n        removeRoute,\r\n        hasRoute,\r\n        getRoutes,\r\n        resolve,\r\n        options,\r\n        push,\r\n        replace,\r\n        go,\r\n        back: () => go(-1),\r\n        forward: () => go(1),\r\n        beforeEach: beforeGuards.add,\r\n        beforeResolve: beforeResolveGuards.add,\r\n        afterEach: afterGuards.add,\r\n        onError: errorHandlers.add,\r\n        isReady,\r\n        install(app) {\r\n            const router = this;\r\n            app.component('RouterLink', RouterLink);\r\n            app.component('RouterView', RouterView);\r\n            app.config.globalProperties.$router = router;\r\n            Object.defineProperty(app.config.globalProperties, '$route', {\r\n                get: () => unref(currentRoute),\r\n            });\r\n            // this initial navigation is only necessary on client, on server it doesn't\r\n            // make sense because it will create an extra unnecessary navigation and could\r\n            // lead to problems\r\n            if (isBrowser &&\r\n                // used for the initial navigation client side to avoid pushing\r\n                // multiple times when the router is used in multiple apps\r\n                !started &&\r\n                currentRoute.value === START_LOCATION_NORMALIZED) {\r\n                // see above\r\n                started = true;\r\n                push(routerHistory.location).catch(err => {\r\n                    warn('Unexpected error when starting the router:', err);\r\n                });\r\n            }\r\n            const reactiveRoute = {};\r\n            for (let key in START_LOCATION_NORMALIZED) {\r\n                // @ts-ignore: the key matches\r\n                reactiveRoute[key] = computed(() => currentRoute.value[key]);\r\n            }\r\n            app.provide(routerKey, router);\r\n            app.provide(routeLocationKey, reactive(reactiveRoute));\r\n            let unmountApp = app.unmount;\r\n            installedApps.add(app);\r\n            app.unmount = function () {\r\n                installedApps.delete(app);\r\n                if (installedApps.size < 1) {\r\n                    removeHistoryListener();\r\n                    currentRoute.value = START_LOCATION_NORMALIZED;\r\n                    started = false;\r\n                    ready = false;\r\n                }\r\n                unmountApp.call(this, arguments);\r\n            };\r\n        },\r\n    };\r\n    return router;\r\n}\r\nfunction runGuardQueue(guards) {\r\n    return guards.reduce((promise, guard) => promise.then(() => guard()), Promise.resolve());\r\n}\r\nfunction extractChangingRecords(to, from) {\r\n    const leavingRecords = [];\r\n    const updatingRecords = [];\r\n    const enteringRecords = [];\r\n    // TODO: could be optimized with one single for loop\r\n    for (const record of from.matched) {\r\n        if (to.matched.indexOf(record) < 0)\r\n            leavingRecords.push(record);\r\n        else\r\n            updatingRecords.push(record);\r\n    }\r\n    for (const record of to.matched) {\r\n        // the type doesn't matter because we are comparing per reference\r\n        if (from.matched.indexOf(record) < 0)\r\n            enteringRecords.push(record);\r\n    }\r\n    return [leavingRecords, updatingRecords, enteringRecords];\r\n}\n\nfunction useRouter() {\r\n    return inject(routerKey);\r\n}\r\nfunction useRoute() {\r\n    return inject(routeLocationKey);\r\n}\n\nexport { NavigationFailureType, RouterLink, RouterView, START_LOCATION_NORMALIZED as START_LOCATION, createMemoryHistory, createRouter, createWebHashHistory, createWebHistory, onBeforeRouteLeave, onBeforeRouteUpdate, parseQuery, stringifyQuery, useLink, useRoute, useRouter };\n","// Register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\nvar isLocalhost = function () { return Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n); }\n\nvar waitWindowLoad\n// https://github.com/yyx990803/register-service-worker/pull/33#discussion_r394181861\nif (typeof window !== 'undefined') {\n  // Typically, a browser that supports `serviceWorker` should also have supported\n  // `Promise`. But as this package can be used in environments without service\n  // worker support (in that case it would do nothing), there's a chance that\n  // `Promise` does not exist. So we must check for its existence first.\n  if (typeof Promise !== 'undefined') {\n    waitWindowLoad = new Promise(function (resolve) { return window.addEventListener('load', resolve); })\n  } else {\n    waitWindowLoad = { then: function (cb) { return window.addEventListener('load', cb); } }\n  }\n}\n\nexport function register (swUrl, hooks) {\n  if ( hooks === void 0 ) hooks = {};\n\n  var registrationOptions = hooks.registrationOptions; if ( registrationOptions === void 0 ) registrationOptions = {};\n  delete hooks.registrationOptions\n\n  var emit = function (hook) {\n    var args = [], len = arguments.length - 1;\n    while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];\n\n    if (hooks && hooks[hook]) {\n      hooks[hook].apply(hooks, args)\n    }\n  }\n\n  if ('serviceWorker' in navigator) {\n    waitWindowLoad.then(function () {\n      if (isLocalhost()) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, emit, registrationOptions)\n        navigator.serviceWorker.ready.then(function (registration) {\n          emit('ready', registration)\n        })\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, emit, registrationOptions)\n        navigator.serviceWorker.ready.then(function (registration) {\n          emit('ready', registration)\n        })\n      }\n    })\n  }\n}\n\nfunction handleError (emit, error) {\n  if (!navigator.onLine) {\n    emit('offline')\n  }\n  emit('error', error)\n}\n\nfunction registerValidSW (swUrl, emit, registrationOptions) {\n  navigator.serviceWorker\n    .register(swUrl, registrationOptions)\n    .then(function (registration) {\n      emit('registered', registration)\n      if (registration.waiting) {\n        emit('updated', registration)\n        return\n      }\n      registration.onupdatefound = function () {\n        emit('updatefound', registration)\n        var installingWorker = registration.installing\n        installingWorker.onstatechange = function () {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              emit('updated', registration)\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              emit('cached', registration)\n            }\n          }\n        }\n      }\n    })\n    .catch(function (error) { return handleError(emit, error); })\n}\n\nfunction checkValidServiceWorker (swUrl, emit, registrationOptions) {\n  // Check if the service worker can be found.\n  fetch(swUrl)\n    .then(function (response) {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (response.status === 404) {\n        // No service worker found.\n        emit('error', new Error((\"Service worker not found at \" + swUrl)))\n        unregister()\n      } else if (response.headers.get('content-type').indexOf('javascript') === -1) {\n        emit('error', new Error(\n          \"Expected \" + swUrl + \" to have javascript content-type, \" +\n          \"but received \" + (response.headers.get('content-type'))))\n        unregister()\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, emit, registrationOptions)\n      }\n    })\n    .catch(function (error) { return handleError(emit, error); })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(function (registration) {\n      registration.unregister()\n    })\n  }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","/**\r\n * Make a map and return a function for checking if a key\r\n * is in that map.\r\n * IMPORTANT: all calls of this function must be prefixed with\r\n * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\r\n * So that rollup can tree-shake them if necessary.\r\n */\r\nfunction makeMap(str, expectsLowerCase) {\r\n    const map = Object.create(null);\r\n    const list = str.split(',');\r\n    for (let i = 0; i < list.length; i++) {\r\n        map[list[i]] = true;\r\n    }\r\n    return expectsLowerCase ? val => !!map[val.toLowerCase()] : val => !!map[val];\r\n}\n\n// Patch flags are optimization hints generated by the compiler.\r\n// when a block with dynamicChildren is encountered during diff, the algorithm\r\n// enters \"optimized mode\". In this mode, we know that the vdom is produced by\r\n// a render function generated by the compiler, so the algorithm only needs to\r\n// handle updates explicitly marked by these patch flags.\r\n// dev only flag -> name mapping\r\nconst PatchFlagNames = {\r\n    [1 /* TEXT */]: `TEXT`,\r\n    [2 /* CLASS */]: `CLASS`,\r\n    [4 /* STYLE */]: `STYLE`,\r\n    [8 /* PROPS */]: `PROPS`,\r\n    [16 /* FULL_PROPS */]: `FULL_PROPS`,\r\n    [32 /* HYDRATE_EVENTS */]: `HYDRATE_EVENTS`,\r\n    [64 /* STABLE_FRAGMENT */]: `STABLE_FRAGMENT`,\r\n    [128 /* KEYED_FRAGMENT */]: `KEYED_FRAGMENT`,\r\n    [256 /* UNKEYED_FRAGMENT */]: `UNKEYED_FRAGMENT`,\r\n    [1024 /* DYNAMIC_SLOTS */]: `DYNAMIC_SLOTS`,\r\n    [512 /* NEED_PATCH */]: `NEED_PATCH`,\r\n    [-1 /* HOISTED */]: `HOISTED`,\r\n    [-2 /* BAIL */]: `BAIL`\r\n};\n\nconst GLOBALS_WHITE_LISTED = 'Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,' +\r\n    'decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,' +\r\n    'Object,Boolean,String,RegExp,Map,Set,JSON,Intl';\r\nconst isGloballyWhitelisted = /*#__PURE__*/ makeMap(GLOBALS_WHITE_LISTED);\n\nconst range = 2;\r\nfunction generateCodeFrame(source, start = 0, end = source.length) {\r\n    const lines = source.split(/\\r?\\n/);\r\n    let count = 0;\r\n    const res = [];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        count += lines[i].length + 1;\r\n        if (count >= start) {\r\n            for (let j = i - range; j <= i + range || end > count; j++) {\r\n                if (j < 0 || j >= lines.length)\r\n                    continue;\r\n                const line = j + 1;\r\n                res.push(`${line}${' '.repeat(3 - String(line).length)}|  ${lines[j]}`);\r\n                const lineLength = lines[j].length;\r\n                if (j === i) {\r\n                    // push underline\r\n                    const pad = start - (count - lineLength) + 1;\r\n                    const length = Math.max(1, end > count ? lineLength - pad : end - start);\r\n                    res.push(`   |  ` + ' '.repeat(pad) + '^'.repeat(length));\r\n                }\r\n                else if (j > i) {\r\n                    if (end > count) {\r\n                        const length = Math.max(Math.min(end - count, lineLength), 1);\r\n                        res.push(`   |  ` + '^'.repeat(length));\r\n                    }\r\n                    count += lineLength + 1;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    return res.join('\\n');\r\n}\n\nconst mockError = () => mockWarn(true);\r\nfunction mockWarn(asError = false) {\r\n    expect.extend({\r\n        toHaveBeenWarned(received) {\r\n            asserted.add(received);\r\n            const passed = warn.mock.calls.some(args => args[0].indexOf(received) > -1);\r\n            if (passed) {\r\n                return {\r\n                    pass: true,\r\n                    message: () => `expected \"${received}\" not to have been warned.`\r\n                };\r\n            }\r\n            else {\r\n                const msgs = warn.mock.calls.map(args => args[0]).join('\\n - ');\r\n                return {\r\n                    pass: false,\r\n                    message: () => `expected \"${received}\" to have been warned.\\n\\nActual messages:\\n\\n - ${msgs}`\r\n                };\r\n            }\r\n        },\r\n        toHaveBeenWarnedLast(received) {\r\n            asserted.add(received);\r\n            const passed = warn.mock.calls[warn.mock.calls.length - 1][0].indexOf(received) > -1;\r\n            if (passed) {\r\n                return {\r\n                    pass: true,\r\n                    message: () => `expected \"${received}\" not to have been warned last.`\r\n                };\r\n            }\r\n            else {\r\n                const msgs = warn.mock.calls.map(args => args[0]).join('\\n - ');\r\n                return {\r\n                    pass: false,\r\n                    message: () => `expected \"${received}\" to have been warned last.\\n\\nActual messages:\\n\\n - ${msgs}`\r\n                };\r\n            }\r\n        },\r\n        toHaveBeenWarnedTimes(received, n) {\r\n            asserted.add(received);\r\n            let found = 0;\r\n            warn.mock.calls.forEach(args => {\r\n                if (args[0].indexOf(received) > -1) {\r\n                    found++;\r\n                }\r\n            });\r\n            if (found === n) {\r\n                return {\r\n                    pass: true,\r\n                    message: () => `expected \"${received}\" to have been warned ${n} times.`\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    pass: false,\r\n                    message: () => `expected \"${received}\" to have been warned ${n} times but got ${found}.`\r\n                };\r\n            }\r\n        }\r\n    });\r\n    let warn;\r\n    const asserted = new Set();\r\n    beforeEach(() => {\r\n        asserted.clear();\r\n        warn = jest.spyOn(console, asError ? 'error' : 'warn');\r\n        warn.mockImplementation(() => { });\r\n    });\r\n    afterEach(() => {\r\n        const assertedArray = Array.from(asserted);\r\n        const nonAssertedWarnings = warn.mock.calls\r\n            .map(args => args[0])\r\n            .filter(received => {\r\n            return !assertedArray.some(assertedMsg => {\r\n                return received.indexOf(assertedMsg) > -1;\r\n            });\r\n        });\r\n        warn.mockRestore();\r\n        if (nonAssertedWarnings.length) {\r\n            nonAssertedWarnings.forEach(warning => {\r\n                console.warn(warning);\r\n            });\r\n            throw new Error(`test case threw unexpected warnings.`);\r\n        }\r\n    });\r\n}\n\n/**\r\n * On the client we only need to offer special cases for boolean attributes that\r\n * have different names from their corresponding dom properties:\r\n * - itemscope -> N/A\r\n * - allowfullscreen -> allowFullscreen\r\n * - formnovalidate -> formNoValidate\r\n * - ismap -> isMap\r\n * - nomodule -> noModule\r\n * - novalidate -> noValidate\r\n * - readonly -> readOnly\r\n */\r\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;\r\nconst isSpecialBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs);\r\n/**\r\n * The full list is needed during SSR to produce the correct initial markup.\r\n */\r\nconst isBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs +\r\n    `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,` +\r\n    `loop,open,required,reversed,scoped,seamless,` +\r\n    `checked,muted,multiple,selected`);\r\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/;\r\nconst attrValidationCache = {};\r\nfunction isSSRSafeAttrName(name) {\r\n    if (attrValidationCache.hasOwnProperty(name)) {\r\n        return attrValidationCache[name];\r\n    }\r\n    const isUnsafe = unsafeAttrCharRE.test(name);\r\n    if (isUnsafe) {\r\n        console.error(`unsafe attribute name: ${name}`);\r\n    }\r\n    return (attrValidationCache[name] = !isUnsafe);\r\n}\r\nconst propsToAttrMap = {\r\n    acceptCharset: 'accept-charset',\r\n    className: 'class',\r\n    htmlFor: 'for',\r\n    httpEquiv: 'http-equiv'\r\n};\r\n/**\r\n * CSS properties that accept plain numbers\r\n */\r\nconst isNoUnitNumericStyleProp = /*#__PURE__*/ makeMap(`animation-iteration-count,border-image-outset,border-image-slice,` +\r\n    `border-image-width,box-flex,box-flex-group,box-ordinal-group,column-count,` +\r\n    `columns,flex,flex-grow,flex-positive,flex-shrink,flex-negative,flex-order,` +\r\n    `grid-row,grid-row-end,grid-row-span,grid-row-start,grid-column,` +\r\n    `grid-column-end,grid-column-span,grid-column-start,font-weight,line-clamp,` +\r\n    `line-height,opacity,order,orphans,tab-size,widows,z-index,zoom,` +\r\n    // SVG\r\n    `fill-opacity,flood-opacity,stop-opacity,stroke-dasharray,stroke-dashoffset,` +\r\n    `stroke-miterlimit,stroke-opacity,stroke-width`);\r\n/**\r\n * Known attributes, this is used for stringification of runtime static nodes\r\n * so that we don't stringify bindings that cannot be set from HTML.\r\n * Don't also forget to allow `data-*` and `aria-*`!\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes\r\n */\r\nconst isKnownAttr = /*#__PURE__*/ makeMap(`accept,accept-charset,accesskey,action,align,allow,alt,async,` +\r\n    `autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,` +\r\n    `border,buffered,capture,challenge,charset,checked,cite,class,code,` +\r\n    `codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,` +\r\n    `coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,` +\r\n    `disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,` +\r\n    `formaction,formenctype,formmethod,formnovalidate,formtarget,headers,` +\r\n    `height,hidden,high,href,hreflang,http-equiv,icon,id,importance,integrity,` +\r\n    `ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,` +\r\n    `manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,` +\r\n    `open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,` +\r\n    `referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,` +\r\n    `selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,` +\r\n    `start,step,style,summary,tabindex,target,title,translate,type,usemap,` +\r\n    `value,width,wrap`);\n\nfunction normalizeStyle(value) {\r\n    if (isArray(value)) {\r\n        const res = {};\r\n        for (let i = 0; i < value.length; i++) {\r\n            const item = value[i];\r\n            const normalized = normalizeStyle(isString(item) ? parseStringStyle(item) : item);\r\n            if (normalized) {\r\n                for (const key in normalized) {\r\n                    res[key] = normalized[key];\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    else if (isObject(value)) {\r\n        return value;\r\n    }\r\n}\r\nconst listDelimiterRE = /;(?![^(]*\\))/g;\r\nconst propertyDelimiterRE = /:(.+)/;\r\nfunction parseStringStyle(cssText) {\r\n    const ret = {};\r\n    cssText.split(listDelimiterRE).forEach(item => {\r\n        if (item) {\r\n            const tmp = item.split(propertyDelimiterRE);\r\n            tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim());\r\n        }\r\n    });\r\n    return ret;\r\n}\r\nfunction stringifyStyle(styles) {\r\n    let ret = '';\r\n    if (!styles) {\r\n        return ret;\r\n    }\r\n    for (const key in styles) {\r\n        const value = styles[key];\r\n        const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key);\r\n        if (isString(value) ||\r\n            (typeof value === 'number' && isNoUnitNumericStyleProp(normalizedKey))) {\r\n            // only render valid values\r\n            ret += `${normalizedKey}:${value};`;\r\n        }\r\n    }\r\n    return ret;\r\n}\r\nfunction normalizeClass(value) {\r\n    let res = '';\r\n    if (isString(value)) {\r\n        res = value;\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            res += normalizeClass(value[i]) + ' ';\r\n        }\r\n    }\r\n    else if (isObject(value)) {\r\n        for (const name in value) {\r\n            if (value[name]) {\r\n                res += name + ' ';\r\n            }\r\n        }\r\n    }\r\n    return res.trim();\r\n}\n\n// These tag configs are shared between compiler-dom and runtime-dom, so they\r\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Element\r\nconst HTML_TAGS = 'html,body,base,head,link,meta,style,title,address,article,aside,footer,' +\r\n    'header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,' +\r\n    'figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,' +\r\n    'data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,' +\r\n    'time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,' +\r\n    'canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,' +\r\n    'th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,' +\r\n    'option,output,progress,select,textarea,details,dialog,menu,' +\r\n    'summary,content,template,blockquote,iframe,tfoot';\r\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Element\r\nconst SVG_TAGS = 'svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,' +\r\n    'defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,' +\r\n    'feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,' +\r\n    'feDistanceLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,' +\r\n    'feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,' +\r\n    'fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,' +\r\n    'foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,' +\r\n    'mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,' +\r\n    'polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,' +\r\n    'text,textPath,title,tspan,unknown,use,view';\r\nconst VOID_TAGS = 'area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr';\r\nconst isHTMLTag = /*#__PURE__*/ makeMap(HTML_TAGS);\r\nconst isSVGTag = /*#__PURE__*/ makeMap(SVG_TAGS);\r\nconst isVoidTag = /*#__PURE__*/ makeMap(VOID_TAGS);\n\nconst escapeRE = /[\"'&<>]/;\r\nfunction escapeHtml(string) {\r\n    const str = '' + string;\r\n    const match = escapeRE.exec(str);\r\n    if (!match) {\r\n        return str;\r\n    }\r\n    let html = '';\r\n    let escaped;\r\n    let index;\r\n    let lastIndex = 0;\r\n    for (index = match.index; index < str.length; index++) {\r\n        switch (str.charCodeAt(index)) {\r\n            case 34: // \"\r\n                escaped = '&quot;';\r\n                break;\r\n            case 38: // &\r\n                escaped = '&amp;';\r\n                break;\r\n            case 39: // '\r\n                escaped = '&#39;';\r\n                break;\r\n            case 60: // <\r\n                escaped = '&lt;';\r\n                break;\r\n            case 62: // >\r\n                escaped = '&gt;';\r\n                break;\r\n            default:\r\n                continue;\r\n        }\r\n        if (lastIndex !== index) {\r\n            html += str.substring(lastIndex, index);\r\n        }\r\n        lastIndex = index + 1;\r\n        html += escaped;\r\n    }\r\n    return lastIndex !== index ? html + str.substring(lastIndex, index) : html;\r\n}\r\n// https://www.w3.org/TR/html52/syntax.html#comments\r\nconst commentStripRE = /^-?>|<!--|-->|--!>|<!-$/g;\r\nfunction escapeHtmlComment(src) {\r\n    return src.replace(commentStripRE, '');\r\n}\n\nfunction looseCompareArrays(a, b) {\r\n    if (a.length !== b.length)\r\n        return false;\r\n    let equal = true;\r\n    for (let i = 0; equal && i < a.length; i++) {\r\n        equal = looseEqual(a[i], b[i]);\r\n    }\r\n    return equal;\r\n}\r\nfunction looseEqual(a, b) {\r\n    if (a === b)\r\n        return true;\r\n    let aValidType = isDate(a);\r\n    let bValidType = isDate(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? a.getTime() === b.getTime() : false;\r\n    }\r\n    aValidType = isArray(a);\r\n    bValidType = isArray(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? looseCompareArrays(a, b) : false;\r\n    }\r\n    aValidType = isObject(a);\r\n    bValidType = isObject(b);\r\n    if (aValidType || bValidType) {\r\n        /* istanbul ignore if: this if will probably never be called */\r\n        if (!aValidType || !bValidType) {\r\n            return false;\r\n        }\r\n        const aKeysCount = Object.keys(a).length;\r\n        const bKeysCount = Object.keys(b).length;\r\n        if (aKeysCount !== bKeysCount) {\r\n            return false;\r\n        }\r\n        for (const key in a) {\r\n            const aHasKey = a.hasOwnProperty(key);\r\n            const bHasKey = b.hasOwnProperty(key);\r\n            if ((aHasKey && !bHasKey) ||\r\n                (!aHasKey && bHasKey) ||\r\n                !looseEqual(a[key], b[key])) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return String(a) === String(b);\r\n}\r\nfunction looseIndexOf(arr, val) {\r\n    return arr.findIndex(item => looseEqual(item, val));\r\n}\n\n/**\r\n * For converting {{ interpolation }} values to displayed strings.\r\n * @private\r\n */\r\nconst toDisplayString = (val) => {\r\n    return val == null\r\n        ? ''\r\n        : isObject(val)\r\n            ? JSON.stringify(val, replacer, 2)\r\n            : String(val);\r\n};\r\nconst replacer = (_key, val) => {\r\n    if (val instanceof Map) {\r\n        return {\r\n            [`Map(${val.size})`]: [...val.entries()].reduce((entries, [key, val]) => {\r\n                entries[`${key} =>`] = val;\r\n                return entries;\r\n            }, {})\r\n        };\r\n    }\r\n    else if (val instanceof Set) {\r\n        return {\r\n            [`Set(${val.size})`]: [...val.values()]\r\n        };\r\n    }\r\n    else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {\r\n        return String(val);\r\n    }\r\n    return val;\r\n};\n\n/**\r\n * List of @babel/parser plugins that are used for template expression\r\n * transforms and SFC script transforms. By default we enable proposals slated\r\n * for ES2020. This will need to be updated as the spec moves forward.\r\n * Full list at https://babeljs.io/docs/en/next/babel-parser#plugins\r\n */\r\nconst babelParserDefautPlugins = [\r\n    'bigInt',\r\n    'optionalChaining',\r\n    'nullishCoalescingOperator'\r\n];\r\nconst EMPTY_OBJ = (process.env.NODE_ENV !== 'production')\r\n    ? Object.freeze({})\r\n    : {};\r\nconst EMPTY_ARR = [];\r\nconst NOOP = () => { };\r\n/**\r\n * Always return false.\r\n */\r\nconst NO = () => false;\r\nconst onRE = /^on[^a-z]/;\r\nconst isOn = (key) => onRE.test(key);\r\nconst extend = Object.assign;\r\nconst remove = (arr, el) => {\r\n    const i = arr.indexOf(el);\r\n    if (i > -1) {\r\n        arr.splice(i, 1);\r\n    }\r\n};\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\nconst hasOwn = (val, key) => hasOwnProperty.call(val, key);\r\nconst isArray = Array.isArray;\r\nconst isDate = (val) => val instanceof Date;\r\nconst isFunction = (val) => typeof val === 'function';\r\nconst isString = (val) => typeof val === 'string';\r\nconst isSymbol = (val) => typeof val === 'symbol';\r\nconst isObject = (val) => val !== null && typeof val === 'object';\r\nconst isPromise = (val) => {\r\n    return isObject(val) && isFunction(val.then) && isFunction(val.catch);\r\n};\r\nconst objectToString = Object.prototype.toString;\r\nconst toTypeString = (value) => objectToString.call(value);\r\nconst toRawType = (value) => {\r\n    return toTypeString(value).slice(8, -1);\r\n};\r\nconst isPlainObject = (val) => toTypeString(val) === '[object Object]';\r\nconst isReservedProp = /*#__PURE__*/ makeMap('key,ref,' +\r\n    'onVnodeBeforeMount,onVnodeMounted,' +\r\n    'onVnodeBeforeUpdate,onVnodeUpdated,' +\r\n    'onVnodeBeforeUnmount,onVnodeUnmounted');\r\nconst cacheStringFunction = (fn) => {\r\n    const cache = Object.create(null);\r\n    return ((str) => {\r\n        const hit = cache[str];\r\n        return hit || (cache[str] = fn(str));\r\n    });\r\n};\r\nconst camelizeRE = /-(\\w)/g;\r\n/**\r\n * @private\r\n */\r\nconst camelize = cacheStringFunction((str) => {\r\n    return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''));\r\n});\r\nconst hyphenateRE = /\\B([A-Z])/g;\r\n/**\r\n * @private\r\n */\r\nconst hyphenate = cacheStringFunction((str) => {\r\n    return str.replace(hyphenateRE, '-$1').toLowerCase();\r\n});\r\n/**\r\n * @private\r\n */\r\nconst capitalize = cacheStringFunction((str) => {\r\n    return str.charAt(0).toUpperCase() + str.slice(1);\r\n});\r\n// compare whether a value has changed, accounting for NaN.\r\nconst hasChanged = (value, oldValue) => value !== oldValue && (value === value || oldValue === oldValue);\r\nconst invokeArrayFns = (fns, arg) => {\r\n    for (let i = 0; i < fns.length; i++) {\r\n        fns[i](arg);\r\n    }\r\n};\r\nconst def = (obj, key, value) => {\r\n    Object.defineProperty(obj, key, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        value\r\n    });\r\n};\r\nconst toNumber = (val) => {\r\n    const n = parseFloat(val);\r\n    return isNaN(n) ? val : n;\r\n};\n\nexport { EMPTY_ARR, EMPTY_OBJ, NO, NOOP, PatchFlagNames, babelParserDefautPlugins, camelize, capitalize, def, escapeHtml, escapeHtmlComment, extend, generateCodeFrame, hasChanged, hasOwn, hyphenate, invokeArrayFns, isArray, isBooleanAttr, isDate, isFunction, isGloballyWhitelisted, isHTMLTag, isKnownAttr, isNoUnitNumericStyleProp, isObject, isOn, isPlainObject, isPromise, isReservedProp, isSSRSafeAttrName, isSVGTag, isSpecialBooleanAttr, isString, isSymbol, isVoidTag, looseEqual, looseIndexOf, makeMap, mockError, mockWarn, normalizeClass, normalizeStyle, objectToString, parseStringStyle, propsToAttrMap, remove, stringifyStyle, toDisplayString, toNumber, toRawType, toTypeString };\n","import { EMPTY_OBJ, isArray, isSymbol, extend, hasOwn, isObject, hasChanged, capitalize, toRawType, def, makeMap, isFunction, NOOP } from '@vue/shared';\n\nconst targetMap = new WeakMap();\r\nconst effectStack = [];\r\nlet activeEffect;\r\nconst ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'iterate' : '');\r\nconst MAP_KEY_ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'Map key iterate' : '');\r\nfunction isEffect(fn) {\r\n    return fn && fn._isEffect === true;\r\n}\r\nfunction effect(fn, options = EMPTY_OBJ) {\r\n    if (isEffect(fn)) {\r\n        fn = fn.raw;\r\n    }\r\n    const effect = createReactiveEffect(fn, options);\r\n    if (!options.lazy) {\r\n        effect();\r\n    }\r\n    return effect;\r\n}\r\nfunction stop(effect) {\r\n    if (effect.active) {\r\n        cleanup(effect);\r\n        if (effect.options.onStop) {\r\n            effect.options.onStop();\r\n        }\r\n        effect.active = false;\r\n    }\r\n}\r\nlet uid = 0;\r\nfunction createReactiveEffect(fn, options) {\r\n    const effect = function reactiveEffect() {\r\n        if (!effect.active) {\r\n            return options.scheduler ? undefined : fn();\r\n        }\r\n        if (!effectStack.includes(effect)) {\r\n            cleanup(effect);\r\n            try {\r\n                enableTracking();\r\n                effectStack.push(effect);\r\n                activeEffect = effect;\r\n                return fn();\r\n            }\r\n            finally {\r\n                effectStack.pop();\r\n                resetTracking();\r\n                activeEffect = effectStack[effectStack.length - 1];\r\n            }\r\n        }\r\n    };\r\n    effect.id = uid++;\r\n    effect._isEffect = true;\r\n    effect.active = true;\r\n    effect.raw = fn;\r\n    effect.deps = [];\r\n    effect.options = options;\r\n    return effect;\r\n}\r\nfunction cleanup(effect) {\r\n    const { deps } = effect;\r\n    if (deps.length) {\r\n        for (let i = 0; i < deps.length; i++) {\r\n            deps[i].delete(effect);\r\n        }\r\n        deps.length = 0;\r\n    }\r\n}\r\nlet shouldTrack = true;\r\nconst trackStack = [];\r\nfunction pauseTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = false;\r\n}\r\nfunction enableTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = true;\r\n}\r\nfunction resetTracking() {\r\n    const last = trackStack.pop();\r\n    shouldTrack = last === undefined ? true : last;\r\n}\r\nfunction track(target, type, key) {\r\n    if (!shouldTrack || activeEffect === undefined) {\r\n        return;\r\n    }\r\n    let depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        targetMap.set(target, (depsMap = new Map()));\r\n    }\r\n    let dep = depsMap.get(key);\r\n    if (!dep) {\r\n        depsMap.set(key, (dep = new Set()));\r\n    }\r\n    if (!dep.has(activeEffect)) {\r\n        dep.add(activeEffect);\r\n        activeEffect.deps.push(dep);\r\n        if ((process.env.NODE_ENV !== 'production') && activeEffect.options.onTrack) {\r\n            activeEffect.options.onTrack({\r\n                effect: activeEffect,\r\n                target,\r\n                type,\r\n                key\r\n            });\r\n        }\r\n    }\r\n}\r\nfunction trigger(target, type, key, newValue, oldValue, oldTarget) {\r\n    const depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        // never been tracked\r\n        return;\r\n    }\r\n    const effects = new Set();\r\n    const add = (effectsToAdd) => {\r\n        if (effectsToAdd) {\r\n            effectsToAdd.forEach(effect => {\r\n                if (effect !== activeEffect || !shouldTrack) {\r\n                    effects.add(effect);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    if (type === \"clear\" /* CLEAR */) {\r\n        // collection being cleared\r\n        // trigger all effects for target\r\n        depsMap.forEach(add);\r\n    }\r\n    else if (key === 'length' && isArray(target)) {\r\n        depsMap.forEach((dep, key) => {\r\n            if (key === 'length' || key >= newValue) {\r\n                add(dep);\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        // schedule runs for SET | ADD | DELETE\r\n        if (key !== void 0) {\r\n            add(depsMap.get(key));\r\n        }\r\n        // also run for iteration key on ADD | DELETE | Map.SET\r\n        const isAddOrDelete = type === \"add\" /* ADD */ ||\r\n            (type === \"delete\" /* DELETE */ && !isArray(target));\r\n        if (isAddOrDelete ||\r\n            (type === \"set\" /* SET */ && target instanceof Map)) {\r\n            add(depsMap.get(isArray(target) ? 'length' : ITERATE_KEY));\r\n        }\r\n        if (isAddOrDelete && target instanceof Map) {\r\n            add(depsMap.get(MAP_KEY_ITERATE_KEY));\r\n        }\r\n    }\r\n    const run = (effect) => {\r\n        if ((process.env.NODE_ENV !== 'production') && effect.options.onTrigger) {\r\n            effect.options.onTrigger({\r\n                effect,\r\n                target,\r\n                key,\r\n                type,\r\n                newValue,\r\n                oldValue,\r\n                oldTarget\r\n            });\r\n        }\r\n        if (effect.options.scheduler) {\r\n            effect.options.scheduler(effect);\r\n        }\r\n        else {\r\n            effect();\r\n        }\r\n    };\r\n    effects.forEach(run);\r\n}\n\nconst builtInSymbols = new Set(Object.getOwnPropertyNames(Symbol)\r\n    .map(key => Symbol[key])\r\n    .filter(isSymbol));\r\nconst get = /*#__PURE__*/ createGetter();\r\nconst shallowGet = /*#__PURE__*/ createGetter(false, true);\r\nconst readonlyGet = /*#__PURE__*/ createGetter(true);\r\nconst shallowReadonlyGet = /*#__PURE__*/ createGetter(true, true);\r\nconst arrayInstrumentations = {};\r\n['includes', 'indexOf', 'lastIndexOf'].forEach(key => {\r\n    arrayInstrumentations[key] = function (...args) {\r\n        const arr = toRaw(this);\r\n        for (let i = 0, l = this.length; i < l; i++) {\r\n            track(arr, \"get\" /* GET */, i + '');\r\n        }\r\n        // we run the method using the original args first (which may be reactive)\r\n        const res = arr[key](...args);\r\n        if (res === -1 || res === false) {\r\n            // if that didn't work, run it again using raw values.\r\n            return arr[key](...args.map(toRaw));\r\n        }\r\n        else {\r\n            return res;\r\n        }\r\n    };\r\n});\r\nfunction createGetter(isReadonly = false, shallow = false) {\r\n    return function get(target, key, receiver) {\r\n        if (key === \"__v_isReactive\" /* IS_REACTIVE */) {\r\n            return !isReadonly;\r\n        }\r\n        else if (key === \"__v_isReadonly\" /* IS_READONLY */) {\r\n            return isReadonly;\r\n        }\r\n        else if (key === \"__v_raw\" /* RAW */ &&\r\n            receiver ===\r\n                (isReadonly\r\n                    ? target[\"__v_readonly\" /* READONLY */]\r\n                    : target[\"__v_reactive\" /* REACTIVE */])) {\r\n            return target;\r\n        }\r\n        const targetIsArray = isArray(target);\r\n        if (targetIsArray && hasOwn(arrayInstrumentations, key)) {\r\n            return Reflect.get(arrayInstrumentations, key, receiver);\r\n        }\r\n        const res = Reflect.get(target, key, receiver);\r\n        if (isSymbol(key)\r\n            ? builtInSymbols.has(key)\r\n            : key === `__proto__` || key === `__v_isRef`) {\r\n            return res;\r\n        }\r\n        if (!isReadonly) {\r\n            track(target, \"get\" /* GET */, key);\r\n        }\r\n        if (shallow) {\r\n            return res;\r\n        }\r\n        if (isRef(res)) {\r\n            // ref unwrapping, only for Objects, not for Arrays.\r\n            return targetIsArray ? res : res.value;\r\n        }\r\n        if (isObject(res)) {\r\n            // Convert returned value into a proxy as well. we do the isObject check\r\n            // here to avoid invalid value warning. Also need to lazy access readonly\r\n            // and reactive here to avoid circular dependency.\r\n            return isReadonly ? readonly(res) : reactive(res);\r\n        }\r\n        return res;\r\n    };\r\n}\r\nconst set = /*#__PURE__*/ createSetter();\r\nconst shallowSet = /*#__PURE__*/ createSetter(true);\r\nfunction createSetter(shallow = false) {\r\n    return function set(target, key, value, receiver) {\r\n        const oldValue = target[key];\r\n        if (!shallow) {\r\n            value = toRaw(value);\r\n            if (!isArray(target) && isRef(oldValue) && !isRef(value)) {\r\n                oldValue.value = value;\r\n                return true;\r\n            }\r\n        }\r\n        const hadKey = hasOwn(target, key);\r\n        const result = Reflect.set(target, key, value, receiver);\r\n        // don't trigger if target is something up in the prototype chain of original\r\n        if (target === toRaw(receiver)) {\r\n            if (!hadKey) {\r\n                trigger(target, \"add\" /* ADD */, key, value);\r\n            }\r\n            else if (hasChanged(value, oldValue)) {\r\n                trigger(target, \"set\" /* SET */, key, value, oldValue);\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n}\r\nfunction deleteProperty(target, key) {\r\n    const hadKey = hasOwn(target, key);\r\n    const oldValue = target[key];\r\n    const result = Reflect.deleteProperty(target, key);\r\n    if (result && hadKey) {\r\n        trigger(target, \"delete\" /* DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction has(target, key) {\r\n    const result = Reflect.has(target, key);\r\n    track(target, \"has\" /* HAS */, key);\r\n    return result;\r\n}\r\nfunction ownKeys(target) {\r\n    track(target, \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n    return Reflect.ownKeys(target);\r\n}\r\nconst mutableHandlers = {\r\n    get,\r\n    set,\r\n    deleteProperty,\r\n    has,\r\n    ownKeys\r\n};\r\nconst readonlyHandlers = {\r\n    get: readonlyGet,\r\n    has,\r\n    ownKeys,\r\n    set(target, key) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`Set operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n        }\r\n        return true;\r\n    },\r\n    deleteProperty(target, key) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`Delete operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n        }\r\n        return true;\r\n    }\r\n};\r\nconst shallowReactiveHandlers = extend({}, mutableHandlers, {\r\n    get: shallowGet,\r\n    set: shallowSet\r\n});\r\n// Props handlers are special in the sense that it should not unwrap top-level\r\n// refs (in order to allow refs to be explicitly passed down), but should\r\n// retain the reactivity of the normal readonly object.\r\nconst shallowReadonlyHandlers = extend({}, readonlyHandlers, {\r\n    get: shallowReadonlyGet\r\n});\n\nconst toReactive = (value) => isObject(value) ? reactive(value) : value;\r\nconst toReadonly = (value) => isObject(value) ? readonly(value) : value;\r\nconst toShallow = (value) => value;\r\nconst getProto = (v) => Reflect.getPrototypeOf(v);\r\nfunction get$1(target, key, wrap) {\r\n    target = toRaw(target);\r\n    const rawKey = toRaw(key);\r\n    if (key !== rawKey) {\r\n        track(target, \"get\" /* GET */, key);\r\n    }\r\n    track(target, \"get\" /* GET */, rawKey);\r\n    const { has, get } = getProto(target);\r\n    if (has.call(target, key)) {\r\n        return wrap(get.call(target, key));\r\n    }\r\n    else if (has.call(target, rawKey)) {\r\n        return wrap(get.call(target, rawKey));\r\n    }\r\n}\r\nfunction has$1(key) {\r\n    const target = toRaw(this);\r\n    const rawKey = toRaw(key);\r\n    if (key !== rawKey) {\r\n        track(target, \"has\" /* HAS */, key);\r\n    }\r\n    track(target, \"has\" /* HAS */, rawKey);\r\n    const has = getProto(target).has;\r\n    return has.call(target, key) || has.call(target, rawKey);\r\n}\r\nfunction size(target) {\r\n    target = toRaw(target);\r\n    track(target, \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n    return Reflect.get(getProto(target), 'size', target);\r\n}\r\nfunction add(value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const proto = getProto(target);\r\n    const hadKey = proto.has.call(target, value);\r\n    const result = proto.add.call(target, value);\r\n    if (!hadKey) {\r\n        trigger(target, \"add\" /* ADD */, value, value);\r\n    }\r\n    return result;\r\n}\r\nfunction set$1(key, value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const { has, get, set } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        checkIdentityKeys(target, has, key);\r\n    }\r\n    const oldValue = get.call(target, key);\r\n    const result = set.call(target, key, value);\r\n    if (!hadKey) {\r\n        trigger(target, \"add\" /* ADD */, key, value);\r\n    }\r\n    else if (hasChanged(value, oldValue)) {\r\n        trigger(target, \"set\" /* SET */, key, value, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction deleteEntry(key) {\r\n    const target = toRaw(this);\r\n    const { has, get, delete: del } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        checkIdentityKeys(target, has, key);\r\n    }\r\n    const oldValue = get ? get.call(target, key) : undefined;\r\n    // forward the operation before queueing reactions\r\n    const result = del.call(target, key);\r\n    if (hadKey) {\r\n        trigger(target, \"delete\" /* DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction clear() {\r\n    const target = toRaw(this);\r\n    const hadItems = target.size !== 0;\r\n    const oldTarget = (process.env.NODE_ENV !== 'production')\r\n        ? target instanceof Map\r\n            ? new Map(target)\r\n            : new Set(target)\r\n        : undefined;\r\n    // forward the operation before queueing reactions\r\n    const result = getProto(target).clear.call(target);\r\n    if (hadItems) {\r\n        trigger(target, \"clear\" /* CLEAR */, undefined, undefined, oldTarget);\r\n    }\r\n    return result;\r\n}\r\nfunction createForEach(isReadonly, shallow) {\r\n    return function forEach(callback, thisArg) {\r\n        const observed = this;\r\n        const target = toRaw(observed);\r\n        const wrap = isReadonly ? toReadonly : shallow ? toShallow : toReactive;\r\n        !isReadonly && track(target, \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n        // important: create sure the callback is\r\n        // 1. invoked with the reactive map as `this` and 3rd arg\r\n        // 2. the value received should be a corresponding reactive/readonly.\r\n        function wrappedCallback(value, key) {\r\n            return callback.call(thisArg, wrap(value), wrap(key), observed);\r\n        }\r\n        return getProto(target).forEach.call(target, wrappedCallback);\r\n    };\r\n}\r\nfunction createIterableMethod(method, isReadonly, shallow) {\r\n    return function (...args) {\r\n        const target = toRaw(this);\r\n        const isMap = target instanceof Map;\r\n        const isPair = method === 'entries' || (method === Symbol.iterator && isMap);\r\n        const isKeyOnly = method === 'keys' && isMap;\r\n        const innerIterator = getProto(target)[method].apply(target, args);\r\n        const wrap = isReadonly ? toReadonly : shallow ? toShallow : toReactive;\r\n        !isReadonly &&\r\n            track(target, \"iterate\" /* ITERATE */, isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY);\r\n        // return a wrapped iterator which returns observed versions of the\r\n        // values emitted from the real iterator\r\n        return {\r\n            // iterator protocol\r\n            next() {\r\n                const { value, done } = innerIterator.next();\r\n                return done\r\n                    ? { value, done }\r\n                    : {\r\n                        value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),\r\n                        done\r\n                    };\r\n            },\r\n            // iterable protocol\r\n            [Symbol.iterator]() {\r\n                return this;\r\n            }\r\n        };\r\n    };\r\n}\r\nfunction createReadonlyMethod(type) {\r\n    return function (...args) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            const key = args[0] ? `on key \"${args[0]}\" ` : ``;\r\n            console.warn(`${capitalize(type)} operation ${key}failed: target is readonly.`, toRaw(this));\r\n        }\r\n        return type === \"delete\" /* DELETE */ ? false : this;\r\n    };\r\n}\r\nconst mutableInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key, toReactive);\r\n    },\r\n    get size() {\r\n        return size(this);\r\n    },\r\n    has: has$1,\r\n    add,\r\n    set: set$1,\r\n    delete: deleteEntry,\r\n    clear,\r\n    forEach: createForEach(false, false)\r\n};\r\nconst shallowInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key, toShallow);\r\n    },\r\n    get size() {\r\n        return size(this);\r\n    },\r\n    has: has$1,\r\n    add,\r\n    set: set$1,\r\n    delete: deleteEntry,\r\n    clear,\r\n    forEach: createForEach(false, true)\r\n};\r\nconst readonlyInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key, toReadonly);\r\n    },\r\n    get size() {\r\n        return size(this);\r\n    },\r\n    has: has$1,\r\n    add: createReadonlyMethod(\"add\" /* ADD */),\r\n    set: createReadonlyMethod(\"set\" /* SET */),\r\n    delete: createReadonlyMethod(\"delete\" /* DELETE */),\r\n    clear: createReadonlyMethod(\"clear\" /* CLEAR */),\r\n    forEach: createForEach(true, false)\r\n};\r\nconst iteratorMethods = ['keys', 'values', 'entries', Symbol.iterator];\r\niteratorMethods.forEach(method => {\r\n    mutableInstrumentations[method] = createIterableMethod(method, false, false);\r\n    readonlyInstrumentations[method] = createIterableMethod(method, true, false);\r\n    shallowInstrumentations[method] = createIterableMethod(method, false, true);\r\n});\r\nfunction createInstrumentationGetter(isReadonly, shallow) {\r\n    const instrumentations = shallow\r\n        ? shallowInstrumentations\r\n        : isReadonly\r\n            ? readonlyInstrumentations\r\n            : mutableInstrumentations;\r\n    return (target, key, receiver) => {\r\n        if (key === \"__v_isReactive\" /* IS_REACTIVE */) {\r\n            return !isReadonly;\r\n        }\r\n        else if (key === \"__v_isReadonly\" /* IS_READONLY */) {\r\n            return isReadonly;\r\n        }\r\n        else if (key === \"__v_raw\" /* RAW */) {\r\n            return target;\r\n        }\r\n        return Reflect.get(hasOwn(instrumentations, key) && key in target\r\n            ? instrumentations\r\n            : target, key, receiver);\r\n    };\r\n}\r\nconst mutableCollectionHandlers = {\r\n    get: createInstrumentationGetter(false, false)\r\n};\r\nconst shallowCollectionHandlers = {\r\n    get: createInstrumentationGetter(false, true)\r\n};\r\nconst readonlyCollectionHandlers = {\r\n    get: createInstrumentationGetter(true, false)\r\n};\r\nfunction checkIdentityKeys(target, has, key) {\r\n    const rawKey = toRaw(key);\r\n    if (rawKey !== key && has.call(target, rawKey)) {\r\n        const type = toRawType(target);\r\n        console.warn(`Reactive ${type} contains both the raw and reactive ` +\r\n            `versions of the same object${type === `Map` ? `as keys` : ``}, ` +\r\n            `which can lead to inconsistencies. ` +\r\n            `Avoid differentiating between the raw and reactive versions ` +\r\n            `of an object and only use the reactive version if possible.`);\r\n    }\r\n}\n\nconst collectionTypes = new Set([Set, Map, WeakMap, WeakSet]);\r\nconst isObservableType = /*#__PURE__*/ makeMap('Object,Array,Map,Set,WeakMap,WeakSet');\r\nconst canObserve = (value) => {\r\n    return (!value[\"__v_skip\" /* SKIP */] &&\r\n        isObservableType(toRawType(value)) &&\r\n        !Object.isFrozen(value));\r\n};\r\nfunction reactive(target) {\r\n    // if trying to observe a readonly proxy, return the readonly version.\r\n    if (target && target[\"__v_isReadonly\" /* IS_READONLY */]) {\r\n        return target;\r\n    }\r\n    return createReactiveObject(target, false, mutableHandlers, mutableCollectionHandlers);\r\n}\r\n// Return a reactive-copy of the original object, where only the root level\r\n// properties are reactive, and does NOT unwrap refs nor recursively convert\r\n// returned properties.\r\nfunction shallowReactive(target) {\r\n    return createReactiveObject(target, false, shallowReactiveHandlers, shallowCollectionHandlers);\r\n}\r\nfunction readonly(target) {\r\n    return createReactiveObject(target, true, readonlyHandlers, readonlyCollectionHandlers);\r\n}\r\n// Return a reactive-copy of the original object, where only the root level\r\n// properties are readonly, and does NOT unwrap refs nor recursively convert\r\n// returned properties.\r\n// This is used for creating the props proxy object for stateful components.\r\nfunction shallowReadonly(target) {\r\n    return createReactiveObject(target, true, shallowReadonlyHandlers, readonlyCollectionHandlers);\r\n}\r\nfunction createReactiveObject(target, isReadonly, baseHandlers, collectionHandlers) {\r\n    if (!isObject(target)) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`value cannot be made reactive: ${String(target)}`);\r\n        }\r\n        return target;\r\n    }\r\n    // target is already a Proxy, return it.\r\n    // exception: calling readonly() on a reactive object\r\n    if (target[\"__v_raw\" /* RAW */] &&\r\n        !(isReadonly && target[\"__v_isReactive\" /* IS_REACTIVE */])) {\r\n        return target;\r\n    }\r\n    // target already has corresponding Proxy\r\n    if (hasOwn(target, isReadonly ? \"__v_readonly\" /* READONLY */ : \"__v_reactive\" /* REACTIVE */)) {\r\n        return isReadonly\r\n            ? target[\"__v_readonly\" /* READONLY */]\r\n            : target[\"__v_reactive\" /* REACTIVE */];\r\n    }\r\n    // only a whitelist of value types can be observed.\r\n    if (!canObserve(target)) {\r\n        return target;\r\n    }\r\n    const observed = new Proxy(target, collectionTypes.has(target.constructor) ? collectionHandlers : baseHandlers);\r\n    def(target, isReadonly ? \"__v_readonly\" /* READONLY */ : \"__v_reactive\" /* REACTIVE */, observed);\r\n    return observed;\r\n}\r\nfunction isReactive(value) {\r\n    if (isReadonly(value)) {\r\n        return isReactive(value[\"__v_raw\" /* RAW */]);\r\n    }\r\n    return !!(value && value[\"__v_isReactive\" /* IS_REACTIVE */]);\r\n}\r\nfunction isReadonly(value) {\r\n    return !!(value && value[\"__v_isReadonly\" /* IS_READONLY */]);\r\n}\r\nfunction isProxy(value) {\r\n    return isReactive(value) || isReadonly(value);\r\n}\r\nfunction toRaw(observed) {\r\n    return ((observed && toRaw(observed[\"__v_raw\" /* RAW */])) || observed);\r\n}\r\nfunction markRaw(value) {\r\n    def(value, \"__v_skip\" /* SKIP */, true);\r\n    return value;\r\n}\n\nconst convert = (val) => isObject(val) ? reactive(val) : val;\r\nfunction isRef(r) {\r\n    return r ? r.__v_isRef === true : false;\r\n}\r\nfunction ref(value) {\r\n    return createRef(value);\r\n}\r\nfunction shallowRef(value) {\r\n    return createRef(value, true);\r\n}\r\nfunction createRef(rawValue, shallow = false) {\r\n    if (isRef(rawValue)) {\r\n        return rawValue;\r\n    }\r\n    let value = shallow ? rawValue : convert(rawValue);\r\n    const r = {\r\n        __v_isRef: true,\r\n        get value() {\r\n            track(r, \"get\" /* GET */, 'value');\r\n            return value;\r\n        },\r\n        set value(newVal) {\r\n            if (hasChanged(toRaw(newVal), rawValue)) {\r\n                rawValue = newVal;\r\n                value = shallow ? newVal : convert(newVal);\r\n                trigger(r, \"set\" /* SET */, 'value', (process.env.NODE_ENV !== 'production') ? { newValue: newVal } : void 0);\r\n            }\r\n        }\r\n    };\r\n    return r;\r\n}\r\nfunction triggerRef(ref) {\r\n    trigger(ref, \"set\" /* SET */, 'value', (process.env.NODE_ENV !== 'production') ? { newValue: ref.value } : void 0);\r\n}\r\nfunction unref(ref) {\r\n    return isRef(ref) ? ref.value : ref;\r\n}\r\nfunction customRef(factory) {\r\n    const { get, set } = factory(() => track(r, \"get\" /* GET */, 'value'), () => trigger(r, \"set\" /* SET */, 'value'));\r\n    const r = {\r\n        __v_isRef: true,\r\n        get value() {\r\n            return get();\r\n        },\r\n        set value(v) {\r\n            set(v);\r\n        }\r\n    };\r\n    return r;\r\n}\r\nfunction toRefs(object) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isProxy(object)) {\r\n        console.warn(`toRefs() expects a reactive object but received a plain one.`);\r\n    }\r\n    const ret = {};\r\n    for (const key in object) {\r\n        ret[key] = toRef(object, key);\r\n    }\r\n    return ret;\r\n}\r\nfunction toRef(object, key) {\r\n    return {\r\n        __v_isRef: true,\r\n        get value() {\r\n            return object[key];\r\n        },\r\n        set value(newVal) {\r\n            object[key] = newVal;\r\n        }\r\n    };\r\n}\n\nfunction computed(getterOrOptions) {\r\n    let getter;\r\n    let setter;\r\n    if (isFunction(getterOrOptions)) {\r\n        getter = getterOrOptions;\r\n        setter = (process.env.NODE_ENV !== 'production')\r\n            ? () => {\r\n                console.warn('Write operation failed: computed value is readonly');\r\n            }\r\n            : NOOP;\r\n    }\r\n    else {\r\n        getter = getterOrOptions.get;\r\n        setter = getterOrOptions.set;\r\n    }\r\n    let dirty = true;\r\n    let value;\r\n    let computed;\r\n    const runner = effect(getter, {\r\n        lazy: true,\r\n        scheduler: () => {\r\n            if (!dirty) {\r\n                dirty = true;\r\n                trigger(computed, \"set\" /* SET */, 'value');\r\n            }\r\n        }\r\n    });\r\n    computed = {\r\n        __v_isRef: true,\r\n        // expose effect so computed can be stopped\r\n        effect: runner,\r\n        get value() {\r\n            if (dirty) {\r\n                value = runner();\r\n                dirty = false;\r\n            }\r\n            track(computed, \"get\" /* GET */, 'value');\r\n            return value;\r\n        },\r\n        set value(newValue) {\r\n            setter(newValue);\r\n        }\r\n    };\r\n    return computed;\r\n}\n\nexport { ITERATE_KEY, computed, customRef, effect, enableTracking, isProxy, isReactive, isReadonly, isRef, markRaw, pauseTracking, reactive, readonly, ref, resetTracking, shallowReactive, shallowReadonly, shallowRef, stop, toRaw, toRef, toRefs, track, trigger, triggerRef, unref };\n","module.exports = require(\"regenerator-runtime\");\n"],"sourceRoot":""}